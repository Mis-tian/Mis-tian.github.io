@primary-color: #108ee9;
/* stylelint-disable declaration-bang-space-before */
.bezierEasingMixin() {
@functions: ~`(function() {
  var NEWTON_ITERATIONS = 4;
  var NEWTON_MIN_SLOPE = 0.001;
  var SUBDIVISION_PRECISION = 0.0000001;
  var SUBDIVISION_MAX_ITERATIONS = 10;

  var kSplineTableSize = 11;
  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);

  var float32ArraySupported = typeof Float32Array === 'function';

  function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }
  function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }
  function C (aA1)      { return 3.0 * aA1; }

  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
  function calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }

  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.
  function getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }

  function binarySubdivide (aX, aA, aB, mX1, mX2) {
    var currentX, currentT, i = 0;
    do {
      currentT = aA + (aB - aA) / 2.0;
      currentX = calcBezier(currentT, mX1, mX2) - aX;
      if (currentX > 0.0) {
        aB = currentT;
      } else {
        aA = currentT;
      }
    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
    return currentT;
  }

  function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {
   for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
     var currentSlope = getSlope(aGuessT, mX1, mX2);
     if (currentSlope === 0.0) {
       return aGuessT;
     }
     var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
     aGuessT -= currentX / currentSlope;
   }
   return aGuessT;
  }

  var BezierEasing = function (mX1, mY1, mX2, mY2) {
    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {
      throw new Error('bezier x values must be in [0, 1] range');
    }

    // Precompute samples table
    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
    if (mX1 !== mY1 || mX2 !== mY2) {
      for (var i = 0; i < kSplineTableSize; ++i) {
        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
      }
    }

    function getTForX (aX) {
      var intervalStart = 0.0;
      var currentSample = 1;
      var lastSample = kSplineTableSize - 1;

      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
        intervalStart += kSampleStepSize;
      }
      --currentSample;

      // Interpolate to provide an initial guess for t
      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
      var guessForT = intervalStart + dist * kSampleStepSize;

      var initialSlope = getSlope(guessForT, mX1, mX2);
      if (initialSlope >= NEWTON_MIN_SLOPE) {
        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
      } else if (initialSlope === 0.0) {
        return guessForT;
      } else {
        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
      }
    }

    return function BezierEasing (x) {
      if (mX1 === mY1 && mX2 === mY2) {
        return x; // linear
      }
      // Because JavaScript number are imprecise, we should guarantee the extremes are right.
      if (x === 0) {
        return 0;
      }
      if (x === 1) {
        return 1;
      }
      return calcBezier(getTForX(x), mY1, mY2);
    };
  };

  this.colorEasing = BezierEasing(0.26, 0.09, 0.37, 0.18);
})()`;
}
// It is hacky way to make this function will be compiled preferentially by less
// resolve error: `ReferenceError: colorPalette is not defined`
// https://github.com/ant-design/ant-motion/issues/44
.bezierEasingMixin();

/* stylelint-disable declaration-bang-space-before */
.tinyColorMixin() {
@functions: ~`(function() {
// TinyColor v1.4.1
// https://github.com/bgrins/TinyColor
// 2016-07-07, Brian Grinstead, MIT License
var trimLeft = /^\s+/,
    trimRight = /\s+$/,
    tinyCounter = 0,
    mathRound = Math.round,
    mathMin = Math.min,
    mathMax = Math.max,
    mathRandom = Math.random;

function tinycolor (color, opts) {

    color = (color) ? color : '';
    opts = opts || { };

    // If input is already a tinycolor, return itself
    if (color instanceof tinycolor) {
       return color;
    }
    // If we are called as a function, call using new instead
    if (!(this instanceof tinycolor)) {
        return new tinycolor(color, opts);
    }

    var rgb = inputToRGB(color);
    this._originalInput = color,
    this._r = rgb.r,
    this._g = rgb.g,
    this._b = rgb.b,
    this._a = rgb.a,
    this._roundA = mathRound(100*this._a) / 100,
    this._format = opts.format || rgb.format;
    this._gradientType = opts.gradientType;

    // Don't let the range of [0,255] come back in [0,1].
    // Potentially lose a little bit of precision here, but will fix issues where
    // .5 gets interpreted as half of the total, instead of half of 1
    // If it was supposed to be 128, this was already taken care of by inputToRgb
    if (this._r < 1) { this._r = mathRound(this._r); }
    if (this._g < 1) { this._g = mathRound(this._g); }
    if (this._b < 1) { this._b = mathRound(this._b); }

    this._ok = rgb.ok;
    this._tc_id = tinyCounter++;
}

tinycolor.prototype = {
    isDark: function() {
        return this.getBrightness() < 128;
    },
    isLight: function() {
        return !this.isDark();
    },
    isValid: function() {
        return this._ok;
    },
    getOriginalInput: function() {
      return this._originalInput;
    },
    getFormat: function() {
        return this._format;
    },
    getAlpha: function() {
        return this._a;
    },
    getBrightness: function() {
        //http://www.w3.org/TR/AERT#color-contrast
        var rgb = this.toRgb();
        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;
    },
    getLuminance: function() {
        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
        var rgb = this.toRgb();
        var RsRGB, GsRGB, BsRGB, R, G, B;
        RsRGB = rgb.r/255;
        GsRGB = rgb.g/255;
        BsRGB = rgb.b/255;

        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}
        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}
        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}
        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);
    },
    setAlpha: function(value) {
        this._a = boundAlpha(value);
        this._roundA = mathRound(100*this._a) / 100;
        return this;
    },
    toHsv: function() {
        var hsv = rgbToHsv(this._r, this._g, this._b);
        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };
    },
    toHsvString: function() {
        var hsv = rgbToHsv(this._r, this._g, this._b);
        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);
        return (this._a == 1) ?
          "hsv("  + h + ", " + s + "%, " + v + "%)" :
          "hsva(" + h + ", " + s + "%, " + v + "%, "+ this._roundA + ")";
    },
    toHsl: function() {
        var hsl = rgbToHsl(this._r, this._g, this._b);
        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };
    },
    toHslString: function() {
        var hsl = rgbToHsl(this._r, this._g, this._b);
        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);
        return (this._a == 1) ?
          "hsl("  + h + ", " + s + "%, " + l + "%)" :
          "hsla(" + h + ", " + s + "%, " + l + "%, "+ this._roundA + ")";
    },
    toHex: function(allow3Char) {
        return rgbToHex(this._r, this._g, this._b, allow3Char);
    },
    toHexString: function(allow3Char) {
        return '#' + this.toHex(allow3Char);
    },
    toHex8: function(allow4Char) {
        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
    },
    toHex8String: function(allow4Char) {
        return '#' + this.toHex8(allow4Char);
    },
    toRgb: function() {
        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };
    },
    toRgbString: function() {
        return (this._a == 1) ?
          "rgb("  + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" :
          "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
    },
    toPercentageRgb: function() {
        return { r: mathRound(bound01(this._r, 255) * 100) + "%", g: mathRound(bound01(this._g, 255) * 100) + "%", b: mathRound(bound01(this._b, 255) * 100) + "%", a: this._a };
    },
    toPercentageRgbString: function() {
        return (this._a == 1) ?
          "rgb("  + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" :
          "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
    },
    toName: function() {
        if (this._a === 0) {
            return "transparent";
        }

        if (this._a < 1) {
            return false;
        }

        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
    },
    toFilter: function(secondColor) {
        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);
        var secondHex8String = hex8String;
        var gradientType = this._gradientType ? "GradientType = 1, " : "";

        if (secondColor) {
            var s = tinycolor(secondColor);
            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);
        }

        return "progid:DXImageTransform.Microsoft.gradient("+gradientType+"startColorstr="+hex8String+",endColorstr="+secondHex8String+")";
    },
    toString: function(format) {
        var formatSet = !!format;
        format = format || this._format;

        var formattedString = false;
        var hasAlpha = this._a < 1 && this._a >= 0;
        var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");

        if (needsAlphaFormat) {
            // Special case for "transparent", all other non-alpha formats
            // will return rgba when there is transparency.
            if (format === "name" && this._a === 0) {
                return this.toName();
            }
            return this.toRgbString();
        }
        if (format === "rgb") {
            formattedString = this.toRgbString();
        }
        if (format === "prgb") {
            formattedString = this.toPercentageRgbString();
        }
        if (format === "hex" || format === "hex6") {
            formattedString = this.toHexString();
        }
        if (format === "hex3") {
            formattedString = this.toHexString(true);
        }
        if (format === "hex4") {
            formattedString = this.toHex8String(true);
        }
        if (format === "hex8") {
            formattedString = this.toHex8String();
        }
        if (format === "name") {
            formattedString = this.toName();
        }
        if (format === "hsl") {
            formattedString = this.toHslString();
        }
        if (format === "hsv") {
            formattedString = this.toHsvString();
        }

        return formattedString || this.toHexString();
    },
    clone: function() {
        return tinycolor(this.toString());
    },

    _applyModification: function(fn, args) {
        var color = fn.apply(null, [this].concat([].slice.call(args)));
        this._r = color._r;
        this._g = color._g;
        this._b = color._b;
        this.setAlpha(color._a);
        return this;
    },
    lighten: function() {
        return this._applyModification(lighten, arguments);
    },
    brighten: function() {
        return this._applyModification(brighten, arguments);
    },
    darken: function() {
        return this._applyModification(darken, arguments);
    },
    desaturate: function() {
        return this._applyModification(desaturate, arguments);
    },
    saturate: function() {
        return this._applyModification(saturate, arguments);
    },
    greyscale: function() {
        return this._applyModification(greyscale, arguments);
    },
    spin: function() {
        return this._applyModification(spin, arguments);
    },

    _applyCombination: function(fn, args) {
        return fn.apply(null, [this].concat([].slice.call(args)));
    },
    analogous: function() {
        return this._applyCombination(analogous, arguments);
    },
    complement: function() {
        return this._applyCombination(complement, arguments);
    },
    monochromatic: function() {
        return this._applyCombination(monochromatic, arguments);
    },
    splitcomplement: function() {
        return this._applyCombination(splitcomplement, arguments);
    },
    triad: function() {
        return this._applyCombination(triad, arguments);
    },
    tetrad: function() {
        return this._applyCombination(tetrad, arguments);
    }
};

// If input is an object, force 1 into "1.0" to handle ratios properly
// String input requires "1.0" as input, so 1 will be treated as 1
tinycolor.fromRatio = function(color, opts) {
    if (typeof color == "object") {
        var newColor = {};
        for (var i in color) {
            if (color.hasOwnProperty(i)) {
                if (i === "a") {
                    newColor[i] = color[i];
                }
                else {
                    newColor[i] = convertToPercentage(color[i]);
                }
            }
        }
        color = newColor;
    }

    return tinycolor(color, opts);
};

// Given a string or object, convert that input to RGB
// Possible string inputs:
//
//     "red"
//     "#f00" or "f00"
//     "#ff0000" or "ff0000"
//     "#ff000000" or "ff000000"
//     "rgb 255 0 0" or "rgb (255, 0, 0)"
//     "rgb 1.0 0 0" or "rgb (1, 0, 0)"
//     "rgba (255, 0, 0, 1)" or "rgba 255, 0, 0, 1"
//     "rgba (1.0, 0, 0, 1)" or "rgba 1.0, 0, 0, 1"
//     "hsl(0, 100%, 50%)" or "hsl 0 100% 50%"
//     "hsla(0, 100%, 50%, 1)" or "hsla 0 100% 50%, 1"
//     "hsv(0, 100%, 100%)" or "hsv 0 100% 100%"
//
function inputToRGB(color) {

    var rgb = { r: 0, g: 0, b: 0 };
    var a = 1;
    var s = null;
    var v = null;
    var l = null;
    var ok = false;
    var format = false;

    if (typeof color == "string") {
        color = stringInputToObject(color);
    }

    if (typeof color == "object") {
        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
            rgb = rgbToRgb(color.r, color.g, color.b);
            ok = true;
            format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
        }
        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
            s = convertToPercentage(color.s);
            v = convertToPercentage(color.v);
            rgb = hsvToRgb(color.h, s, v);
            ok = true;
            format = "hsv";
        }
        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
            s = convertToPercentage(color.s);
            l = convertToPercentage(color.l);
            rgb = hslToRgb(color.h, s, l);
            ok = true;
            format = "hsl";
        }

        if (color.hasOwnProperty("a")) {
            a = color.a;
        }
    }

    a = boundAlpha(a);

    return {
        ok: ok,
        format: color.format || format,
        r: mathMin(255, mathMax(rgb.r, 0)),
        g: mathMin(255, mathMax(rgb.g, 0)),
        b: mathMin(255, mathMax(rgb.b, 0)),
        a: a
    };
}

// Conversion Functions
// --------------------

// rgbToHsl, rgbToHsv, hslToRgb, hsvToRgb modified from:
// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>

// rgbToRgb
// Handle bounds / percentage checking to conform to CSS color spec
// <http://www.w3.org/TR/css3-color/>
// *Assumes:* r, g, b in [0, 255] or [0, 1]
// *Returns:* { r, g, b } in [0, 255]
function rgbToRgb(r, g, b){
    return {
        r: bound01(r, 255) * 255,
        g: bound01(g, 255) * 255,
        b: bound01(b, 255) * 255
    };
}

// rgbToHsl
// Converts an RGB color value to HSL.
// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
// *Returns:* { h, s, l } in [0,1]
function rgbToHsl(r, g, b) {

    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);

    var max = mathMax(r, g, b), min = mathMin(r, g, b);
    var h, s, l = (max + min) / 2;

    if(max == min) {
        h = s = 0; // achromatic
    }
    else {
        var d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        switch(max) {
            case r: h = (g - b) / d + (g < b ? 6 : 0); break;
            case g: h = (b - r) / d + 2; break;
            case b: h = (r - g) / d + 4; break;
        }

        h /= 6;
    }

    return { h: h, s: s, l: l };
}

// hslToRgb
// Converts an HSL color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
function hslToRgb(h, s, l) {
    var r, g, b;

    h = bound01(h, 360);
    s = bound01(s, 100);
    l = bound01(l, 100);

    function hue2rgb(p, q, t) {
        if(t < 0) t += 1;
        if(t > 1) t -= 1;
        if(t < 1/6) return p + (q - p) * 6 * t;
        if(t < 1/2) return q;
        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;
        return p;
    }

    if(s === 0) {
        r = g = b = l; // achromatic
    }
    else {
        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        var p = 2 * l - q;
        r = hue2rgb(p, q, h + 1/3);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1/3);
    }

    return { r: r * 255, g: g * 255, b: b * 255 };
}

// rgbToHsv
// Converts an RGB color value to HSV
// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
// *Returns:* { h, s, v } in [0,1]
function rgbToHsv(r, g, b) {

    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);

    var max = mathMax(r, g, b), min = mathMin(r, g, b);
    var h, s, v = max;

    var d = max - min;
    s = max === 0 ? 0 : d / max;

    if(max == min) {
        h = 0; // achromatic
    }
    else {
        switch(max) {
            case r: h = (g - b) / d + (g < b ? 6 : 0); break;
            case g: h = (b - r) / d + 2; break;
            case b: h = (r - g) / d + 4; break;
        }
        h /= 6;
    }
    return { h: h, s: s, v: v };
}

// hsvToRgb
// Converts an HSV color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
 function hsvToRgb(h, s, v) {

    h = bound01(h, 360) * 6;
    s = bound01(s, 100);
    v = bound01(v, 100);

    var i = Math.floor(h),
        f = h - i,
        p = v * (1 - s),
        q = v * (1 - f * s),
        t = v * (1 - (1 - f) * s),
        mod = i % 6,
        r = [v, q, p, p, t, v][mod],
        g = [t, v, v, q, p, p][mod],
        b = [p, p, t, v, v, q][mod];

    return { r: r * 255, g: g * 255, b: b * 255 };
}

// rgbToHex
// Converts an RGB color to hex
// Assumes r, g, and b are contained in the set [0, 255]
// Returns a 3 or 6 character hex
function rgbToHex(r, g, b, allow3Char) {

    var hex = [
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16))
    ];

    // Return a 3 character hex if possible
    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
    }

    return hex.join("");
}

// rgbaToHex
// Converts an RGBA color plus alpha transparency to hex
// Assumes r, g, b are contained in the set [0, 255] and
// a in [0, 1]. Returns a 4 or 8 character rgba hex
function rgbaToHex(r, g, b, a, allow4Char) {

    var hex = [
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16)),
        pad2(convertDecimalToHex(a))
    ];

    // Return a 4 character hex if possible
    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
    }

    return hex.join("");
}

// rgbaToArgbHex
// Converts an RGBA color to an ARGB Hex8 string
// Rarely used, but required for "toFilter()"
function rgbaToArgbHex(r, g, b, a) {

    var hex = [
        pad2(convertDecimalToHex(a)),
        pad2(mathRound(r).toString(16)),
        pad2(mathRound(g).toString(16)),
        pad2(mathRound(b).toString(16))
    ];

    return hex.join("");
}

// equals
// Can be called with any tinycolor input
tinycolor.equals = function (color1, color2) {
    if (!color1 || !color2) { return false; }
    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
};

tinycolor.random = function() {
    return tinycolor.fromRatio({
        r: mathRandom(),
        g: mathRandom(),
        b: mathRandom()
    });
};

// Modification Functions
// ----------------------
// Thanks to less.js for some of the basics here
// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>

function desaturate(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.s -= amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
}

function saturate(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.s += amount / 100;
    hsl.s = clamp01(hsl.s);
    return tinycolor(hsl);
}

function greyscale(color) {
    return tinycolor(color).desaturate(100);
}

function lighten (color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.l += amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
}

function brighten(color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var rgb = tinycolor(color).toRgb();
    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));
    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));
    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));
    return tinycolor(rgb);
}

function darken (color, amount) {
    amount = (amount === 0) ? 0 : (amount || 10);
    var hsl = tinycolor(color).toHsl();
    hsl.l -= amount / 100;
    hsl.l = clamp01(hsl.l);
    return tinycolor(hsl);
}

// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
// Values outside of this range will be wrapped into this range.
function spin(color, amount) {
    var hsl = tinycolor(color).toHsl();
    var hue = (hsl.h + amount) % 360;
    hsl.h = hue < 0 ? 360 + hue : hue;
    return tinycolor(hsl);
}

// Combination Functions
// ---------------------
// Thanks to jQuery xColor for some of the ideas behind these
// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>

function complement(color) {
    var hsl = tinycolor(color).toHsl();
    hsl.h = (hsl.h + 180) % 360;
    return tinycolor(hsl);
}

function triad(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })
    ];
}

function tetrad(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),
        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })
    ];
}

function splitcomplement(color) {
    var hsl = tinycolor(color).toHsl();
    var h = hsl.h;
    return [
        tinycolor(color),
        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),
        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})
    ];
}

function analogous(color, results, slices) {
    results = results || 6;
    slices = slices || 30;

    var hsl = tinycolor(color).toHsl();
    var part = 360 / slices;
    var ret = [tinycolor(color)];

    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {
        hsl.h = (hsl.h + part) % 360;
        ret.push(tinycolor(hsl));
    }
    return ret;
}

function monochromatic(color, results) {
    results = results || 6;
    var hsv = tinycolor(color).toHsv();
    var h = hsv.h, s = hsv.s, v = hsv.v;
    var ret = [];
    var modification = 1 / results;

    while (results--) {
        ret.push(tinycolor({ h: h, s: s, v: v}));
        v = (v + modification) % 1;
    }

    return ret;
}

// Utility Functions
// ---------------------

tinycolor.mix = function(color1, color2, amount) {
    amount = (amount === 0) ? 0 : (amount || 50);

    var rgb1 = tinycolor(color1).toRgb();
    var rgb2 = tinycolor(color2).toRgb();

    var p = amount / 100;

    var rgba = {
        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,
        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,
        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,
        a: ((rgb2.a - rgb1.a) * p) + rgb1.a
    };

    return tinycolor(rgba);
};

// Readability Functions
// ---------------------
// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)

// contrast
// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)
tinycolor.readability = function(color1, color2) {
    var c1 = tinycolor(color1);
    var c2 = tinycolor(color2);
    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);
};

// isReadable
// Ensure that foreground and background color combinations meet WCAG2 guidelines.
// The third argument is an optional Object.
//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';
//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.
// If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.

// *Example*
//    tinycolor.isReadable("#000", "#111") => false
//    tinycolor.isReadable("#000", "#111",{level:"AA",size:"large"}) => false
tinycolor.isReadable = function(color1, color2, wcag2) {
    var readability = tinycolor.readability(color1, color2);
    var wcag2Parms, out;

    out = false;

    wcag2Parms = validateWCAG2Parms(wcag2);
    switch (wcag2Parms.level + wcag2Parms.size) {
        case "AAsmall":
        case "AAAlarge":
            out = readability >= 4.5;
            break;
        case "AAlarge":
            out = readability >= 3;
            break;
        case "AAAsmall":
            out = readability >= 7;
            break;
    }
    return out;

};

// mostReadable
// Given a base color and a list of possible foreground or background
// colors for that base, returns the most readable color.
// Optionally returns Black or White if the most readable color is unreadable.
// *Example*
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:false}).toHexString(); // "#112255"
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:true}).toHexString();  // "#ffffff"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"large"}).toHexString(); // "#faf3f3"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"small"}).toHexString(); // "#ffffff"
tinycolor.mostReadable = function(baseColor, colorList, args) {
    var bestColor = null;
    var bestScore = 0;
    var readability;
    var includeFallbackColors, level, size ;
    args = args || {};
    includeFallbackColors = args.includeFallbackColors ;
    level = args.level;
    size = args.size;

    for (var i= 0; i < colorList.length ; i++) {
        readability = tinycolor.readability(baseColor, colorList[i]);
        if (readability > bestScore) {
            bestScore = readability;
            bestColor = tinycolor(colorList[i]);
        }
    }

    if (tinycolor.isReadable(baseColor, bestColor, {"level":level,"size":size}) || !includeFallbackColors) {
        return bestColor;
    }
    else {
        args.includeFallbackColors=false;
        return tinycolor.mostReadable(baseColor,["#fff", "#000"],args);
    }
};

// Big List of Colors
// ------------------
// <http://www.w3.org/TR/css3-color/#svg-color>
var names = tinycolor.names = {
    aliceblue: "f0f8ff",
    antiquewhite: "faebd7",
    aqua: "0ff",
    aquamarine: "7fffd4",
    azure: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "000",
    blanchedalmond: "ffebcd",
    blue: "00f",
    blueviolet: "8a2be2",
    brown: "a52a2a",
    burlywood: "deb887",
    burntsienna: "ea7e5d",
    cadetblue: "5f9ea0",
    chartreuse: "7fff00",
    chocolate: "d2691e",
    coral: "ff7f50",
    cornflowerblue: "6495ed",
    cornsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "0ff",
    darkblue: "00008b",
    darkcyan: "008b8b",
    darkgoldenrod: "b8860b",
    darkgray: "a9a9a9",
    darkgreen: "006400",
    darkgrey: "a9a9a9",
    darkkhaki: "bdb76b",
    darkmagenta: "8b008b",
    darkolivegreen: "556b2f",
    darkorange: "ff8c00",
    darkorchid: "9932cc",
    darkred: "8b0000",
    darksalmon: "e9967a",
    darkseagreen: "8fbc8f",
    darkslateblue: "483d8b",
    darkslategray: "2f4f4f",
    darkslategrey: "2f4f4f",
    darkturquoise: "00ced1",
    darkviolet: "9400d3",
    deeppink: "ff1493",
    deepskyblue: "00bfff",
    dimgray: "696969",
    dimgrey: "696969",
    dodgerblue: "1e90ff",
    firebrick: "b22222",
    floralwhite: "fffaf0",
    forestgreen: "228b22",
    fuchsia: "f0f",
    gainsboro: "dcdcdc",
    ghostwhite: "f8f8ff",
    gold: "ffd700",
    goldenrod: "daa520",
    gray: "808080",
    green: "008000",
    greenyellow: "adff2f",
    grey: "808080",
    honeydew: "f0fff0",
    hotpink: "ff69b4",
    indianred: "cd5c5c",
    indigo: "4b0082",
    ivory: "fffff0",
    khaki: "f0e68c",
    lavender: "e6e6fa",
    lavenderblush: "fff0f5",
    lawngreen: "7cfc00",
    lemonchiffon: "fffacd",
    lightblue: "add8e6",
    lightcoral: "f08080",
    lightcyan: "e0ffff",
    lightgoldenrodyellow: "fafad2",
    lightgray: "d3d3d3",
    lightgreen: "90ee90",
    lightgrey: "d3d3d3",
    lightpink: "ffb6c1",
    lightsalmon: "ffa07a",
    lightseagreen: "20b2aa",
    lightskyblue: "87cefa",
    lightslategray: "789",
    lightslategrey: "789",
    lightsteelblue: "b0c4de",
    lightyellow: "ffffe0",
    lime: "0f0",
    limegreen: "32cd32",
    linen: "faf0e6",
    magenta: "f0f",
    maroon: "800000",
    mediumaquamarine: "66cdaa",
    mediumblue: "0000cd",
    mediumorchid: "ba55d3",
    mediumpurple: "9370db",
    mediumseagreen: "3cb371",
    mediumslateblue: "7b68ee",
    mediumspringgreen: "00fa9a",
    mediumturquoise: "48d1cc",
    mediumvioletred: "c71585",
    midnightblue: "191970",
    mintcream: "f5fffa",
    mistyrose: "ffe4e1",
    moccasin: "ffe4b5",
    navajowhite: "ffdead",
    navy: "000080",
    oldlace: "fdf5e6",
    olive: "808000",
    olivedrab: "6b8e23",
    orange: "ffa500",
    orangered: "ff4500",
    orchid: "da70d6",
    palegoldenrod: "eee8aa",
    palegreen: "98fb98",
    paleturquoise: "afeeee",
    palevioletred: "db7093",
    papayawhip: "ffefd5",
    peachpuff: "ffdab9",
    peru: "cd853f",
    pink: "ffc0cb",
    plum: "dda0dd",
    powderblue: "b0e0e6",
    purple: "800080",
    rebeccapurple: "663399",
    red: "f00",
    rosybrown: "bc8f8f",
    royalblue: "4169e1",
    saddlebrown: "8b4513",
    salmon: "fa8072",
    sandybrown: "f4a460",
    seagreen: "2e8b57",
    seashell: "fff5ee",
    sienna: "a0522d",
    silver: "c0c0c0",
    skyblue: "87ceeb",
    slateblue: "6a5acd",
    slategray: "708090",
    slategrey: "708090",
    snow: "fffafa",
    springgreen: "00ff7f",
    steelblue: "4682b4",
    tan: "d2b48c",
    teal: "008080",
    thistle: "d8bfd8",
    tomato: "ff6347",
    turquoise: "40e0d0",
    violet: "ee82ee",
    wheat: "f5deb3",
    white: "fff",
    whitesmoke: "f5f5f5",
    yellow: "ff0",
    yellowgreen: "9acd32"
};

// Make it easy to access colors via hexNames[hex]
var hexNames = tinycolor.hexNames = flip(names);

// Utilities
// ---------

// { 'name1': 'val1' } becomes { 'val1': 'name1' }
function flip(o) {
    var flipped = { };
    for (var i in o) {
        if (o.hasOwnProperty(i)) {
            flipped[o[i]] = i;
        }
    }
    return flipped;
}

// Return a valid alpha value [0,1] with all invalid values being set to 1
function boundAlpha(a) {
    a = parseFloat(a);

    if (isNaN(a) || a < 0 || a > 1) {
        a = 1;
    }

    return a;
}

// Take input from [0, n] and return it as [0, 1]
function bound01(n, max) {
    if (isOnePointZero(n)) { n = "100%"; }

    var processPercent = isPercentage(n);
    n = mathMin(max, mathMax(0, parseFloat(n)));

    // Automatically convert percentage into number
    if (processPercent) {
        n = parseInt(n * max, 10) / 100;
    }

    // Handle floating point rounding errors
    if ((Math.abs(n - max) < 0.000001)) {
        return 1;
    }

    // Convert into [0, 1] range if it isn't already
    return (n % max) / parseFloat(max);
}

// Force a number between 0 and 1
function clamp01(val) {
    return mathMin(1, mathMax(0, val));
}

// Parse a base-16 hex value into a base-10 integer
function parseIntFromHex(val) {
    return parseInt(val, 16);
}

// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
function isOnePointZero(n) {
    return typeof n == "string" && n.indexOf('.') != -1 && parseFloat(n) === 1;
}

// Check to see if string passed in is a percentage
function isPercentage(n) {
    return typeof n === "string" && n.indexOf('%') != -1;
}

// Force a hex value to have 2 characters
function pad2(c) {
    return c.length == 1 ? '0' + c : '' + c;
}

// Replace a decimal with it's percentage value
function convertToPercentage(n) {
    if (n <= 1) {
        n = (n * 100) + "%";
    }

    return n;
}

// Converts a decimal to a hex value
function convertDecimalToHex(d) {
    return Math.round(parseFloat(d) * 255).toString(16);
}
// Converts a hex value to a decimal
function convertHexToDecimal(h) {
    return (parseIntFromHex(h) / 255);
}

var matchers = (function() {

    // <http://www.w3.org/TR/css3-values/#integers>
    var CSS_INTEGER = "[-\\+]?\\d+%?";

    // <http://www.w3.org/TR/css3-values/#number-value>
    var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";

    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.
    var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";

    // Actual matching.
    // Parentheses and commas are optional, but not required.
    // Whitespace can take the place of commas or opening paren
    var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
    var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";

    return {
        CSS_UNIT: new RegExp(CSS_UNIT),
        rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
        rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
        hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
        hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
        hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
        hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
    };
})();

// isValidCSSUnit
// Take in a single string / number and check to see if it looks like a CSS unit
// (see matchers above for definition).
function isValidCSSUnit(color) {
    return !!matchers.CSS_UNIT.exec(color);
}

// stringInputToObject
// Permissive string parsing.  Take in a number of formats, and output an object
// based on detected format.  Returns { r, g, b } or { h, s, l } or { h, s, v}
function stringInputToObject(color) {

    color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();
    var named = false;
    if (names[color]) {
        color = names[color];
        named = true;
    }
    else if (color == 'transparent') {
        return { r: 0, g: 0, b: 0, a: 0, format: "name" };
    }

    // Try to match string input using regular expressions.
    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]
    // Just return an object and let the conversion functions handle that.
    // This way the result will be the same whether the tinycolor is initialized with string or object.
    var match;
    if ((match = matchers.rgb.exec(color))) {
        return { r: match[1], g: match[2], b: match[3] };
    }
    if ((match = matchers.rgba.exec(color))) {
        return { r: match[1], g: match[2], b: match[3], a: match[4] };
    }
    if ((match = matchers.hsl.exec(color))) {
        return { h: match[1], s: match[2], l: match[3] };
    }
    if ((match = matchers.hsla.exec(color))) {
        return { h: match[1], s: match[2], l: match[3], a: match[4] };
    }
    if ((match = matchers.hsv.exec(color))) {
        return { h: match[1], s: match[2], v: match[3] };
    }
    if ((match = matchers.hsva.exec(color))) {
        return { h: match[1], s: match[2], v: match[3], a: match[4] };
    }
    if ((match = matchers.hex8.exec(color))) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            a: convertHexToDecimal(match[4]),
            format: named ? "name" : "hex8"
        };
    }
    if ((match = matchers.hex6.exec(color))) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            format: named ? "name" : "hex"
        };
    }
    if ((match = matchers.hex4.exec(color))) {
        return {
            r: parseIntFromHex(match[1] + '' + match[1]),
            g: parseIntFromHex(match[2] + '' + match[2]),
            b: parseIntFromHex(match[3] + '' + match[3]),
            a: convertHexToDecimal(match[4] + '' + match[4]),
            format: named ? "name" : "hex8"
        };
    }
    if ((match = matchers.hex3.exec(color))) {
        return {
            r: parseIntFromHex(match[1] + '' + match[1]),
            g: parseIntFromHex(match[2] + '' + match[2]),
            b: parseIntFromHex(match[3] + '' + match[3]),
            format: named ? "name" : "hex"
        };
    }

    return false;
}

function validateWCAG2Parms(parms) {
    // return valid WCAG2 parms for isReadable.
    // If input parms are invalid, return {"level":"AA", "size":"small"}
    var level, size;
    parms = parms || {"level":"AA", "size":"small"};
    level = (parms.level || "AA").toUpperCase();
    size = (parms.size || "small").toLowerCase();
    if (level !== "AA" && level !== "AAA") {
        level = "AA";
    }
    if (size !== "small" && size !== "large") {
        size = "small";
    }
    return {"level":level, "size":size};
}

this.tinycolor = tinycolor;

})()`;
}
// It is hacky way to make this function will be compiled preferentially by less
// resolve error: `ReferenceError: colorPalette is not defined`
// https://github.com/ant-design/ant-motion/issues/44
.tinyColorMixin();




// We create a very complex algorithm which take the place of original tint/shade color system
// to make sure no one can understand it 👻
// and create an entire color palette magicly by inputing just a single primary color.
// We are using bezier-curve easing function and some color manipulations like tint/shade/darken/spin
.colorPaletteMixin() {
@functions: ~`(function() {
  var warmDark = 0.5;     // warm color darken radio
  var warmRotate = -26;  // warm color rotate degree
  var coldDark = 0.55;     // cold color darken radio
  var coldRotate = 10;   // cold color rotate degree
  var getShadeColor = function(c) {
    var shadeColor = tinycolor(c);
    // warm and cold color will darken in different radio, and rotate in different degree
    // warmer color
    if (shadeColor.toRgb().r > shadeColor.toRgb().b) {
      return shadeColor.darken(shadeColor.toHsl().l * warmDark * 100).spin(warmRotate).toHexString();
    }
    // colder color
    return shadeColor.darken(shadeColor.toHsl().l * coldDark * 100).spin(coldRotate).toHexString();
  }
  var primaryEasing = colorEasing(0.6);
  this.colorPalette = function(color, index) {
    var currentEasing = colorEasing(index * 0.1);
    // return light colors after tint
    if (index <= 6) {
      return tinycolor.mix(
        '#ffffff',
        color,
        currentEasing * 100 / primaryEasing
      ).toHexString();
    }
    return tinycolor.mix(
      getShadeColor(color),
      color,
      (1 - (currentEasing - primaryEasing) / (1 - primaryEasing)) * 100
    ).toHexString();
  };
})()`;
}
// It is hacky way to make this function will be compiled preferentially by less
// resolve error: `ReferenceError: colorPalette is not defined`
// https://github.com/ant-design/ant-motion/issues/44
.colorPaletteMixin();

a {
  background-color: transparent;
}
abbr[title] {
  border-bottom: none;
}
mark {
  background-color: #ff0;
  color: #000;
}
img {
  border-style: none;
}
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
}
legend {
  color: inherit;
}
* {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
body {
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
}
button,
input,
select,
textarea {
  color: inherit;
}
::selection {
  background: @primary-color;
  color: #fff;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  color: rgba(0, 0, 0, 0.85);
}
a {
  color: @primary-color;
  background: transparent;
}
a:hover {
  color: color(~`colorPalette("@{primary-color}", 5)`);
}
a:active {
  color: color(~`colorPalette("@{primary-color}", 7)`);
}
a[disabled] {
  color: rgba(0, 0, 0, 0.25);
}
.ant-divider {
  background: #ccc;
}
.ant-alert {
  border-radius: 4px;
  color: rgba(0, 0, 0, 0.65);
}
.ant-alert-success {
  border: 1px solid #cfefdf;
  background-color: #ebf8f2;
}
.ant-alert-success .ant-alert-icon {
  color: #00a854;
}
.ant-alert-info {
  border: 1px solid color(~`colorPalette("@{primary-color}", 2)`);
  background-color: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-alert-info .ant-alert-icon {
  color: @primary-color;
}
.ant-alert-warning {
  border: 1px solid #fff3cf;
  background-color: #fffaeb;
}
.ant-alert-warning .ant-alert-icon {
  color: #ffbf00;
}
.ant-alert-error {
  border: 1px solid #fcdbd9;
  background-color: #fef0ef;
}
.ant-alert-error .ant-alert-icon {
  color: #f04134;
}
.ant-alert-close-icon .anticon-cross {
  color: rgba(0, 0, 0, 0.43);
}
.ant-alert-close-icon .anticon-cross:hover {
  color: #404040;
}
.ant-alert-with-description {
  border-radius: 4px;
  color: rgba(0, 0, 0, 0.65);
}
.ant-alert-with-description .ant-alert-message {
  color: rgba(0, 0, 0, 0.85);
}
.ant-alert-banner {
  border-radius: 0;
  border: 0;
}
.ant-anchor-wrapper {
  background-color: #fff;
}
.ant-anchor-ink:before {
  background-color: #e9e9e9;
}
.ant-anchor-ink-ball {
  border-radius: 9px;
  border: 3px solid @primary-color;
  background-color: #fff;
}
.ant-anchor-link-title {
  color: rgba(0, 0, 0, 0.65);
}
.ant-anchor-link-active > .ant-anchor-link-title {
  color: @primary-color;
}
.ant-select-auto-complete.ant-select .ant-select-selection {
  border: 0;
  box-shadow: none;
}
.ant-select-auto-complete.ant-select .ant-input {
  background: transparent;
  border-width: 1px;
}
.ant-select-auto-complete.ant-select .ant-input:focus,
.ant-select-auto-complete.ant-select .ant-input:hover {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-avatar {
  background: #ccc;
  color: #fff;
  border-radius: 16px;
}
.ant-avatar-lg {
  border-radius: 20px;
}
.ant-avatar-sm {
  border-radius: 12px;
}
.ant-avatar-square {
  border-radius: 4px;
}
.ant-back-top-content {
  border-radius: 20px;
  background-color: rgba(64, 64, 64, 0.4);
  color: #fff;
}
.ant-back-top-content:hover {
  background-color: rgba(64, 64, 64, 0.6);
}
.ant-badge-count {
  border-radius: 10px;
  background: #f04134;
  color: #fff;
}
.ant-badge-count a,
.ant-badge-count a:hover {
  color: #fff;
}
.ant-badge-dot {
  border-radius: 100%;
  background: #f04134;
  box-shadow: 0 0 0 1px #fff;
}
.ant-badge-status-dot {
  border-radius: 50%;
}
.ant-badge-status-success {
  background-color: #00a854;
}
.ant-badge-status-processing {
  background-color: @primary-color;
}
.ant-badge-status-processing:after {
  border-radius: 50%;
  border: 1px solid @primary-color;
}
.ant-badge-status-default {
  background-color: #d9d9d9;
}
.ant-badge-status-error {
  background-color: #f04134;
}
.ant-badge-status-warning {
  background-color: #ffbf00;
}
.ant-badge-status-text {
  color: rgba(0, 0, 0, 0.65);
}
.ant-breadcrumb {
  color: rgba(0, 0, 0, 0.65);
}
.ant-breadcrumb a {
  color: rgba(0, 0, 0, 0.65);
}
.ant-breadcrumb a:hover {
  color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-breadcrumb > span:last-child {
  color: rgba(0, 0, 0, 0.65);
}
.ant-breadcrumb-separator {
  color: rgba(0, 0, 0, 0.3);
}
.ant-btn {
  background-image: none;
  border: 1px solid transparent;
  border-radius: 4px;
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
  border-color: #d9d9d9;
}
.ant-btn-lg {
  border-radius: 4px;
}
.ant-btn-sm {
  border-radius: 4px;
}
.ant-btn > a:only-child {
  color: currentColor;
}
.ant-btn > a:only-child:after {
  background: transparent;
}
.ant-btn:hover,
.ant-btn:focus {
  color: @primary-color;
  background-color: #fff;
  border-color: @primary-color;
}
.ant-btn:hover > a:only-child,
.ant-btn:focus > a:only-child {
  color: currentColor;
}
.ant-btn:hover > a:only-child:after,
.ant-btn:focus > a:only-child:after {
  background: transparent;
}
.ant-btn:active,
.ant-btn.active {
  color: color(~`colorPalette("@{primary-color}", 7)`);
  background-color: #fff;
  border-color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-btn:active > a:only-child,
.ant-btn.active > a:only-child {
  color: currentColor;
}
.ant-btn:active > a:only-child:after,
.ant-btn.active > a:only-child:after {
  background: transparent;
}
.ant-btn.disabled,
.ant-btn[disabled],
.ant-btn.disabled:hover,
.ant-btn[disabled]:hover,
.ant-btn.disabled:focus,
.ant-btn[disabled]:focus,
.ant-btn.disabled:active,
.ant-btn[disabled]:active,
.ant-btn.disabled.active,
.ant-btn[disabled].active {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-btn.disabled > a:only-child,
.ant-btn[disabled] > a:only-child,
.ant-btn.disabled:hover > a:only-child,
.ant-btn[disabled]:hover > a:only-child,
.ant-btn.disabled:focus > a:only-child,
.ant-btn[disabled]:focus > a:only-child,
.ant-btn.disabled:active > a:only-child,
.ant-btn[disabled]:active > a:only-child,
.ant-btn.disabled.active > a:only-child,
.ant-btn[disabled].active > a:only-child {
  color: currentColor;
}
.ant-btn.disabled > a:only-child:after,
.ant-btn[disabled] > a:only-child:after,
.ant-btn.disabled:hover > a:only-child:after,
.ant-btn[disabled]:hover > a:only-child:after,
.ant-btn.disabled:focus > a:only-child:after,
.ant-btn[disabled]:focus > a:only-child:after,
.ant-btn.disabled:active > a:only-child:after,
.ant-btn[disabled]:active > a:only-child:after,
.ant-btn.disabled.active > a:only-child:after,
.ant-btn[disabled].active > a:only-child:after {
  background: transparent;
}
.ant-btn:hover,
.ant-btn:focus,
.ant-btn:active,
.ant-btn.active {
  background: #fff;
}
.ant-btn-primary {
  color: #fff;
  background-color: @primary-color;
  border-color: @primary-color;
}
.ant-btn-primary > a:only-child {
  color: currentColor;
}
.ant-btn-primary > a:only-child:after {
  background: transparent;
}
.ant-btn-primary:hover,
.ant-btn-primary:focus {
  color: #fff;
  background-color: color(~`colorPalette("@{primary-color}", 5)`);
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-btn-primary:hover > a:only-child,
.ant-btn-primary:focus > a:only-child {
  color: currentColor;
}
.ant-btn-primary:hover > a:only-child:after,
.ant-btn-primary:focus > a:only-child:after {
  background: transparent;
}
.ant-btn-primary:active,
.ant-btn-primary.active {
  color: #fff;
  background-color: color(~`colorPalette("@{primary-color}", 7)`);
  border-color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-btn-primary:active > a:only-child,
.ant-btn-primary.active > a:only-child {
  color: currentColor;
}
.ant-btn-primary:active > a:only-child:after,
.ant-btn-primary.active > a:only-child:after {
  background: transparent;
}
.ant-btn-primary.disabled,
.ant-btn-primary[disabled],
.ant-btn-primary.disabled:hover,
.ant-btn-primary[disabled]:hover,
.ant-btn-primary.disabled:focus,
.ant-btn-primary[disabled]:focus,
.ant-btn-primary.disabled:active,
.ant-btn-primary[disabled]:active,
.ant-btn-primary.disabled.active,
.ant-btn-primary[disabled].active {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-btn-primary.disabled > a:only-child,
.ant-btn-primary[disabled] > a:only-child,
.ant-btn-primary.disabled:hover > a:only-child,
.ant-btn-primary[disabled]:hover > a:only-child,
.ant-btn-primary.disabled:focus > a:only-child,
.ant-btn-primary[disabled]:focus > a:only-child,
.ant-btn-primary.disabled:active > a:only-child,
.ant-btn-primary[disabled]:active > a:only-child,
.ant-btn-primary.disabled.active > a:only-child,
.ant-btn-primary[disabled].active > a:only-child {
  color: currentColor;
}
.ant-btn-primary.disabled > a:only-child:after,
.ant-btn-primary[disabled] > a:only-child:after,
.ant-btn-primary.disabled:hover > a:only-child:after,
.ant-btn-primary[disabled]:hover > a:only-child:after,
.ant-btn-primary.disabled:focus > a:only-child:after,
.ant-btn-primary[disabled]:focus > a:only-child:after,
.ant-btn-primary.disabled:active > a:only-child:after,
.ant-btn-primary[disabled]:active > a:only-child:after,
.ant-btn-primary.disabled.active > a:only-child:after,
.ant-btn-primary[disabled].active > a:only-child:after {
  background: transparent;
}
.ant-btn-group .ant-btn-primary:not(:first-child):not(:last-child) {
  border-right-color: color(~`colorPalette("@{primary-color}", 7)`);
  border-left-color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-btn-group .ant-btn-primary:not(:first-child):not(:last-child):disabled {
  border-color: #d9d9d9;
}
.ant-btn-group .ant-btn-primary:first-child:not(:last-child) {
  border-right-color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-btn-group .ant-btn-primary:first-child:not(:last-child)[disabled] {
  border-right-color: #d9d9d9;
}
.ant-btn-group .ant-btn-primary:last-child:not(:first-child),
.ant-btn-group .ant-btn-primary + .ant-btn-primary {
  border-left-color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-btn-group .ant-btn-primary:last-child:not(:first-child)[disabled],
.ant-btn-group .ant-btn-primary + .ant-btn-primary[disabled] {
  border-left-color: #d9d9d9;
}
.ant-btn-ghost {
  color: rgba(0, 0, 0, 0.65);
  background-color: transparent;
  border-color: #d9d9d9;
}
.ant-btn-ghost > a:only-child {
  color: currentColor;
}
.ant-btn-ghost > a:only-child:after {
  background: transparent;
}
.ant-btn-ghost:hover,
.ant-btn-ghost:focus {
  color: @primary-color;
  background-color: transparent;
  border-color: @primary-color;
}
.ant-btn-ghost:hover > a:only-child,
.ant-btn-ghost:focus > a:only-child {
  color: currentColor;
}
.ant-btn-ghost:hover > a:only-child:after,
.ant-btn-ghost:focus > a:only-child:after {
  background: transparent;
}
.ant-btn-ghost:active,
.ant-btn-ghost.active {
  color: color(~`colorPalette("@{primary-color}", 7)`);
  background-color: transparent;
  border-color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-btn-ghost:active > a:only-child,
.ant-btn-ghost.active > a:only-child {
  color: currentColor;
}
.ant-btn-ghost:active > a:only-child:after,
.ant-btn-ghost.active > a:only-child:after {
  background: transparent;
}
.ant-btn-ghost.disabled,
.ant-btn-ghost[disabled],
.ant-btn-ghost.disabled:hover,
.ant-btn-ghost[disabled]:hover,
.ant-btn-ghost.disabled:focus,
.ant-btn-ghost[disabled]:focus,
.ant-btn-ghost.disabled:active,
.ant-btn-ghost[disabled]:active,
.ant-btn-ghost.disabled.active,
.ant-btn-ghost[disabled].active {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-btn-ghost.disabled > a:only-child,
.ant-btn-ghost[disabled] > a:only-child,
.ant-btn-ghost.disabled:hover > a:only-child,
.ant-btn-ghost[disabled]:hover > a:only-child,
.ant-btn-ghost.disabled:focus > a:only-child,
.ant-btn-ghost[disabled]:focus > a:only-child,
.ant-btn-ghost.disabled:active > a:only-child,
.ant-btn-ghost[disabled]:active > a:only-child,
.ant-btn-ghost.disabled.active > a:only-child,
.ant-btn-ghost[disabled].active > a:only-child {
  color: currentColor;
}
.ant-btn-ghost.disabled > a:only-child:after,
.ant-btn-ghost[disabled] > a:only-child:after,
.ant-btn-ghost.disabled:hover > a:only-child:after,
.ant-btn-ghost[disabled]:hover > a:only-child:after,
.ant-btn-ghost.disabled:focus > a:only-child:after,
.ant-btn-ghost[disabled]:focus > a:only-child:after,
.ant-btn-ghost.disabled:active > a:only-child:after,
.ant-btn-ghost[disabled]:active > a:only-child:after,
.ant-btn-ghost.disabled.active > a:only-child:after,
.ant-btn-ghost[disabled].active > a:only-child:after {
  background: transparent;
}
.ant-btn-dashed {
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
  border-color: #d9d9d9;
  border-style: dashed;
}
.ant-btn-dashed > a:only-child {
  color: currentColor;
}
.ant-btn-dashed > a:only-child:after {
  background: transparent;
}
.ant-btn-dashed:hover,
.ant-btn-dashed:focus {
  color: @primary-color;
  background-color: #fff;
  border-color: @primary-color;
}
.ant-btn-dashed:hover > a:only-child,
.ant-btn-dashed:focus > a:only-child {
  color: currentColor;
}
.ant-btn-dashed:hover > a:only-child:after,
.ant-btn-dashed:focus > a:only-child:after {
  background: transparent;
}
.ant-btn-dashed:active,
.ant-btn-dashed.active {
  color: color(~`colorPalette("@{primary-color}", 7)`);
  background-color: #fff;
  border-color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-btn-dashed:active > a:only-child,
.ant-btn-dashed.active > a:only-child {
  color: currentColor;
}
.ant-btn-dashed:active > a:only-child:after,
.ant-btn-dashed.active > a:only-child:after {
  background: transparent;
}
.ant-btn-dashed.disabled,
.ant-btn-dashed[disabled],
.ant-btn-dashed.disabled:hover,
.ant-btn-dashed[disabled]:hover,
.ant-btn-dashed.disabled:focus,
.ant-btn-dashed[disabled]:focus,
.ant-btn-dashed.disabled:active,
.ant-btn-dashed[disabled]:active,
.ant-btn-dashed.disabled.active,
.ant-btn-dashed[disabled].active {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-btn-dashed.disabled > a:only-child,
.ant-btn-dashed[disabled] > a:only-child,
.ant-btn-dashed.disabled:hover > a:only-child,
.ant-btn-dashed[disabled]:hover > a:only-child,
.ant-btn-dashed.disabled:focus > a:only-child,
.ant-btn-dashed[disabled]:focus > a:only-child,
.ant-btn-dashed.disabled:active > a:only-child,
.ant-btn-dashed[disabled]:active > a:only-child,
.ant-btn-dashed.disabled.active > a:only-child,
.ant-btn-dashed[disabled].active > a:only-child {
  color: currentColor;
}
.ant-btn-dashed.disabled > a:only-child:after,
.ant-btn-dashed[disabled] > a:only-child:after,
.ant-btn-dashed.disabled:hover > a:only-child:after,
.ant-btn-dashed[disabled]:hover > a:only-child:after,
.ant-btn-dashed.disabled:focus > a:only-child:after,
.ant-btn-dashed[disabled]:focus > a:only-child:after,
.ant-btn-dashed.disabled:active > a:only-child:after,
.ant-btn-dashed[disabled]:active > a:only-child:after,
.ant-btn-dashed.disabled.active > a:only-child:after,
.ant-btn-dashed[disabled].active > a:only-child:after {
  background: transparent;
}
.ant-btn-danger {
  color: #f04134;
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-btn-danger > a:only-child {
  color: currentColor;
}
.ant-btn-danger > a:only-child:after {
  background: transparent;
}
.ant-btn-danger:hover,
.ant-btn-danger:focus {
  color: #fff;
  background-color: #f04134;
  border-color: #f04134;
}
.ant-btn-danger:hover > a:only-child,
.ant-btn-danger:focus > a:only-child {
  color: currentColor;
}
.ant-btn-danger:hover > a:only-child:after,
.ant-btn-danger:focus > a:only-child:after {
  background: transparent;
}
.ant-btn-danger:active,
.ant-btn-danger.active {
  color: #fff;
  background-color: #d73435;
  border-color: #d73435;
}
.ant-btn-danger:active > a:only-child,
.ant-btn-danger.active > a:only-child {
  color: currentColor;
}
.ant-btn-danger:active > a:only-child:after,
.ant-btn-danger.active > a:only-child:after {
  background: transparent;
}
.ant-btn-danger.disabled,
.ant-btn-danger[disabled],
.ant-btn-danger.disabled:hover,
.ant-btn-danger[disabled]:hover,
.ant-btn-danger.disabled:focus,
.ant-btn-danger[disabled]:focus,
.ant-btn-danger.disabled:active,
.ant-btn-danger[disabled]:active,
.ant-btn-danger.disabled.active,
.ant-btn-danger[disabled].active {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-btn-danger.disabled > a:only-child,
.ant-btn-danger[disabled] > a:only-child,
.ant-btn-danger.disabled:hover > a:only-child,
.ant-btn-danger[disabled]:hover > a:only-child,
.ant-btn-danger.disabled:focus > a:only-child,
.ant-btn-danger[disabled]:focus > a:only-child,
.ant-btn-danger.disabled:active > a:only-child,
.ant-btn-danger[disabled]:active > a:only-child,
.ant-btn-danger.disabled.active > a:only-child,
.ant-btn-danger[disabled].active > a:only-child {
  color: currentColor;
}
.ant-btn-danger.disabled > a:only-child:after,
.ant-btn-danger[disabled] > a:only-child:after,
.ant-btn-danger.disabled:hover > a:only-child:after,
.ant-btn-danger[disabled]:hover > a:only-child:after,
.ant-btn-danger.disabled:focus > a:only-child:after,
.ant-btn-danger[disabled]:focus > a:only-child:after,
.ant-btn-danger.disabled:active > a:only-child:after,
.ant-btn-danger[disabled]:active > a:only-child:after,
.ant-btn-danger.disabled.active > a:only-child:after,
.ant-btn-danger[disabled].active > a:only-child:after {
  background: transparent;
}
.ant-btn-circle,
.ant-btn-circle-outline {
  border-radius: 50%;
}
.ant-btn-circle.ant-btn-lg,
.ant-btn-circle-outline.ant-btn-lg {
  border-radius: 50%;
}
.ant-btn-circle.ant-btn-sm,
.ant-btn-circle-outline.ant-btn-sm {
  border-radius: 50%;
}
.ant-btn:before {
  background: #fff;
  border-radius: inherit;
}
.ant-btn-group-lg > .ant-btn {
  border-radius: 4px;
}
.ant-btn-group-sm > .ant-btn {
  border-radius: 4px;
}
.ant-btn-group .ant-btn:not(:first-child):not(:last-child) {
  border-radius: 0;
}
.ant-btn-group > .ant-btn:first-child:not(:last-child) {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}
.ant-btn-group > .ant-btn:last-child:not(:first-child) {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}
.ant-btn-group > .ant-btn-group:not(:first-child):not(:last-child) > .ant-btn {
  border-radius: 0;
}
.ant-btn-group > .ant-btn-group:first-child:not(:last-child) > .ant-btn:last-child {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}
.ant-btn-group > .ant-btn-group:last-child:not(:first-child) > .ant-btn:first-child {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}
.ant-btn-clicked:after {
  border-radius: inherit;
  border: 0 solid @primary-color;
}
.ant-btn-danger.ant-btn-clicked:after {
  border-color: #f04134;
}
.ant-btn-background-ghost {
  background: transparent !important;
  border-color: #fff;
  color: #fff;
}
.ant-btn-background-ghost.ant-btn-primary {
  color: @primary-color;
  background-color: transparent;
  border-color: @primary-color;
}
.ant-btn-background-ghost.ant-btn-primary > a:only-child {
  color: currentColor;
}
.ant-btn-background-ghost.ant-btn-primary > a:only-child:after {
  background: transparent;
}
.ant-btn-background-ghost.ant-btn-primary:hover,
.ant-btn-background-ghost.ant-btn-primary:focus {
  color: color(~`colorPalette("@{primary-color}", 5)`);
  background-color: transparent;
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-btn-background-ghost.ant-btn-primary:hover > a:only-child,
.ant-btn-background-ghost.ant-btn-primary:focus > a:only-child {
  color: currentColor;
}
.ant-btn-background-ghost.ant-btn-primary:hover > a:only-child:after,
.ant-btn-background-ghost.ant-btn-primary:focus > a:only-child:after {
  background: transparent;
}
.ant-btn-background-ghost.ant-btn-primary:active,
.ant-btn-background-ghost.ant-btn-primary.active {
  color: color(~`colorPalette("@{primary-color}", 7)`);
  background-color: transparent;
  border-color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-btn-background-ghost.ant-btn-primary:active > a:only-child,
.ant-btn-background-ghost.ant-btn-primary.active > a:only-child {
  color: currentColor;
}
.ant-btn-background-ghost.ant-btn-primary:active > a:only-child:after,
.ant-btn-background-ghost.ant-btn-primary.active > a:only-child:after {
  background: transparent;
}
.ant-btn-background-ghost.ant-btn-primary.disabled,
.ant-btn-background-ghost.ant-btn-primary[disabled],
.ant-btn-background-ghost.ant-btn-primary.disabled:hover,
.ant-btn-background-ghost.ant-btn-primary[disabled]:hover,
.ant-btn-background-ghost.ant-btn-primary.disabled:focus,
.ant-btn-background-ghost.ant-btn-primary[disabled]:focus,
.ant-btn-background-ghost.ant-btn-primary.disabled:active,
.ant-btn-background-ghost.ant-btn-primary[disabled]:active,
.ant-btn-background-ghost.ant-btn-primary.disabled.active,
.ant-btn-background-ghost.ant-btn-primary[disabled].active {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-btn-background-ghost.ant-btn-primary.disabled > a:only-child,
.ant-btn-background-ghost.ant-btn-primary[disabled] > a:only-child,
.ant-btn-background-ghost.ant-btn-primary.disabled:hover > a:only-child,
.ant-btn-background-ghost.ant-btn-primary[disabled]:hover > a:only-child,
.ant-btn-background-ghost.ant-btn-primary.disabled:focus > a:only-child,
.ant-btn-background-ghost.ant-btn-primary[disabled]:focus > a:only-child,
.ant-btn-background-ghost.ant-btn-primary.disabled:active > a:only-child,
.ant-btn-background-ghost.ant-btn-primary[disabled]:active > a:only-child,
.ant-btn-background-ghost.ant-btn-primary.disabled.active > a:only-child,
.ant-btn-background-ghost.ant-btn-primary[disabled].active > a:only-child {
  color: currentColor;
}
.ant-btn-background-ghost.ant-btn-primary.disabled > a:only-child:after,
.ant-btn-background-ghost.ant-btn-primary[disabled] > a:only-child:after,
.ant-btn-background-ghost.ant-btn-primary.disabled:hover > a:only-child:after,
.ant-btn-background-ghost.ant-btn-primary[disabled]:hover > a:only-child:after,
.ant-btn-background-ghost.ant-btn-primary.disabled:focus > a:only-child:after,
.ant-btn-background-ghost.ant-btn-primary[disabled]:focus > a:only-child:after,
.ant-btn-background-ghost.ant-btn-primary.disabled:active > a:only-child:after,
.ant-btn-background-ghost.ant-btn-primary[disabled]:active > a:only-child:after,
.ant-btn-background-ghost.ant-btn-primary.disabled.active > a:only-child:after,
.ant-btn-background-ghost.ant-btn-primary[disabled].active > a:only-child:after {
  background: transparent;
}
.ant-btn-background-ghost.ant-btn-danger {
  color: #f04134;
  background-color: transparent;
  border-color: #f04134;
}
.ant-btn-background-ghost.ant-btn-danger > a:only-child {
  color: currentColor;
}
.ant-btn-background-ghost.ant-btn-danger > a:only-child:after {
  background: transparent;
}
.ant-btn-background-ghost.ant-btn-danger:hover,
.ant-btn-background-ghost.ant-btn-danger:focus {
  color: #f46e65;
  background-color: transparent;
  border-color: #f46e65;
}
.ant-btn-background-ghost.ant-btn-danger:hover > a:only-child,
.ant-btn-background-ghost.ant-btn-danger:focus > a:only-child {
  color: currentColor;
}
.ant-btn-background-ghost.ant-btn-danger:hover > a:only-child:after,
.ant-btn-background-ghost.ant-btn-danger:focus > a:only-child:after {
  background: transparent;
}
.ant-btn-background-ghost.ant-btn-danger:active,
.ant-btn-background-ghost.ant-btn-danger.active {
  color: #d73435;
  background-color: transparent;
  border-color: #d73435;
}
.ant-btn-background-ghost.ant-btn-danger:active > a:only-child,
.ant-btn-background-ghost.ant-btn-danger.active > a:only-child {
  color: currentColor;
}
.ant-btn-background-ghost.ant-btn-danger:active > a:only-child:after,
.ant-btn-background-ghost.ant-btn-danger.active > a:only-child:after {
  background: transparent;
}
.ant-btn-background-ghost.ant-btn-danger.disabled,
.ant-btn-background-ghost.ant-btn-danger[disabled],
.ant-btn-background-ghost.ant-btn-danger.disabled:hover,
.ant-btn-background-ghost.ant-btn-danger[disabled]:hover,
.ant-btn-background-ghost.ant-btn-danger.disabled:focus,
.ant-btn-background-ghost.ant-btn-danger[disabled]:focus,
.ant-btn-background-ghost.ant-btn-danger.disabled:active,
.ant-btn-background-ghost.ant-btn-danger[disabled]:active,
.ant-btn-background-ghost.ant-btn-danger.disabled.active,
.ant-btn-background-ghost.ant-btn-danger[disabled].active {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-btn-background-ghost.ant-btn-danger.disabled > a:only-child,
.ant-btn-background-ghost.ant-btn-danger[disabled] > a:only-child,
.ant-btn-background-ghost.ant-btn-danger.disabled:hover > a:only-child,
.ant-btn-background-ghost.ant-btn-danger[disabled]:hover > a:only-child,
.ant-btn-background-ghost.ant-btn-danger.disabled:focus > a:only-child,
.ant-btn-background-ghost.ant-btn-danger[disabled]:focus > a:only-child,
.ant-btn-background-ghost.ant-btn-danger.disabled:active > a:only-child,
.ant-btn-background-ghost.ant-btn-danger[disabled]:active > a:only-child,
.ant-btn-background-ghost.ant-btn-danger.disabled.active > a:only-child,
.ant-btn-background-ghost.ant-btn-danger[disabled].active > a:only-child {
  color: currentColor;
}
.ant-btn-background-ghost.ant-btn-danger.disabled > a:only-child:after,
.ant-btn-background-ghost.ant-btn-danger[disabled] > a:only-child:after,
.ant-btn-background-ghost.ant-btn-danger.disabled:hover > a:only-child:after,
.ant-btn-background-ghost.ant-btn-danger[disabled]:hover > a:only-child:after,
.ant-btn-background-ghost.ant-btn-danger.disabled:focus > a:only-child:after,
.ant-btn-background-ghost.ant-btn-danger[disabled]:focus > a:only-child:after,
.ant-btn-background-ghost.ant-btn-danger.disabled:active > a:only-child:after,
.ant-btn-background-ghost.ant-btn-danger[disabled]:active > a:only-child:after,
.ant-btn-background-ghost.ant-btn-danger.disabled.active > a:only-child:after,
.ant-btn-background-ghost.ant-btn-danger[disabled].active > a:only-child:after {
  background: transparent;
}
.ant-fullcalendar {
  border-top: 1px solid #d9d9d9;
}
.ant-fullcalendar table {
  border-collapse: collapse;
  background-color: transparent;
}
.ant-fullcalendar table,
.ant-fullcalendar th,
.ant-fullcalendar td {
  border: 0;
}
.ant-fullcalendar-calendar-table {
  border-spacing: 0;
}
.ant-fullcalendar-value {
  color: rgba(0, 0, 0, 0.65);
  border-radius: 4px;
  background: transparent;
}
.ant-fullcalendar-value:hover {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-fullcalendar-value:active {
  background: @primary-color;
  color: #fff;
}
.ant-fullcalendar-today .ant-fullcalendar-value,
.ant-fullcalendar-month-panel-current-cell .ant-fullcalendar-value {
  box-shadow: 0 0 0 1px @primary-color;
}
.ant-fullcalendar-selected-day .ant-fullcalendar-value,
.ant-fullcalendar-month-panel-selected-cell .ant-fullcalendar-value {
  background: @primary-color;
  color: #fff;
}
.ant-fullcalendar-disabled-cell-first-of-row .ant-fullcalendar-value {
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
}
.ant-fullcalendar-disabled-cell-last-of-row .ant-fullcalendar-value {
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
}
.ant-fullcalendar-last-month-cell .ant-fullcalendar-value,
.ant-fullcalendar-next-month-btn-day .ant-fullcalendar-value {
  color: rgba(0, 0, 0, 0.25);
}
.ant-fullcalendar-month-panel-table {
  border-collapse: separate;
}
.ant-fullcalendar-fullscreen {
  border-top: 0;
}
.ant-fullcalendar-fullscreen .ant-fullcalendar-month,
.ant-fullcalendar-fullscreen .ant-fullcalendar-date {
  color: rgba(0, 0, 0, 0.65);
  border-top: 2px solid #e9e9e9;
}
.ant-fullcalendar-fullscreen .ant-fullcalendar-month:hover,
.ant-fullcalendar-fullscreen .ant-fullcalendar-date:hover {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-fullcalendar-fullscreen .ant-fullcalendar-month:active,
.ant-fullcalendar-fullscreen .ant-fullcalendar-date:active {
  background: color(~`colorPalette("@{primary-color}", 2)`);
}
.ant-fullcalendar-fullscreen .ant-fullcalendar-value {
  background: transparent;
}
.ant-fullcalendar-fullscreen .ant-fullcalendar-today .ant-fullcalendar-value {
  color: rgba(0, 0, 0, 0.65);
}
.ant-fullcalendar-fullscreen .ant-fullcalendar-month-panel-current-cell .ant-fullcalendar-month,
.ant-fullcalendar-fullscreen .ant-fullcalendar-today .ant-fullcalendar-date {
  border-top-color: @primary-color;
  background: transparent;
}
.ant-fullcalendar-fullscreen .ant-fullcalendar-month-panel-current-cell .ant-fullcalendar-value,
.ant-fullcalendar-fullscreen .ant-fullcalendar-today .ant-fullcalendar-value {
  box-shadow: none;
}
.ant-fullcalendar-fullscreen .ant-fullcalendar-month-panel-selected-cell .ant-fullcalendar-month,
.ant-fullcalendar-fullscreen .ant-fullcalendar-selected-day .ant-fullcalendar-date {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-fullcalendar-fullscreen .ant-fullcalendar-month-panel-selected-cell .ant-fullcalendar-value,
.ant-fullcalendar-fullscreen .ant-fullcalendar-selected-day .ant-fullcalendar-value {
  color: @primary-color;
}
.ant-fullcalendar-fullscreen .ant-fullcalendar-last-month-cell .ant-fullcalendar-date,
.ant-fullcalendar-fullscreen .ant-fullcalendar-next-month-btn-day .ant-fullcalendar-date {
  color: rgba(0, 0, 0, 0.25);
}
.ant-fullcalendar-disabled-cell:not(.ant-fullcalendar-today) .ant-fullcalendar-date,
.ant-fullcalendar-disabled-cell:not(.ant-fullcalendar-today) .ant-fullcalendar-date:hover {
  background: transparent;
}
.ant-fullcalendar-disabled-cell .ant-fullcalendar-value {
  color: rgba(0, 0, 0, 0.25);
  border-radius: 0;
}
.ant-card {
  background: #fff;
  border-radius: 2px;
}
.ant-card:not(.ant-card-no-hovering):hover {
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
  border-color: rgba(0, 0, 0, 0.2);
}
.ant-card-bordered {
  border: 1px solid #e9e9e9;
}
.ant-card-head {
  background: #fff;
  border-bottom: 1px solid #e9e9e9;
  border-radius: 2px 2px 0 0;
}
.ant-card-head-title {
  color: rgba(0, 0, 0, 0.85);
}
.ant-card-grid {
  border-radius: 0;
  border: 0;
  box-shadow: 1px 0 0 0 #e9e9e9, 0 1px 0 0 #e9e9e9, 1px 1px 0 0 #e9e9e9, 1px 0 0 0 #e9e9e9 inset, 0 1px 0 0 #e9e9e9 inset;
}
.ant-card-grid:hover {
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
}
.ant-card-loading-block {
  border-radius: 2px;
  background: linear-gradient(90deg, rgba(207, 216, 220, 0.2), rgba(207, 216, 220, 0.4), rgba(207, 216, 220, 0.2));
  background-size: 600% 600%;
}
.ant-carousel .slick-slider {
  -webkit-tap-highlight-color: transparent;
}
.ant-carousel .slick-vertical .slick-slide {
  border: 1px solid transparent;
}
.ant-carousel .slick-prev,
.ant-carousel .slick-next {
  background: transparent;
  color: transparent;
  border: 0;
}
.ant-carousel .slick-prev:hover,
.ant-carousel .slick-next:hover,
.ant-carousel .slick-prev:focus,
.ant-carousel .slick-next:focus {
  background: transparent;
  color: transparent;
}
.ant-carousel .slick-dots li button {
  border: 0;
  background: #fff;
  border-radius: 1px;
  color: transparent;
}
.ant-carousel .slick-dots li.slick-active button {
  background: #fff;
}
.ant-cascader-input.ant-input {
  background-color: transparent !important;
}
.ant-cascader-picker {
  background-color: #fff;
  border-radius: 4px;
}
.ant-cascader-picker-with-value .ant-cascader-picker-label {
  color: transparent;
}
.ant-cascader-picker-disabled {
  background: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-cascader-picker:focus .ant-cascader-input {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-cascader-picker-clear {
  background: #fff;
  color: rgba(0, 0, 0, 0.25);
}
.ant-cascader-picker-clear:hover {
  color: rgba(0, 0, 0, 0.43);
}
.ant-cascader-picker-arrow {
  color: rgba(0, 0, 0, 0.43);
}
.ant-cascader-menus {
  background: #fff;
  border-radius: 4px;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
}
.ant-cascader-menu {
  border-right: 1px solid #e9e9e9;
}
.ant-cascader-menu:first-child {
  border-radius: 4px 0 0 4px;
}
.ant-cascader-menu:last-child {
  border-right-color: transparent;
  border-radius: 0 4px 4px 0;
}
.ant-cascader-menu:only-child {
  border-radius: 4px;
}
.ant-cascader-menu-item:hover {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-cascader-menu-item-disabled {
  color: rgba(0, 0, 0, 0.25);
}
.ant-cascader-menu-item-disabled:hover {
  background: transparent;
}
.ant-cascader-menu-item-active:not(.ant-cascader-menu-item-disabled),
.ant-cascader-menu-item-active:not(.ant-cascader-menu-item-disabled):hover {
  background: #f7f7f7;
}
.ant-cascader-menu-item-expand:after {
  color: rgba(0, 0, 0, 0.43);
}
.ant-cascader-menu-item .ant-cascader-menu-item-keyword {
  color: #f04134;
}
.ant-checkbox-wrapper:hover .ant-checkbox-inner,
.ant-checkbox:hover .ant-checkbox-inner,
.ant-checkbox-input:focus + .ant-checkbox-inner {
  border-color: @primary-color;
}
.ant-checkbox-checked:after {
  border-radius: 2px;
  border: 1px solid @primary-color;
}
.ant-checkbox-inner {
  border: 1px solid #d9d9d9;
  border-radius: 2px;
  background-color: #fff;
}
.ant-checkbox-inner:after {
  border: 2px solid #fff;
  border-top: 0;
  border-left: 0;
}
.ant-checkbox-indeterminate.ant-checkbox-disabled .ant-checkbox-inner:after {
  border-color: rgba(0, 0, 0, 0.25);
}
.ant-checkbox-checked .ant-checkbox-inner:after {
  border: 2px solid #fff;
  border-top: 0;
  border-left: 0;
}
.ant-checkbox-checked .ant-checkbox-inner,
.ant-checkbox-indeterminate .ant-checkbox-inner {
  background-color: @primary-color;
  border-color: @primary-color;
}
.ant-checkbox-disabled.ant-checkbox-checked .ant-checkbox-inner:after {
  border-color: rgba(0, 0, 0, 0.25);
}
.ant-checkbox-disabled .ant-checkbox-inner {
  border-color: #d9d9d9 !important;
  background-color: #f7f7f7;
}
.ant-checkbox-disabled .ant-checkbox-inner:after {
  border-color: #f7f7f7;
}
.ant-checkbox-disabled + span {
  color: rgba(0, 0, 0, 0.25);
}
.ant-collapse {
  background-color: #f7f7f7;
  border-radius: 4px;
  border: 1px solid #d9d9d9;
  border-bottom: 0;
}
.ant-collapse > .ant-collapse-item {
  border-bottom: 1px solid #d9d9d9;
}
.ant-collapse > .ant-collapse-item:last-child,
.ant-collapse > .ant-collapse-item:last-child > .ant-collapse-header {
  border-radius: 0 0 4px 4px;
}
.ant-collapse > .ant-collapse-item > .ant-collapse-header {
  color: rgba(0, 0, 0, 0.85);
}
.ant-collapse > .ant-collapse-item > .ant-collapse-header .arrow {
  color: rgba(0, 0, 0, 0.43);
}
.ant-collapse-content {
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
}
.ant-collapse-item:last-child > .ant-collapse-content {
  border-radius: 0 0 4px 4px;
}
.ant-collapse-borderless {
  background-color: #fff;
  border: 0;
}
.ant-collapse-borderless > .ant-collapse-item:last-child,
.ant-collapse-borderless > .ant-collapse-item:last-child .ant-collapse-header {
  border-radius: 0;
}
.ant-collapse-borderless > .ant-collapse-item-active {
  border: 0;
}
.ant-collapse-borderless > .ant-collapse-item > .ant-collapse-content {
  background-color: transparent;
  border-top: 1px solid #d9d9d9;
}
.ant-collapse-borderless > .ant-collapse-item > .ant-collapse-header:hover {
  background-color: #f7f7f7;
}
.ant-collapse .ant-collapse-item-disabled > .ant-collapse-header,
.ant-collapse .ant-collapse-item-disabled > .ant-collapse-header > .arrow {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
}
.ant-collapse > .ant-collapse-item:not(.ant-collapse-item-disabled) > .ant-collapse-header:active {
  background-color: #eee;
}
.ant-calendar-picker:hover .ant-calendar-picker-input:not(.ant-input-disabled) {
  border-color: @primary-color;
}
.ant-calendar-picker-clear {
  color: rgba(0, 0, 0, 0.25);
  background: #fff;
}
.ant-calendar-picker-clear:hover {
  color: rgba(0, 0, 0, 0.43);
}
.ant-calendar-picker-icon {
  color: rgba(0, 0, 0, 0.43);
}
.ant-calendar-picker-icon:after {
  color: rgba(0, 0, 0, 0.43);
}
.ant-calendar {
  border: 1px solid #fff;
  background-color: #fff;
  border-radius: 4px;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
  background-clip: padding-box;
}
.ant-calendar-input-wrap {
  border-bottom: 1px solid #e9e9e9;
}
.ant-calendar-input {
  border: 0;
  color: rgba(0, 0, 0, 0.65);
  background: #fff;
}
.ant-calendar-input::-moz-placeholder {
  color: #bfbfbf;
}
.ant-calendar-input:-ms-input-placeholder {
  color: #bfbfbf;
}
.ant-calendar-input::-webkit-input-placeholder {
  color: #bfbfbf;
}
.ant-calendar-header {
  border-bottom: 1px solid #e9e9e9;
}
.ant-calendar-header a:hover {
  color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-calendar-header .ant-calendar-century-select,
.ant-calendar-header .ant-calendar-decade-select,
.ant-calendar-header .ant-calendar-year-select,
.ant-calendar-header .ant-calendar-month-select {
  color: rgba(0, 0, 0, 0.65);
}
.ant-calendar-header .ant-calendar-prev-century-btn,
.ant-calendar-header .ant-calendar-next-century-btn,
.ant-calendar-header .ant-calendar-prev-decade-btn,
.ant-calendar-header .ant-calendar-next-decade-btn,
.ant-calendar-header .ant-calendar-prev-month-btn,
.ant-calendar-header .ant-calendar-next-month-btn,
.ant-calendar-header .ant-calendar-prev-year-btn,
.ant-calendar-header .ant-calendar-next-year-btn {
  color: rgba(0, 0, 0, 0.43);
}
.ant-calendar table {
  border-collapse: collapse;
  background-color: transparent;
}
.ant-calendar table,
.ant-calendar th,
.ant-calendar td {
  border: 0;
}
.ant-calendar-calendar-table {
  border-spacing: 0;
}
.ant-calendar-date {
  color: rgba(0, 0, 0, 0.65);
  border-radius: 2px;
  border: 1px solid transparent;
  background: transparent;
}
.ant-calendar-date:hover {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-calendar-date:active {
  color: #fff;
  background: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-calendar-today .ant-calendar-date {
  border-color: @primary-color;
  color: @primary-color;
}
.ant-calendar-last-month-cell .ant-calendar-date,
.ant-calendar-next-month-btn-day .ant-calendar-date {
  color: rgba(0, 0, 0, 0.25);
}
.ant-calendar-selected-day .ant-calendar-date {
  background: @primary-color;
  color: #fff;
  border: 1px solid transparent;
}
.ant-calendar-selected-day .ant-calendar-date:hover {
  background: @primary-color;
}
.ant-calendar-disabled-cell .ant-calendar-date {
  color: #bcbcbc;
  background: #f7f7f7;
  border-radius: 0;
  border: 1px solid transparent;
}
.ant-calendar-disabled-cell .ant-calendar-date:hover {
  background: #f7f7f7;
}
.ant-calendar-disabled-cell.ant-calendar-today .ant-calendar-date:before {
  border: 1px solid #bcbcbc;
  border-radius: 4px;
}
.ant-calendar-disabled-cell-first-of-row .ant-calendar-date {
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
}
.ant-calendar-disabled-cell-last-of-row .ant-calendar-date {
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
}
.ant-calendar-footer {
  border-top: 1px solid #e9e9e9;
}
.ant-calendar-footer:empty {
  border-top: 0;
}
.ant-calendar-footer-extra + .ant-calendar-footer-btn {
  border-top: 1px solid #e9e9e9;
}
.ant-calendar .ant-calendar-today-btn-disabled,
.ant-calendar .ant-calendar-clear-btn-disabled {
  color: rgba(0, 0, 0, 0.25);
}
.ant-calendar .ant-calendar-clear-btn:after {
  color: rgba(0, 0, 0, 0.25);
}
.ant-calendar .ant-calendar-clear-btn:hover:after {
  color: rgba(0, 0, 0, 0.43);
}
.ant-calendar .ant-calendar-ok-btn {
  background-image: none;
  border: 1px solid transparent;
  color: #fff;
  background-color: @primary-color;
  border-color: @primary-color;
  border-radius: 4px;
}
.ant-calendar .ant-calendar-ok-btn-lg {
  border-radius: 4px;
}
.ant-calendar .ant-calendar-ok-btn-sm {
  border-radius: 4px;
}
.ant-calendar .ant-calendar-ok-btn > a:only-child {
  color: currentColor;
}
.ant-calendar .ant-calendar-ok-btn > a:only-child:after {
  background: transparent;
}
.ant-calendar .ant-calendar-ok-btn:hover,
.ant-calendar .ant-calendar-ok-btn:focus {
  color: #fff;
  background-color: color(~`colorPalette("@{primary-color}", 5)`);
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-calendar .ant-calendar-ok-btn:hover > a:only-child,
.ant-calendar .ant-calendar-ok-btn:focus > a:only-child {
  color: currentColor;
}
.ant-calendar .ant-calendar-ok-btn:hover > a:only-child:after,
.ant-calendar .ant-calendar-ok-btn:focus > a:only-child:after {
  background: transparent;
}
.ant-calendar .ant-calendar-ok-btn:active,
.ant-calendar .ant-calendar-ok-btn.active {
  color: #fff;
  background-color: color(~`colorPalette("@{primary-color}", 7)`);
  border-color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-calendar .ant-calendar-ok-btn:active > a:only-child,
.ant-calendar .ant-calendar-ok-btn.active > a:only-child {
  color: currentColor;
}
.ant-calendar .ant-calendar-ok-btn:active > a:only-child:after,
.ant-calendar .ant-calendar-ok-btn.active > a:only-child:after {
  background: transparent;
}
.ant-calendar .ant-calendar-ok-btn.disabled,
.ant-calendar .ant-calendar-ok-btn[disabled],
.ant-calendar .ant-calendar-ok-btn.disabled:hover,
.ant-calendar .ant-calendar-ok-btn[disabled]:hover,
.ant-calendar .ant-calendar-ok-btn.disabled:focus,
.ant-calendar .ant-calendar-ok-btn[disabled]:focus,
.ant-calendar .ant-calendar-ok-btn.disabled:active,
.ant-calendar .ant-calendar-ok-btn[disabled]:active,
.ant-calendar .ant-calendar-ok-btn.disabled.active,
.ant-calendar .ant-calendar-ok-btn[disabled].active {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-calendar .ant-calendar-ok-btn.disabled > a:only-child,
.ant-calendar .ant-calendar-ok-btn[disabled] > a:only-child,
.ant-calendar .ant-calendar-ok-btn.disabled:hover > a:only-child,
.ant-calendar .ant-calendar-ok-btn[disabled]:hover > a:only-child,
.ant-calendar .ant-calendar-ok-btn.disabled:focus > a:only-child,
.ant-calendar .ant-calendar-ok-btn[disabled]:focus > a:only-child,
.ant-calendar .ant-calendar-ok-btn.disabled:active > a:only-child,
.ant-calendar .ant-calendar-ok-btn[disabled]:active > a:only-child,
.ant-calendar .ant-calendar-ok-btn.disabled.active > a:only-child,
.ant-calendar .ant-calendar-ok-btn[disabled].active > a:only-child {
  color: currentColor;
}
.ant-calendar .ant-calendar-ok-btn.disabled > a:only-child:after,
.ant-calendar .ant-calendar-ok-btn[disabled] > a:only-child:after,
.ant-calendar .ant-calendar-ok-btn.disabled:hover > a:only-child:after,
.ant-calendar .ant-calendar-ok-btn[disabled]:hover > a:only-child:after,
.ant-calendar .ant-calendar-ok-btn.disabled:focus > a:only-child:after,
.ant-calendar .ant-calendar-ok-btn[disabled]:focus > a:only-child:after,
.ant-calendar .ant-calendar-ok-btn.disabled:active > a:only-child:after,
.ant-calendar .ant-calendar-ok-btn[disabled]:active > a:only-child:after,
.ant-calendar .ant-calendar-ok-btn.disabled.active > a:only-child:after,
.ant-calendar .ant-calendar-ok-btn[disabled].active > a:only-child:after {
  background: transparent;
}
.ant-calendar .ant-calendar-ok-btn-disabled {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-calendar .ant-calendar-ok-btn-disabled > a:only-child {
  color: currentColor;
}
.ant-calendar .ant-calendar-ok-btn-disabled > a:only-child:after {
  background: transparent;
}
.ant-calendar .ant-calendar-ok-btn-disabled:hover {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-calendar .ant-calendar-ok-btn-disabled:hover > a:only-child {
  color: currentColor;
}
.ant-calendar .ant-calendar-ok-btn-disabled:hover > a:only-child:after {
  background: transparent;
}
.ant-calendar-range-picker-input {
  background-color: transparent;
  border: 0;
}
.ant-calendar-range-picker-input::-moz-placeholder {
  color: #bfbfbf;
}
.ant-calendar-range-picker-input:-ms-input-placeholder {
  color: #bfbfbf;
}
.ant-calendar-range-picker-input::-webkit-input-placeholder {
  color: #bfbfbf;
}
.ant-calendar-range-picker-separator {
  color: rgba(0, 0, 0, 0.43);
}
.ant-calendar-range-left .ant-calendar-time-picker-inner {
  border-right: 2px solid #e9e9e9;
}
.ant-calendar-range-right .ant-calendar-time-picker-inner {
  border-left: 2px solid #e9e9e9;
}
.ant-calendar-range-middle {
  color: rgba(0, 0, 0, 0.43);
}
.ant-calendar-range .ant-calendar-input,
.ant-calendar-range .ant-calendar-time-picker-input {
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
  background-image: none;
  border: 1px solid #d9d9d9;
  border-radius: 4px;
  border: 0;
  box-shadow: none;
}
.ant-calendar-range .ant-calendar-input::-moz-placeholder,
.ant-calendar-range .ant-calendar-time-picker-input::-moz-placeholder {
  color: #bfbfbf;
}
.ant-calendar-range .ant-calendar-input:-ms-input-placeholder,
.ant-calendar-range .ant-calendar-time-picker-input:-ms-input-placeholder {
  color: #bfbfbf;
}
.ant-calendar-range .ant-calendar-input::-webkit-input-placeholder,
.ant-calendar-range .ant-calendar-time-picker-input::-webkit-input-placeholder {
  color: #bfbfbf;
}
.ant-calendar-range .ant-calendar-input:hover,
.ant-calendar-range .ant-calendar-time-picker-input:hover {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-calendar-range .ant-calendar-input:focus,
.ant-calendar-range .ant-calendar-time-picker-input:focus {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-calendar-range .ant-calendar-input-disabled,
.ant-calendar-range .ant-calendar-time-picker-input-disabled {
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-calendar-range .ant-calendar-input-disabled:hover,
.ant-calendar-range .ant-calendar-time-picker-input-disabled:hover {
  border-color: #e2e2e2;
}
.ant-calendar-range .ant-calendar-input:focus,
.ant-calendar-range .ant-calendar-time-picker-input:focus {
  box-shadow: none;
}
.ant-calendar-range .ant-calendar-in-range-cell {
  border-radius: 0;
}
.ant-calendar-range .ant-calendar-in-range-cell:before {
  background: color(~`colorPalette("@{primary-color}", 1)`);
  border-radius: 0;
  border: 0;
}
.ant-calendar-range .ant-calendar-header,
.ant-calendar-range .ant-calendar-month-panel-header,
.ant-calendar-range .ant-calendar-year-panel-header {
  border-bottom: 0;
}
.ant-calendar-range .ant-calendar-body,
.ant-calendar-range .ant-calendar-month-panel-body,
.ant-calendar-range .ant-calendar-year-panel-body {
  border-top: 1px solid #e9e9e9;
}
.ant-calendar-range.ant-calendar-time .ant-calendar-time-picker-inner {
  background: none;
}
.ant-calendar-range.ant-calendar-time .ant-calendar-time-picker-combobox {
  background-color: #fff;
  border-top: 1px solid #e9e9e9;
}
.ant-calendar-range.ant-calendar-show-time-picker .ant-calendar-body {
  border-top-color: transparent;
}
.ant-calendar-time-picker {
  background-color: #fff;
}
.ant-calendar-time-picker-inner {
  background-color: #fff;
  background-clip: padding-box;
}
.ant-calendar-time-picker-select {
  border-right: 1px solid #e9e9e9;
}
.ant-calendar-time-picker-select:first-child {
  border-left: 0;
}
.ant-calendar-time-picker-select:last-child {
  border-right: 0;
}
.ant-calendar-time-picker-select li:hover {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
li.ant-calendar-time-picker-select-option-selected {
  background: #f7f7f7;
}
li.ant-calendar-time-picker-select-option-disabled {
  color: rgba(0, 0, 0, 0.25);
}
li.ant-calendar-time-picker-select-option-disabled:hover {
  background: transparent;
}
.ant-calendar-time .ant-calendar-day-select {
  color: rgba(0, 0, 0, 0.65);
}
.ant-calendar-time .ant-calendar-footer .ant-calendar-time-picker-btn-disabled {
  color: rgba(0, 0, 0, 0.25);
}
.ant-calendar-month-panel {
  border-radius: 4px;
  background: #fff;
}
.ant-calendar-month-panel-header {
  border-bottom: 1px solid #e9e9e9;
}
.ant-calendar-month-panel-header a:hover {
  color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-calendar-month-panel-header .ant-calendar-month-panel-century-select,
.ant-calendar-month-panel-header .ant-calendar-month-panel-decade-select,
.ant-calendar-month-panel-header .ant-calendar-month-panel-year-select,
.ant-calendar-month-panel-header .ant-calendar-month-panel-month-select {
  color: rgba(0, 0, 0, 0.65);
}
.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-century-btn,
.ant-calendar-month-panel-header .ant-calendar-month-panel-next-century-btn,
.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-decade-btn,
.ant-calendar-month-panel-header .ant-calendar-month-panel-next-decade-btn,
.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-month-btn,
.ant-calendar-month-panel-header .ant-calendar-month-panel-next-month-btn,
.ant-calendar-month-panel-header .ant-calendar-month-panel-prev-year-btn,
.ant-calendar-month-panel-header .ant-calendar-month-panel-next-year-btn {
  color: rgba(0, 0, 0, 0.43);
}
.ant-calendar-month-panel-table {
  border-collapse: separate;
}
.ant-calendar-month-panel-selected-cell .ant-calendar-month-panel-month {
  background: @primary-color;
  color: #fff;
}
.ant-calendar-month-panel-selected-cell .ant-calendar-month-panel-month:hover {
  background: @primary-color;
  color: #fff;
}
.ant-calendar-month-panel-cell-disabled .ant-calendar-month-panel-month,
.ant-calendar-month-panel-cell-disabled .ant-calendar-month-panel-month:hover {
  color: #bcbcbc;
  background: #f7f7f7;
}
.ant-calendar-month-panel-month {
  color: rgba(0, 0, 0, 0.65);
  background: transparent;
  border-radius: 4px;
}
.ant-calendar-month-panel-month:hover {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-calendar-year-panel {
  border-radius: 4px;
  background: #fff;
}
.ant-calendar-year-panel-header {
  border-bottom: 1px solid #e9e9e9;
}
.ant-calendar-year-panel-header a:hover {
  color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-calendar-year-panel-header .ant-calendar-year-panel-century-select,
.ant-calendar-year-panel-header .ant-calendar-year-panel-decade-select,
.ant-calendar-year-panel-header .ant-calendar-year-panel-year-select,
.ant-calendar-year-panel-header .ant-calendar-year-panel-month-select {
  color: rgba(0, 0, 0, 0.65);
}
.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-century-btn,
.ant-calendar-year-panel-header .ant-calendar-year-panel-next-century-btn,
.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-decade-btn,
.ant-calendar-year-panel-header .ant-calendar-year-panel-next-decade-btn,
.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-month-btn,
.ant-calendar-year-panel-header .ant-calendar-year-panel-next-month-btn,
.ant-calendar-year-panel-header .ant-calendar-year-panel-prev-year-btn,
.ant-calendar-year-panel-header .ant-calendar-year-panel-next-year-btn {
  color: rgba(0, 0, 0, 0.43);
}
.ant-calendar-year-panel-table {
  border-collapse: separate;
}
.ant-calendar-year-panel-year {
  color: rgba(0, 0, 0, 0.65);
  background: transparent;
  border-radius: 4px;
}
.ant-calendar-year-panel-year:hover {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-calendar-year-panel-selected-cell .ant-calendar-year-panel-year {
  background: @primary-color;
  color: #fff;
}
.ant-calendar-year-panel-selected-cell .ant-calendar-year-panel-year:hover {
  background: @primary-color;
  color: #fff;
}
.ant-calendar-year-panel-last-decade-cell .ant-calendar-year-panel-year,
.ant-calendar-year-panel-next-decade-cell .ant-calendar-year-panel-year {
  color: rgba(0, 0, 0, 0.25);
}
.ant-calendar-decade-panel {
  background: #fff;
  border-radius: 4px;
}
.ant-calendar-decade-panel-header {
  border-bottom: 1px solid #e9e9e9;
}
.ant-calendar-decade-panel-header a:hover {
  color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-calendar-decade-panel-header .ant-calendar-decade-panel-century-select,
.ant-calendar-decade-panel-header .ant-calendar-decade-panel-decade-select,
.ant-calendar-decade-panel-header .ant-calendar-decade-panel-year-select,
.ant-calendar-decade-panel-header .ant-calendar-decade-panel-month-select {
  color: rgba(0, 0, 0, 0.65);
}
.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-century-btn,
.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-century-btn,
.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-decade-btn,
.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-decade-btn,
.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-month-btn,
.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-month-btn,
.ant-calendar-decade-panel-header .ant-calendar-decade-panel-prev-year-btn,
.ant-calendar-decade-panel-header .ant-calendar-decade-panel-next-year-btn {
  color: rgba(0, 0, 0, 0.43);
}
.ant-calendar-decade-panel-table {
  border-collapse: separate;
}
.ant-calendar-decade-panel-decade {
  color: rgba(0, 0, 0, 0.65);
  background: transparent;
  border-radius: 4px;
}
.ant-calendar-decade-panel-decade:hover {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-calendar-decade-panel-selected-cell .ant-calendar-decade-panel-decade {
  background: @primary-color;
  color: #fff;
}
.ant-calendar-decade-panel-selected-cell .ant-calendar-decade-panel-decade:hover {
  background: @primary-color;
  color: #fff;
}
.ant-calendar-decade-panel-last-century-cell .ant-calendar-decade-panel-decade,
.ant-calendar-decade-panel-next-century-cell .ant-calendar-decade-panel-decade {
  color: rgba(0, 0, 0, 0.25);
}
.ant-dropdown-menu {
  background-color: #fff;
  border-radius: 4px;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
  background-clip: padding-box;
}
.ant-dropdown-menu-item-group-title {
  color: rgba(0, 0, 0, 0.43);
}
.ant-dropdown-menu-item,
.ant-dropdown-menu-submenu-title {
  color: rgba(0, 0, 0, 0.65);
}
.ant-dropdown-menu-item > a,
.ant-dropdown-menu-submenu-title > a {
  color: rgba(0, 0, 0, 0.65);
}
.ant-dropdown-menu-item-selected,
.ant-dropdown-menu-submenu-title-selected,
.ant-dropdown-menu-item-selected > a,
.ant-dropdown-menu-submenu-title-selected > a {
  color: @primary-color;
  background-color: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-dropdown-menu-item:hover,
.ant-dropdown-menu-submenu-title:hover {
  background-color: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-dropdown-menu-item-disabled,
.ant-dropdown-menu-submenu-title-disabled {
  color: rgba(0, 0, 0, 0.25);
}
.ant-dropdown-menu-item-disabled:hover,
.ant-dropdown-menu-submenu-title-disabled:hover {
  color: rgba(0, 0, 0, 0.25);
  background-color: #fff;
}
.ant-dropdown-menu-item:first-child,
.ant-dropdown-menu-submenu-title:first-child,
.ant-dropdown-menu-item:first-child > a,
.ant-dropdown-menu-submenu-title:first-child > a {
  border-radius: 4px 4px 0 0;
}
.ant-dropdown-menu-item:last-child,
.ant-dropdown-menu-submenu-title:last-child,
.ant-dropdown-menu-item:last-child > a,
.ant-dropdown-menu-submenu-title:last-child > a {
  border-radius: 0 0 4px 4px;
}
.ant-dropdown-menu-item:only-child,
.ant-dropdown-menu-submenu-title:only-child,
.ant-dropdown-menu-item:only-child > a,
.ant-dropdown-menu-submenu-title:only-child > a {
  border-radius: 4px;
}
.ant-dropdown-menu-item-divider,
.ant-dropdown-menu-submenu-title-divider {
  background-color: #e9e9e9;
}
.ant-dropdown-menu-submenu-title:after {
  color: rgba(0, 0, 0, 0.43);
}
.ant-dropdown-menu-submenu.ant-dropdown-menu-submenu-disabled .ant-dropdown-menu-submenu-title,
.ant-dropdown-menu-submenu.ant-dropdown-menu-submenu-disabled .ant-dropdown-menu-submenu-title:after {
  color: rgba(0, 0, 0, 0.25);
}
.ant-dropdown-menu-submenu:first-child .ant-dropdown-menu-submenu-title {
  border-radius: 4px 4px 0 0;
}
.ant-dropdown-menu-submenu:last-child .ant-dropdown-menu-submenu-title {
  border-radius: 0 0 4px 4px;
}
.ant-dropdown-menu-dark,
.ant-dropdown-menu-dark .ant-dropdown-menu {
  background: #404040;
}
.ant-dropdown-menu-dark .ant-dropdown-menu-item,
.ant-dropdown-menu-dark .ant-dropdown-menu-submenu-title,
.ant-dropdown-menu-dark .ant-dropdown-menu-item > a {
  color: rgba(255, 255, 255, 0.67);
}
.ant-dropdown-menu-dark .ant-dropdown-menu-item:after,
.ant-dropdown-menu-dark .ant-dropdown-menu-submenu-title:after,
.ant-dropdown-menu-dark .ant-dropdown-menu-item > a:after {
  color: rgba(255, 255, 255, 0.67);
}
.ant-dropdown-menu-dark .ant-dropdown-menu-item:hover,
.ant-dropdown-menu-dark .ant-dropdown-menu-submenu-title:hover,
.ant-dropdown-menu-dark .ant-dropdown-menu-item > a:hover {
  color: #fff;
  background: transparent;
}
.ant-dropdown-menu-dark .ant-dropdown-menu-item-selected,
.ant-dropdown-menu-dark .ant-dropdown-menu-item-selected:hover,
.ant-dropdown-menu-dark .ant-dropdown-menu-item-selected > a {
  background: @primary-color;
  color: #fff;
}
legend {
  color: rgba(0, 0, 0, 0.43);
  border: 0;
  border-bottom: 1px solid #d9d9d9;
}
output {
  color: rgba(0, 0, 0, 0.65);
}
.ant-form-item-required:before {
  color: #f04134;
}
.ant-form-item {
  color: rgba(0, 0, 0, 0.65);
}
.ant-form-item-label label {
  color: rgba(0, 0, 0, 0.85);
}
.ant-form-explain,
.ant-form-extra {
  color: rgba(0, 0, 0, 0.43);
}
form .ant-upload {
  background: transparent;
}
.ant-input-group-wrap .ant-select-selection {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}
.ant-input-group-wrap .ant-select-selection:hover {
  border-color: #d9d9d9;
}
.ant-input-group-wrap .ant-select-selection--single {
  background-color: #eee;
}
.ant-input-group-wrap .ant-select-open .ant-select-selection {
  border-color: #d9d9d9;
  box-shadow: none;
}
.has-success.has-feedback:after {
  color: #00a854;
}
.has-warning .ant-form-explain,
.has-warning .ant-form-split {
  color: #ffbf00;
}
.has-warning .ant-input,
.has-warning .ant-input:hover {
  border-color: #ffbf00;
}
.has-warning .ant-input:focus {
  border-color: #ffce3d;
  box-shadow: 0 0 0 2px rgba(255, 191, 0, 0.2);
}
.has-warning .ant-input:not([disabled]):hover {
  border-color: #ffbf00;
}
.has-warning .ant-calendar-picker-open .ant-calendar-picker-input {
  border-color: #ffce3d;
  box-shadow: 0 0 0 2px rgba(255, 191, 0, 0.2);
}
.has-warning .ant-input-prefix {
  color: #ffbf00;
}
.has-warning .ant-input-group-addon {
  color: #ffbf00;
  border-color: #ffbf00;
  background-color: #fff;
}
.has-warning .has-feedback {
  color: #ffbf00;
}
.has-warning.has-feedback:after {
  color: #ffbf00;
}
.has-warning .ant-select-selection {
  border-color: #ffbf00;
}
.has-warning .ant-select-open .ant-select-selection,
.has-warning .ant-select-focused .ant-select-selection {
  border-color: #ffce3d;
  box-shadow: 0 0 0 2px rgba(255, 191, 0, 0.2);
}
.has-warning .ant-calendar-picker-icon:after,
.has-warning .ant-time-picker-icon:after,
.has-warning .ant-picker-icon:after,
.has-warning .ant-select-arrow,
.has-warning .ant-cascader-picker-arrow {
  color: #ffbf00;
}
.has-warning .ant-input-number,
.has-warning .ant-time-picker-input {
  border-color: #ffbf00;
}
.has-warning .ant-input-number-focused,
.has-warning .ant-time-picker-input-focused,
.has-warning .ant-input-number:focus,
.has-warning .ant-time-picker-input:focus {
  border-color: #ffce3d;
  box-shadow: 0 0 0 2px rgba(255, 191, 0, 0.2);
}
.has-warning .ant-input-number:not([disabled]):hover,
.has-warning .ant-time-picker-input:not([disabled]):hover {
  border-color: #ffbf00;
}
.has-warning .ant-cascader-picker:focus .ant-cascader-input {
  border-color: #ffce3d;
  box-shadow: 0 0 0 2px rgba(255, 191, 0, 0.2);
}
.has-error .ant-form-explain,
.has-error .ant-form-split {
  color: #f04134;
}
.has-error .ant-input,
.has-error .ant-input:hover {
  border-color: #f04134;
}
.has-error .ant-input:focus {
  border-color: #f46e65;
  box-shadow: 0 0 0 2px rgba(240, 65, 52, 0.2);
}
.has-error .ant-input:not([disabled]):hover {
  border-color: #f04134;
}
.has-error .ant-calendar-picker-open .ant-calendar-picker-input {
  border-color: #f46e65;
  box-shadow: 0 0 0 2px rgba(240, 65, 52, 0.2);
}
.has-error .ant-input-prefix {
  color: #f04134;
}
.has-error .ant-input-group-addon {
  color: #f04134;
  border-color: #f04134;
  background-color: #fff;
}
.has-error .has-feedback {
  color: #f04134;
}
.has-error.has-feedback:after {
  color: #f04134;
}
.has-error .ant-select-selection {
  border-color: #f04134;
}
.has-error .ant-select-open .ant-select-selection,
.has-error .ant-select-focused .ant-select-selection {
  border-color: #f46e65;
  box-shadow: 0 0 0 2px rgba(240, 65, 52, 0.2);
}
.has-error .ant-input-group-addon .ant-select-selection {
  border-color: transparent;
  box-shadow: none;
}
.has-error .ant-calendar-picker-icon:after,
.has-error .ant-time-picker-icon:after,
.has-error .ant-picker-icon:after,
.has-error .ant-select-arrow,
.has-error .ant-cascader-picker-arrow {
  color: #f04134;
}
.has-error .ant-input-number,
.has-error .ant-time-picker-input {
  border-color: #f04134;
}
.has-error .ant-input-number-focused,
.has-error .ant-time-picker-input-focused,
.has-error .ant-input-number:focus,
.has-error .ant-time-picker-input:focus {
  border-color: #f46e65;
  box-shadow: 0 0 0 2px rgba(240, 65, 52, 0.2);
}
.has-error .ant-input-number:not([disabled]):hover,
.has-error .ant-time-picker-input:not([disabled]):hover {
  border-color: #f04134;
}
.has-error .ant-mention-wrapper .ant-mention-editor,
.has-error .ant-mention-wrapper .ant-mention-editor:not([disabled]):hover {
  border-color: #f04134;
}
.has-error .ant-mention-wrapper.ant-mention-active:not([disabled]) .ant-mention-editor,
.has-error .ant-mention-wrapper .ant-mention-editor:not([disabled]):focus {
  border-color: #f46e65;
  box-shadow: 0 0 0 2px rgba(240, 65, 52, 0.2);
}
.has-error .ant-cascader-picker:focus .ant-cascader-input {
  border-color: #f46e65;
  box-shadow: 0 0 0 2px rgba(240, 65, 52, 0.2);
}
.is-validating.has-feedback:after {
  color: @primary-color;
}
.ant-input-number {
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
  background-image: none;
  border: 1px solid #d9d9d9;
  border-radius: 4px;
}
.ant-input-number::-moz-placeholder {
  color: #bfbfbf;
}
.ant-input-number:-ms-input-placeholder {
  color: #bfbfbf;
}
.ant-input-number::-webkit-input-placeholder {
  color: #bfbfbf;
}
.ant-input-number:hover {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-input-number:focus {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-input-number-disabled {
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-input-number-disabled:hover {
  border-color: #e2e2e2;
}
.ant-input-number-handler {
  color: rgba(0, 0, 0, 0.43);
}
.ant-input-number-handler:active {
  background: #f4f4f4;
}
.ant-input-number-handler:hover .ant-input-number-handler-up-inner,
.ant-input-number-handler:hover .ant-input-number-handler-down-inner {
  color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-input-number-handler-up-inner,
.ant-input-number-handler-down-inner {
  color: rgba(0, 0, 0, 0.43);
}
.ant-input-number:hover {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-input-number-focused {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-input-number-disabled {
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-input-number-disabled:hover {
  border-color: #e2e2e2;
}
.ant-input-number-input {
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
  border: 0;
  border-radius: 4px;
}
.ant-input-number-input::-moz-placeholder {
  color: #bfbfbf;
}
.ant-input-number-input:-ms-input-placeholder {
  color: #bfbfbf;
}
.ant-input-number-input::-webkit-input-placeholder {
  color: #bfbfbf;
}
.ant-input-number-input[disabled] {
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-input-number-input[disabled]:hover {
  border-color: #e2e2e2;
}
.ant-input-number-handler-wrap {
  border-left: 1px solid #d9d9d9;
  background: #fff;
  border-radius: 0 4px 4px 0;
}
.ant-input-number-handler-down {
  border-top: 1px solid #d9d9d9;
}
.ant-input-number-handler-down-disabled .ant-input-number-handler-down-inner,
.ant-input-number-handler-up-disabled .ant-input-number-handler-down-inner,
.ant-input-number-disabled .ant-input-number-handler-down-inner,
.ant-input-number-handler-down-disabled .ant-input-number-handler-up-inner,
.ant-input-number-handler-up-disabled .ant-input-number-handler-up-inner,
.ant-input-number-disabled .ant-input-number-handler-up-inner {
  color: #ccc !important;
}
.ant-input-number-disabled .ant-input-number-input {
  background-color: #f7f7f7;
}
.ant-input-number-disabled .ant-input-number-handler {
  color: #ccc !important;
}
.ant-input-search-icon:hover {
  color: @primary-color;
}
.ant-search-input.ant-input-group .ant-input:first-child,
.ant-search-input.ant-input-group .ant-select:first-child {
  border-radius: 4px;
}
.ant-search-input .ant-search-btn {
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
  border-color: #d9d9d9;
  border-radius: 0 3px 3px 0;
  border-width: 0 0 0 1px;
}
.ant-search-input .ant-search-btn > a:only-child {
  color: currentColor;
}
.ant-search-input .ant-search-btn > a:only-child:after {
  background: transparent;
}
.ant-search-input .ant-search-btn:hover,
.ant-search-input .ant-search-btn:focus {
  color: @primary-color;
  background-color: #fff;
  border-color: @primary-color;
}
.ant-search-input .ant-search-btn:hover > a:only-child,
.ant-search-input .ant-search-btn:focus > a:only-child {
  color: currentColor;
}
.ant-search-input .ant-search-btn:hover > a:only-child:after,
.ant-search-input .ant-search-btn:focus > a:only-child:after {
  background: transparent;
}
.ant-search-input .ant-search-btn:active,
.ant-search-input .ant-search-btn.active {
  color: color(~`colorPalette("@{primary-color}", 7)`);
  background-color: #fff;
  border-color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-search-input .ant-search-btn:active > a:only-child,
.ant-search-input .ant-search-btn.active > a:only-child {
  color: currentColor;
}
.ant-search-input .ant-search-btn:active > a:only-child:after,
.ant-search-input .ant-search-btn.active > a:only-child:after {
  background: transparent;
}
.ant-search-input .ant-search-btn.disabled,
.ant-search-input .ant-search-btn[disabled],
.ant-search-input .ant-search-btn.disabled:hover,
.ant-search-input .ant-search-btn[disabled]:hover,
.ant-search-input .ant-search-btn.disabled:focus,
.ant-search-input .ant-search-btn[disabled]:focus,
.ant-search-input .ant-search-btn.disabled:active,
.ant-search-input .ant-search-btn[disabled]:active,
.ant-search-input .ant-search-btn.disabled.active,
.ant-search-input .ant-search-btn[disabled].active {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-search-input .ant-search-btn.disabled > a:only-child,
.ant-search-input .ant-search-btn[disabled] > a:only-child,
.ant-search-input .ant-search-btn.disabled:hover > a:only-child,
.ant-search-input .ant-search-btn[disabled]:hover > a:only-child,
.ant-search-input .ant-search-btn.disabled:focus > a:only-child,
.ant-search-input .ant-search-btn[disabled]:focus > a:only-child,
.ant-search-input .ant-search-btn.disabled:active > a:only-child,
.ant-search-input .ant-search-btn[disabled]:active > a:only-child,
.ant-search-input .ant-search-btn.disabled.active > a:only-child,
.ant-search-input .ant-search-btn[disabled].active > a:only-child {
  color: currentColor;
}
.ant-search-input .ant-search-btn.disabled > a:only-child:after,
.ant-search-input .ant-search-btn[disabled] > a:only-child:after,
.ant-search-input .ant-search-btn.disabled:hover > a:only-child:after,
.ant-search-input .ant-search-btn[disabled]:hover > a:only-child:after,
.ant-search-input .ant-search-btn.disabled:focus > a:only-child:after,
.ant-search-input .ant-search-btn[disabled]:focus > a:only-child:after,
.ant-search-input .ant-search-btn.disabled:active > a:only-child:after,
.ant-search-input .ant-search-btn[disabled]:active > a:only-child:after,
.ant-search-input .ant-search-btn.disabled.active > a:only-child:after,
.ant-search-input .ant-search-btn[disabled].active > a:only-child:after {
  background: transparent;
}
.ant-search-input .ant-search-btn:hover,
.ant-search-input .ant-search-btn:focus,
.ant-search-input .ant-search-btn:active,
.ant-search-input .ant-search-btn.active {
  background: #fff;
}
.ant-search-input .ant-search-btn:hover {
  border-color: #d9d9d9;
}
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty,
.ant-search-input:hover .ant-search-btn-noempty {
  color: #fff;
  background-color: @primary-color;
  border-color: @primary-color;
}
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty > a:only-child {
  color: currentColor;
}
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty > a:only-child:after {
  background: transparent;
}
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:hover,
.ant-search-input:hover .ant-search-btn-noempty:hover,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:focus,
.ant-search-input:hover .ant-search-btn-noempty:focus {
  color: #fff;
  background-color: color(~`colorPalette("@{primary-color}", 5)`);
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:hover > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty:hover > a:only-child,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:focus > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty:focus > a:only-child {
  color: currentColor;
}
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:hover > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty:hover > a:only-child:after,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:focus > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty:focus > a:only-child:after {
  background: transparent;
}
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:active,
.ant-search-input:hover .ant-search-btn-noempty:active,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.active,
.ant-search-input:hover .ant-search-btn-noempty.active {
  color: #fff;
  background-color: color(~`colorPalette("@{primary-color}", 7)`);
  border-color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:active > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty:active > a:only-child,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.active > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty.active > a:only-child {
  color: currentColor;
}
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty:active > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty:active > a:only-child:after,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.active > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty.active > a:only-child:after {
  background: transparent;
}
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled,
.ant-search-input:hover .ant-search-btn-noempty.disabled,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled],
.ant-search-input:hover .ant-search-btn-noempty[disabled],
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:hover,
.ant-search-input:hover .ant-search-btn-noempty.disabled:hover,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:hover,
.ant-search-input:hover .ant-search-btn-noempty[disabled]:hover,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:focus,
.ant-search-input:hover .ant-search-btn-noempty.disabled:focus,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:focus,
.ant-search-input:hover .ant-search-btn-noempty[disabled]:focus,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:active,
.ant-search-input:hover .ant-search-btn-noempty.disabled:active,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:active,
.ant-search-input:hover .ant-search-btn-noempty[disabled]:active,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled.active,
.ant-search-input:hover .ant-search-btn-noempty.disabled.active,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled].active,
.ant-search-input:hover .ant-search-btn-noempty[disabled].active {
  color: rgba(0, 0, 0, 0.25);
  background-color: #f7f7f7;
  border-color: #d9d9d9;
}
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty.disabled > a:only-child,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled] > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty[disabled] > a:only-child,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:hover > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty.disabled:hover > a:only-child,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:hover > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty[disabled]:hover > a:only-child,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:focus > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty.disabled:focus > a:only-child,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:focus > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty[disabled]:focus > a:only-child,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:active > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty.disabled:active > a:only-child,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:active > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty[disabled]:active > a:only-child,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled.active > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty.disabled.active > a:only-child,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled].active > a:only-child,
.ant-search-input:hover .ant-search-btn-noempty[disabled].active > a:only-child {
  color: currentColor;
}
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty.disabled > a:only-child:after,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled] > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty[disabled] > a:only-child:after,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:hover > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty.disabled:hover > a:only-child:after,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:hover > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty[disabled]:hover > a:only-child:after,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:focus > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty.disabled:focus > a:only-child:after,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:focus > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty[disabled]:focus > a:only-child:after,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled:active > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty.disabled:active > a:only-child:after,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled]:active > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty[disabled]:active > a:only-child:after,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty.disabled.active > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty.disabled.active > a:only-child:after,
.ant-search-input.ant-search-input-focus .ant-search-btn-noempty[disabled].active > a:only-child:after,
.ant-search-input:hover .ant-search-btn-noempty[disabled].active > a:only-child:after {
  background: transparent;
}
.ant-input {
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
  background-image: none;
  border: 1px solid #d9d9d9;
  border-radius: 4px;
}
.ant-input::-moz-placeholder {
  color: #bfbfbf;
}
.ant-input:-ms-input-placeholder {
  color: #bfbfbf;
}
.ant-input::-webkit-input-placeholder {
  color: #bfbfbf;
}
.ant-input:hover {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-input:focus {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-input-disabled {
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-input-disabled:hover {
  border-color: #e2e2e2;
}
.ant-input-group {
  border-collapse: separate;
  border-spacing: 0;
}
.ant-input-group-addon:not(:first-child):not(:last-child),
.ant-input-group-wrap:not(:first-child):not(:last-child),
.ant-input-group > .ant-input:not(:first-child):not(:last-child) {
  border-radius: 0;
}
.ant-input-group-addon {
  color: rgba(0, 0, 0, 0.65);
  background-color: #eee;
  border: 1px solid #d9d9d9;
  border-radius: 4px;
}
.ant-input-group-addon .ant-select .ant-select-selection {
  background-color: inherit;
  border: 1px solid transparent;
  box-shadow: none;
}
.ant-input-group-addon .ant-select-open .ant-select-selection,
.ant-input-group-addon .ant-select-focused .ant-select-selection {
  color: @primary-color;
}
.ant-input-group > .ant-input:first-child,
.ant-input-group-addon:first-child {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}
.ant-input-group > .ant-input:first-child .ant-select .ant-select-selection,
.ant-input-group-addon:first-child .ant-select .ant-select-selection {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}
.ant-input-group > .ant-input-affix-wrapper:not(:first-child) .ant-input {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}
.ant-input-group > .ant-input-affix-wrapper:not(:last-child) .ant-input {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}
.ant-input-group-addon:first-child {
  border-right: 0;
}
.ant-input-group-addon:last-child {
  border-left: 0;
}
.ant-input-group > .ant-input:last-child,
.ant-input-group-addon:last-child {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}
.ant-input-group > .ant-input:last-child .ant-select .ant-select-selection,
.ant-input-group-addon:last-child .ant-select .ant-select-selection {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}
.ant-input-group.ant-input-group-compact > * {
  border-radius: 0;
  border-right-width: 0;
}
.ant-input-group.ant-input-group-compact > .ant-select > .ant-select-selection,
.ant-input-group.ant-input-group-compact > .ant-calendar-picker .ant-input,
.ant-input-group.ant-input-group-compact > .ant-select-auto-complete .ant-input,
.ant-input-group.ant-input-group-compact > .ant-cascader-picker .ant-input,
.ant-input-group.ant-input-group-compact > .ant-mention-wrapper .ant-mention-editor,
.ant-input-group.ant-input-group-compact > .ant-time-picker .ant-time-picker-input {
  border-radius: 0;
  border-right-width: 0;
}
.ant-input-group.ant-input-group-compact > *:first-child,
.ant-input-group.ant-input-group-compact > .ant-select:first-child > .ant-select-selection,
.ant-input-group.ant-input-group-compact > .ant-calendar-picker:first-child .ant-input,
.ant-input-group.ant-input-group-compact > .ant-select-auto-complete:first-child .ant-input,
.ant-input-group.ant-input-group-compact > .ant-cascader-picker:first-child .ant-input,
.ant-input-group.ant-input-group-compact > .ant-mention-wrapper:first-child .ant-mention-editor,
.ant-input-group.ant-input-group-compact > .ant-time-picker:first-child .ant-time-picker-input {
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
}
.ant-input-group.ant-input-group-compact > *:last-child,
.ant-input-group.ant-input-group-compact > .ant-select:last-child > .ant-select-selection,
.ant-input-group.ant-input-group-compact > .ant-calendar-picker:last-child .ant-input,
.ant-input-group.ant-input-group-compact > .ant-select-auto-complete:last-child .ant-input,
.ant-input-group.ant-input-group-compact > .ant-cascader-picker:last-child .ant-input,
.ant-input-group.ant-input-group-compact > .ant-mention-wrapper:last-child .ant-mention-editor,
.ant-input-group.ant-input-group-compact > .ant-time-picker:last-child .ant-time-picker-input {
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
  border-right-width: 1px;
}
.ant-input-affix-wrapper:hover .ant-input:not(.ant-input-disabled) {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-input-affix-wrapper .ant-input-prefix,
.ant-input-affix-wrapper .ant-input-suffix {
  color: rgba(0, 0, 0, 0.65);
}
.ant-layout {
  background: #ececec;
}
.ant-layout-header {
  background: #404040;
}
.ant-layout-footer {
  background: #ececec;
  color: rgba(0, 0, 0, 0.65);
}
.ant-layout-sider {
  background: #404040;
}
.ant-layout-sider-trigger {
  color: #fff;
  background: #404040;
}
.ant-layout-sider-zero-width-trigger {
  background: #404040;
  color: #fff;
  border-radius: 0 4px 4px 0;
}
.ant-layout-sider-zero-width-trigger:hover {
  background: #535353;
}
.ant-mention-wrapper .ant-mention-editor {
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
  background-image: none;
  border: 1px solid #d9d9d9;
  border-radius: 4px;
}
.ant-mention-wrapper .ant-mention-editor::-moz-placeholder {
  color: #bfbfbf;
}
.ant-mention-wrapper .ant-mention-editor:-ms-input-placeholder {
  color: #bfbfbf;
}
.ant-mention-wrapper .ant-mention-editor::-webkit-input-placeholder {
  color: #bfbfbf;
}
.ant-mention-wrapper .ant-mention-editor:hover {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-mention-wrapper .ant-mention-editor:focus {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-mention-wrapper .ant-mention-editor-disabled {
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-mention-wrapper .ant-mention-editor-disabled:hover {
  border-color: #e2e2e2;
}
.ant-mention-wrapper.ant-mention-active:not(.disabled) .ant-mention-editor {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-mention-wrapper.disabled .ant-mention-editor {
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-mention-wrapper.disabled .ant-mention-editor:hover {
  border-color: #e2e2e2;
}
.ant-mention-wrapper .public-DraftEditorPlaceholder-root .public-DraftEditorPlaceholder-inner {
  color: #bfbfbf;
}
.ant-mention-dropdown {
  background-color: #fff;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
  border-radius: 4px;
}
.ant-mention-dropdown-notfound.ant-mention-dropdown-item {
  color: rgba(0, 0, 0, 0.25);
}
.ant-mention-dropdown-notfound.ant-mention-dropdown-item .anticon-loading {
  color: @primary-color;
}
.ant-mention-dropdown-item {
  color: rgba(0, 0, 0, 0.65);
}
.ant-mention-dropdown-item:hover {
  background-color: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-mention-dropdown-item.focus,
.ant-mention-dropdown-item-active {
  background-color: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-mention-dropdown-item-disabled {
  color: rgba(0, 0, 0, 0.25);
}
.ant-mention-dropdown-item-disabled:hover {
  color: rgba(0, 0, 0, 0.25);
  background-color: #fff;
}
.ant-mention-dropdown-item-selected,
.ant-mention-dropdown-item-selected:hover {
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.65);
}
.ant-mention-dropdown-item-divider {
  background-color: #e9e9e9;
}
.ant-menu {
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
  color: rgba(0, 0, 0, 0.65);
  background: #fff;
}
.ant-menu-item-group-title {
  color: rgba(0, 0, 0, 0.43);
}
.ant-menu-item:active,
.ant-menu-submenu-title:active {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-menu-item > a {
  color: rgba(0, 0, 0, 0.65);
}
.ant-menu-item > a:hover {
  color: @primary-color;
}
.ant-menu-item > a:before {
  background-color: transparent;
}
.ant-menu-item-divider {
  background-color: #e9e9e9;
}
.ant-menu-item:hover,
.ant-menu-item-active,
.ant-menu:not(.ant-menu-inline) .ant-menu-submenu-open,
.ant-menu-submenu-active,
.ant-menu-submenu-title:hover {
  color: @primary-color;
}
.ant-menu-horizontal > .ant-menu-item:hover,
.ant-menu-horizontal > .ant-menu-item-active,
.ant-menu-horizontal > .ant-menu-submenu .ant-menu-submenu-title:hover {
  background-color: transparent;
}
.ant-menu-item-selected {
  color: @primary-color;
}
.ant-menu-item-selected > a,
.ant-menu-item-selected > a:hover {
  color: @primary-color;
}
.ant-menu:not(.ant-menu-horizontal) .ant-menu-item-selected {
  background-color: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-menu-inline,
.ant-menu-vertical {
  border-right: 1px solid #e9e9e9;
}
.ant-menu-inline .ant-menu-item:after,
.ant-menu-vertical .ant-menu-item:after {
  border-right: 3px solid @primary-color;
}
.ant-menu-vertical.ant-menu-sub {
  border-right: 0;
}
.ant-menu-vertical.ant-menu-sub .ant-menu-item {
  border-right: 0;
}
.ant-menu-vertical.ant-menu-sub .ant-menu-item:after {
  border-right: 0;
}
.ant-menu-vertical.ant-menu-sub > .ant-menu-item:first-child {
  border-radius: 4px 4px 0 0;
}
.ant-menu-vertical.ant-menu-sub > .ant-menu-item:last-child,
.ant-menu-vertical.ant-menu-sub > .ant-menu-item-group:last-child > .ant-menu-item-group-list:last-child > .ant-menu-item:last-child {
  border-radius: 0 0 4px 4px;
}
.ant-menu-vertical.ant-menu-sub > .ant-menu-item:only-child {
  border-radius: 4px;
}
.ant-menu > .ant-menu-item-divider {
  background-color: #e9e9e9;
}
.ant-menu-submenu > .ant-menu {
  background-color: #fff;
  border-radius: 4px;
}
.ant-menu-vertical .ant-menu-submenu-selected {
  color: @primary-color;
}
.ant-menu-vertical .ant-menu-submenu-selected > a {
  color: @primary-color;
}
.ant-menu-horizontal {
  border: 0;
  border-bottom: 1px solid #e9e9e9;
  box-shadow: none;
}
.ant-menu-horizontal > .ant-menu-item,
.ant-menu-horizontal > .ant-menu-submenu {
  border-bottom: 2px solid transparent;
}
.ant-menu-horizontal > .ant-menu-item:hover,
.ant-menu-horizontal > .ant-menu-submenu:hover,
.ant-menu-horizontal > .ant-menu-item-active,
.ant-menu-horizontal > .ant-menu-submenu-active,
.ant-menu-horizontal > .ant-menu-item-open,
.ant-menu-horizontal > .ant-menu-submenu-open,
.ant-menu-horizontal > .ant-menu-item-selected,
.ant-menu-horizontal > .ant-menu-submenu-selected {
  border-bottom: 2px solid @primary-color;
  color: @primary-color;
}
.ant-menu-horizontal > .ant-menu-item > a,
.ant-menu-horizontal > .ant-menu-submenu > a {
  color: rgba(0, 0, 0, 0.65);
}
.ant-menu-horizontal > .ant-menu-item > a:hover,
.ant-menu-horizontal > .ant-menu-submenu > a:hover {
  color: @primary-color;
}
.ant-menu-inline-collapsed-tooltip a {
  color: rgba(255, 255, 255, 0.91);
}
.ant-menu-root.ant-menu-vertical,
.ant-menu-root.ant-menu-inline {
  box-shadow: none;
}
.ant-menu-sub.ant-menu-inline {
  border: 0;
  box-shadow: none;
  border-radius: 0;
}
.ant-menu-item-disabled,
.ant-menu-submenu-disabled {
  color: rgba(0, 0, 0, 0.25) !important;
  background: none;
  border-color: transparent !important;
}
.ant-menu-item-disabled > a,
.ant-menu-submenu-disabled > a {
  color: rgba(0, 0, 0, 0.25) !important;
}
.ant-menu-item-disabled > .ant-menu-submenu-title,
.ant-menu-submenu-disabled > .ant-menu-submenu-title {
  color: rgba(0, 0, 0, 0.25) !important;
}
.ant-menu-dark,
.ant-menu-dark .ant-menu-sub {
  color: rgba(255, 255, 255, 0.67);
  background: #404040;
}
.ant-menu-dark .ant-menu-inline.ant-menu-sub {
  background: #333;
}
.ant-menu-dark.ant-menu-horizontal {
  border-bottom-color: #404040;
}
.ant-menu-dark.ant-menu-horizontal > .ant-menu-item,
.ant-menu-dark.ant-menu-horizontal > .ant-menu-submenu {
  border-color: #404040;
  border-bottom: 0;
}
.ant-menu-dark .ant-menu-item,
.ant-menu-dark .ant-menu-item-group-title,
.ant-menu-dark .ant-menu-item > a {
  color: rgba(255, 255, 255, 0.67);
}
.ant-menu-dark.ant-menu-inline,
.ant-menu-dark.ant-menu-vertical {
  border-right: 0;
}
.ant-menu-dark.ant-menu-inline .ant-menu-item,
.ant-menu-dark.ant-menu-vertical .ant-menu-item {
  border-right: 0;
}
.ant-menu-dark.ant-menu-inline .ant-menu-item:after,
.ant-menu-dark.ant-menu-vertical .ant-menu-item:after {
  border-right: 0;
}
.ant-menu-dark .ant-menu-item:hover,
.ant-menu-dark .ant-menu-item-active,
.ant-menu-dark .ant-menu-submenu-active,
.ant-menu-dark:not(.ant-menu-inline) .ant-menu-submenu-open,
.ant-menu-dark .ant-menu-submenu-selected,
.ant-menu-dark .ant-menu-submenu-title:hover {
  background-color: transparent;
  color: #fff;
}
.ant-menu-dark .ant-menu-item:hover > a,
.ant-menu-dark .ant-menu-item-active > a,
.ant-menu-dark .ant-menu-submenu-active > a,
.ant-menu-dark:not(.ant-menu-inline) .ant-menu-submenu-open > a,
.ant-menu-dark .ant-menu-submenu-selected > a,
.ant-menu-dark .ant-menu-submenu-title:hover > a {
  color: #fff;
}
.ant-menu-dark .ant-menu-item-selected {
  border-right: 0;
  color: #fff;
}
.ant-menu-dark .ant-menu-item-selected:after {
  border-right: 0;
}
.ant-menu-dark .ant-menu-item-selected > a,
.ant-menu-dark .ant-menu-item-selected > a:hover {
  color: #fff;
}
.ant-menu.ant-menu-dark .ant-menu-item-selected {
  background-color: @primary-color;
}
.ant-menu-dark .ant-menu-item-disabled,
.ant-menu-dark .ant-menu-submenu-disabled,
.ant-menu-dark .ant-menu-item-disabled > a,
.ant-menu-dark .ant-menu-submenu-disabled > a {
  color: rgba(255, 255, 255, 0.35) !important;
}
.ant-menu-dark .ant-menu-item-disabled > .ant-menu-submenu-title,
.ant-menu-dark .ant-menu-submenu-disabled > .ant-menu-submenu-title {
  color: rgba(255, 255, 255, 0.35) !important;
}
.ant-message-notice-content {
  border-radius: 4px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  background: #fff;
}
.ant-message-success .anticon {
  color: #00a854;
}
.ant-message-error .anticon {
  color: #f04134;
}
.ant-message-warning .anticon {
  color: #ffbf00;
}
.ant-message-info .anticon,
.ant-message-loading .anticon {
  color: @primary-color;
}
.ant-modal-title {
  color: rgba(0, 0, 0, 0.85);
}
.ant-modal-content {
  background-color: #fff;
  border: 0;
  border-radius: 4px;
  background-clip: padding-box;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}
.ant-modal-close {
  border: 0;
  background: transparent;
  color: rgba(0, 0, 0, 0.43);
}
.ant-modal-close:focus,
.ant-modal-close:hover {
  color: #444;
}
.ant-modal-header {
  border-radius: 4px 4px 0 0;
  background: #fff;
  color: rgba(0, 0, 0, 0.65);
  border-bottom: 1px solid #e9e9e9;
}
.ant-modal-footer {
  border-top: 1px solid #e9e9e9;
  border-radius: 0 0 4px 4px;
}
.ant-modal-mask {
  background-color: #373737;
  background-color: rgba(55, 55, 55, 0.6);
}
.ant-confirm-body .ant-confirm-title {
  color: rgba(0, 0, 0, 0.65);
}
.ant-confirm-body .ant-confirm-content {
  color: rgba(0, 0, 0, 0.65);
}
.ant-confirm-error .ant-confirm-body > .anticon {
  color: #f04134;
}
.ant-confirm-warning .ant-confirm-body > .anticon,
.ant-confirm-confirm .ant-confirm-body > .anticon {
  color: #ffbf00;
}
.ant-confirm-info .ant-confirm-body > .anticon {
  color: @primary-color;
}
.ant-confirm-success .ant-confirm-body > .anticon {
  color: #00a854;
}
.ant-notification-notice {
  border-radius: 4px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  background: #fff;
}
.ant-notification-notice-message {
  color: rgba(0, 0, 0, 0.85);
}
.ant-notification-notice-message-single-line-auto-margin {
  background-color: transparent;
}
.ant-notification-notice-icon-success {
  color: #00a854;
}
.ant-notification-notice-icon-info {
  color: @primary-color;
}
.ant-notification-notice-icon-warning {
  color: #ffbf00;
}
.ant-notification-notice-icon-error {
  color: #f04134;
}
.ant-notification-notice-close {
  color: rgba(0, 0, 0, 0.43);
}
.ant-notification-notice-close:hover {
  color: #404040;
}
.ant-pagination-item {
  border-radius: 4px;
  border: 1px solid #d9d9d9;
  background-color: #fff;
}
.ant-pagination-item a {
  color: rgba(0, 0, 0, 0.65);
}
.ant-pagination-item:focus,
.ant-pagination-item:hover {
  border-color: @primary-color;
}
.ant-pagination-item:focus a,
.ant-pagination-item:hover a {
  color: @primary-color;
}
.ant-pagination-item-active {
  background-color: @primary-color;
  border-color: @primary-color;
}
.ant-pagination-item-active:focus,
.ant-pagination-item-active:hover {
  background-color: color(~`colorPalette("@{primary-color}", 5)`);
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-pagination-item-active a,
.ant-pagination-item-active:focus a,
.ant-pagination-item-active:hover a {
  color: #fff;
}
.ant-pagination-jump-prev:after,
.ant-pagination-jump-next:after {
  color: rgba(0, 0, 0, 0.25);
}
.ant-pagination-jump-prev:focus:after,
.ant-pagination-jump-next:focus:after,
.ant-pagination-jump-prev:hover:after,
.ant-pagination-jump-next:hover:after {
  color: @primary-color;
}
.ant-pagination-prev,
.ant-pagination-next,
.ant-pagination-jump-prev,
.ant-pagination-jump-next {
  color: rgba(0, 0, 0, 0.65);
  border-radius: 4px;
}
.ant-pagination-prev a,
.ant-pagination-next a {
  color: rgba(0, 0, 0, 0.65);
}
.ant-pagination-prev:hover a,
.ant-pagination-next:hover a {
  color: @primary-color;
}
.ant-pagination-prev .ant-pagination-item-link,
.ant-pagination-next .ant-pagination-item-link {
  border: 1px solid #d9d9d9;
  background-color: #fff;
  border-radius: 4px;
}
.ant-pagination-prev:focus .ant-pagination-item-link,
.ant-pagination-next:focus .ant-pagination-item-link,
.ant-pagination-prev:hover .ant-pagination-item-link,
.ant-pagination-next:hover .ant-pagination-item-link {
  border-color: @primary-color;
  color: @primary-color;
}
.ant-pagination-disabled a,
.ant-pagination-disabled:hover a,
.ant-pagination-disabled:focus a,
.ant-pagination-disabled .ant-pagination-item-link,
.ant-pagination-disabled:hover .ant-pagination-item-link,
.ant-pagination-disabled:focus .ant-pagination-item-link {
  border-color: #d9d9d9;
  color: rgba(0, 0, 0, 0.25);
}
.ant-pagination-options-quick-jumper input {
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
  background-image: none;
  border: 1px solid #d9d9d9;
  border-radius: 4px;
}
.ant-pagination-options-quick-jumper input::-moz-placeholder {
  color: #bfbfbf;
}
.ant-pagination-options-quick-jumper input:-ms-input-placeholder {
  color: #bfbfbf;
}
.ant-pagination-options-quick-jumper input::-webkit-input-placeholder {
  color: #bfbfbf;
}
.ant-pagination-options-quick-jumper input:hover {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-pagination-options-quick-jumper input:focus {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-pagination-options-quick-jumper input-disabled {
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-pagination-options-quick-jumper input-disabled:hover {
  border-color: #e2e2e2;
}
.ant-pagination-simple .ant-pagination-prev .ant-pagination-item-link,
.ant-pagination-simple .ant-pagination-next .ant-pagination-item-link {
  border: 0;
}
.ant-pagination-simple .ant-pagination-simple-pager input {
  background-color: #fff;
  border-radius: 4px;
  border: 1px solid #d9d9d9;
}
.ant-pagination-simple .ant-pagination-simple-pager input:hover {
  border-color: @primary-color;
}
.ant-pagination.mini .ant-pagination-item {
  border: 0;
}
.ant-pagination.mini .ant-pagination-prev .ant-pagination-item-link,
.ant-pagination.mini .ant-pagination-next .ant-pagination-item-link {
  border: 0;
}
.ant-popover:after {
  background: rgba(255, 255, 255, 0.01);
}
.ant-popover-inner {
  background-color: #fff;
  background-clip: padding-box;
  border-radius: 4px;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
}
.ant-popover-title {
  border-bottom: 1px solid #e9e9e9;
  color: rgba(0, 0, 0, 0.65);
}
.ant-popover-inner-content {
  color: rgba(0, 0, 0, 0.65);
}
.ant-popover-message {
  color: rgba(0, 0, 0, 0.65);
}
.ant-popover-message > .anticon {
  color: #ffbf00;
}
.ant-popover-arrow,
.ant-popover-arrow:after {
  border-color: transparent;
  border-style: solid;
}
.ant-popover-arrow {
  border-width: 5px;
}
.ant-popover-arrow:after {
  border-width: 4px;
}
.ant-popover-placement-top > .ant-popover-content > .ant-popover-arrow,
.ant-popover-placement-topLeft > .ant-popover-content > .ant-popover-arrow,
.ant-popover-placement-topRight > .ant-popover-content > .ant-popover-arrow {
  border-bottom-width: 0;
  border-top-color: rgba(217, 217, 217, 0.7);
}
.ant-popover-placement-top > .ant-popover-content > .ant-popover-arrow:after,
.ant-popover-placement-topLeft > .ant-popover-content > .ant-popover-arrow:after,
.ant-popover-placement-topRight > .ant-popover-content > .ant-popover-arrow:after {
  border-bottom-width: 0;
  border-top-color: #fff;
}
.ant-popover-placement-right > .ant-popover-content > .ant-popover-arrow,
.ant-popover-placement-rightTop > .ant-popover-content > .ant-popover-arrow,
.ant-popover-placement-rightBottom > .ant-popover-content > .ant-popover-arrow {
  border-left-width: 0;
  border-right-color: rgba(217, 217, 217, 0.7);
}
.ant-popover-placement-right > .ant-popover-content > .ant-popover-arrow:after,
.ant-popover-placement-rightTop > .ant-popover-content > .ant-popover-arrow:after,
.ant-popover-placement-rightBottom > .ant-popover-content > .ant-popover-arrow:after {
  border-left-width: 0;
  border-right-color: #fff;
}
.ant-popover-placement-bottom > .ant-popover-content > .ant-popover-arrow,
.ant-popover-placement-bottomLeft > .ant-popover-content > .ant-popover-arrow,
.ant-popover-placement-bottomRight > .ant-popover-content > .ant-popover-arrow {
  border-top-width: 0;
  border-bottom-color: rgba(217, 217, 217, 0.7);
}
.ant-popover-placement-bottom > .ant-popover-content > .ant-popover-arrow:after,
.ant-popover-placement-bottomLeft > .ant-popover-content > .ant-popover-arrow:after,
.ant-popover-placement-bottomRight > .ant-popover-content > .ant-popover-arrow:after {
  border-top-width: 0;
  border-bottom-color: #fff;
}
.ant-popover-placement-left > .ant-popover-content > .ant-popover-arrow,
.ant-popover-placement-leftTop > .ant-popover-content > .ant-popover-arrow,
.ant-popover-placement-leftBottom > .ant-popover-content > .ant-popover-arrow {
  border-right-width: 0;
  border-left-color: rgba(217, 217, 217, 0.7);
}
.ant-popover-placement-left > .ant-popover-content > .ant-popover-arrow:after,
.ant-popover-placement-leftTop > .ant-popover-content > .ant-popover-arrow:after,
.ant-popover-placement-leftBottom > .ant-popover-content > .ant-popover-arrow:after {
  border-right-width: 0;
  border-left-color: #fff;
}
.ant-progress-inner {
  background-color: #f7f7f7;
  border-radius: 100px;
}
.ant-progress-bg {
  border-radius: 100px;
  background-color: @primary-color;
}
.ant-progress-status-active .ant-progress-bg:before {
  background: #fff;
  border-radius: 10px;
}
.ant-progress-status-exception .ant-progress-bg {
  background-color: #f04134;
}
.ant-progress-status-exception .ant-progress-text {
  color: #f04134;
}
.ant-progress-status-success .ant-progress-bg {
  background-color: #00a854;
}
.ant-progress-status-success .ant-progress-text {
  color: #00a854;
}
.ant-progress-circle .ant-progress-inner {
  background-color: transparent;
}
.ant-progress-circle .ant-progress-status-exception .ant-progress-text {
  color: #f04134;
}
.ant-progress-circle .ant-progress-status-success .ant-progress-text {
  color: #00a854;
}
.ant-radio-wrapper:hover .ant-radio .ant-radio-inner,
.ant-radio:hover .ant-radio-inner,
.ant-radio-focused .ant-radio-inner {
  border-color: @primary-color;
}
.ant-radio-checked:after {
  border-radius: 50%;
  border: 1px solid @primary-color;
}
.ant-radio-inner {
  border-width: 1px;
  border-style: solid;
  border-radius: 14px;
  border-color: #d9d9d9;
  background-color: #fff;
}
.ant-radio-inner:after {
  border-radius: 4px;
  border-top: 0;
  border-left: 0;
  background-color: @primary-color;
}
.ant-radio-checked .ant-radio-inner {
  border-color: @primary-color;
}
.ant-radio-disabled .ant-radio-inner {
  border-color: #d9d9d9 !important;
  background-color: #f7f7f7;
}
.ant-radio-disabled .ant-radio-inner:after {
  background-color: #ccc;
}
.ant-radio-disabled + span {
  color: rgba(0, 0, 0, 0.25);
}
.ant-radio-button-wrapper {
  color: rgba(0, 0, 0, 0.65);
  border: 1px solid #d9d9d9;
  border-left: 0;
  background: #fff;
}
.ant-radio-button-wrapper a {
  color: rgba(0, 0, 0, 0.65);
}
.ant-radio-group-small .ant-radio-button-wrapper:first-child {
  border-radius: 2px 0 0 2px;
}
.ant-radio-group-small .ant-radio-button-wrapper:last-child {
  border-radius: 0 2px 2px 0;
}
.ant-radio-button-wrapper:not(:first-child)::before {
  background-color: #d9d9d9;
}
.ant-radio-button-wrapper:first-child {
  border-radius: 4px 0 0 4px;
  border-left: 1px solid #d9d9d9;
}
.ant-radio-button-wrapper:last-child {
  border-radius: 0 4px 4px 0;
}
.ant-radio-button-wrapper:first-child:last-child {
  border-radius: 4px;
}
.ant-radio-button-wrapper:hover,
.ant-radio-button-wrapper-focused {
  color: @primary-color;
}
.ant-radio-button-wrapper-checked {
  background: #fff;
  border-color: @primary-color;
  color: @primary-color;
  box-shadow: -1px 0 0 0 @primary-color;
}
.ant-radio-button-wrapper-checked::before {
  background-color: @primary-color !important;
}
.ant-radio-button-wrapper-checked:first-child {
  border-color: @primary-color;
  box-shadow: none !important;
}
.ant-radio-button-wrapper-checked:hover {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
  box-shadow: -1px 0 0 0 color(~`colorPalette("@{primary-color}", 5)`);
  color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-radio-button-wrapper-checked:active {
  border-color: color(~`colorPalette("@{primary-color}", 7)`);
  box-shadow: -1px 0 0 0 color(~`colorPalette("@{primary-color}", 7)`);
  color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-radio-button-wrapper-disabled {
  border-color: #d9d9d9;
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-radio-button-wrapper-disabled:first-child,
.ant-radio-button-wrapper-disabled:hover {
  border-color: #d9d9d9;
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-radio-button-wrapper-disabled:first-child {
  border-left-color: #d9d9d9;
}
.ant-radio-button-wrapper-disabled.ant-radio-button-wrapper-checked {
  color: #fff;
  background-color: #e6e6e6;
  border-color: #d9d9d9;
  box-shadow: none;
}
.ant-rate-star {
  color: #e9e9e9;
}
.ant-rate-star-half .ant-rate-star-first,
.ant-rate-star-full .ant-rate-star-second {
  color: #f5a623;
}
.ant-rate-star-half:hover .ant-rate-star-first,
.ant-rate-star-full:hover .ant-rate-star-second {
  color: #f7b84f;
}
.ant-select {
  color: rgba(0, 0, 0, 0.65);
}
.ant-select > ul > li > a {
  background-color: #fff;
}
.ant-select-arrow {
  color: rgba(0, 0, 0, 0.43);
}
.ant-select-selection {
  background-color: #fff;
  border-radius: 4px;
  border: 1px solid #d9d9d9;
}
.ant-select-selection:hover {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-select-focused .ant-select-selection,
.ant-select-selection:focus,
.ant-select-selection:active {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-select-selection__clear {
  background: #fff;
  color: rgba(0, 0, 0, 0.25);
}
.ant-select-selection__clear:hover {
  color: rgba(0, 0, 0, 0.43);
}
.ant-select-disabled {
  color: rgba(0, 0, 0, 0.25);
}
.ant-select-disabled .ant-select-selection {
  background: #f7f7f7;
}
.ant-select-disabled .ant-select-selection:hover,
.ant-select-disabled .ant-select-selection:focus,
.ant-select-disabled .ant-select-selection:active {
  border-color: #d9d9d9;
  box-shadow: none;
}
.ant-select-disabled .ant-select-selection--multiple .ant-select-selection__choice {
  background: #eee;
  color: #aaa;
}
.ant-select-disabled .ant-select-selection__choice__remove {
  color: rgba(0, 0, 0, 0.25);
}
.ant-select-disabled .ant-select-selection__choice__remove:hover {
  color: rgba(0, 0, 0, 0.25);
}
.ant-select-selection__placeholder,
.ant-select-search__field__placeholder {
  color: #bfbfbf;
}
.ant-select-search--inline .ant-select-search__field {
  border-width: 0;
  background: transparent;
  border-radius: 4px;
}
.ant-select-selection--multiple .ant-select-selection__choice {
  color: rgba(0, 0, 0, 0.65);
  background-color: #f3f3f3;
  border-radius: 4px;
}
.ant-select-selection--multiple .ant-select-selection__choice__remove {
  color: rgba(0, 0, 0, 0.43);
}
.ant-select-selection--multiple .ant-select-selection__choice__remove:hover {
  color: #404040;
}
.ant-select-open .ant-select-selection {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-select-combobox .ant-select-search__field {
  box-shadow: none;
}
.ant-select-dropdown {
  background-color: #fff;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
  border-radius: 4px;
}
.ant-select-dropdown-menu-item-group-title {
  color: rgba(0, 0, 0, 0.43);
}
.ant-select-dropdown-menu-item {
  color: rgba(0, 0, 0, 0.65);
}
.ant-select-dropdown-menu-item:hover {
  background-color: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-select-dropdown-menu-item-disabled {
  color: rgba(0, 0, 0, 0.25);
}
.ant-select-dropdown-menu-item-disabled:hover {
  color: rgba(0, 0, 0, 0.25);
  background-color: #fff;
}
.ant-select-dropdown-menu-item-selected,
.ant-select-dropdown-menu-item-selected:hover {
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.65);
}
.ant-select-dropdown-menu-item-active {
  background-color: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-select-dropdown-menu-item-divider {
  background-color: #e5e5e5;
}
.ant-select-dropdown.ant-select-dropdown--multiple .ant-select-dropdown-menu-item:after {
  color: transparent;
}
.ant-select-dropdown.ant-select-dropdown--multiple .ant-select-dropdown-menu-item:hover:after {
  color: #ddd;
}
.ant-select-dropdown.ant-select-dropdown--multiple .ant-select-dropdown-menu-item-selected:after,
.ant-select-dropdown.ant-select-dropdown--multiple .ant-select-dropdown-menu-item-selected:hover:after {
  color: @primary-color;
}
.ant-slider-rail {
  border-radius: 2px;
  background-color: #e9e9e9;
}
.ant-slider-track {
  border-radius: 4px;
  background-color: tint(@primary-color, 60%);
}
.ant-slider-handle {
  border-radius: 50%;
  border: solid 2px tint(@primary-color, 50%);
  background-color: #fff;
}
.ant-slider-handle:hover {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-slider-handle:active {
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-slider:hover .ant-slider-rail {
  background-color: #e1e1e1;
}
.ant-slider:hover .ant-slider-track {
  background-color: tint(@primary-color, 40%);
}
.ant-slider:hover .ant-slider-handle {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-slider-mark-text {
  color: rgba(0, 0, 0, 0.43);
}
.ant-slider-mark-text-active {
  color: rgba(0, 0, 0, 0.65);
}
.ant-slider-step {
  background: transparent;
}
.ant-slider-dot {
  border: 2px solid #e9e9e9;
  background-color: #fff;
  border-radius: 50%;
}
.ant-slider-dot-active {
  border-color: tint(@primary-color, 50%);
}
.ant-slider-disabled .ant-slider-track {
  background-color: rgba(0, 0, 0, 0.25) !important;
}
.ant-slider-disabled .ant-slider-handle,
.ant-slider-disabled .ant-slider-dot {
  border-color: rgba(0, 0, 0, 0.25) !important;
  background-color: #fff;
  box-shadow: none;
}
.ant-spin {
  color: @primary-color;
}
.ant-spin-blur:after {
  background: #fff;
}
.ant-spin-tip {
  color: rgba(0, 0, 0, 0.43);
}
.ant-spin-dot i {
  border-radius: 100%;
  background-color: @primary-color;
}
.ant-steps .ant-steps-item.ant-steps-status-wait .ant-steps-head-inner {
  border-color: rgba(0, 0, 0, 0.25);
  background-color: #fff;
}
.ant-steps .ant-steps-item.ant-steps-status-wait .ant-steps-head-inner > .ant-steps-icon {
  color: rgba(0, 0, 0, 0.25);
}
.ant-steps .ant-steps-item.ant-steps-status-wait .ant-steps-head-inner > .ant-steps-icon .ant-steps-icon-dot {
  background: rgba(0, 0, 0, 0.25);
}
.ant-steps .ant-steps-item.ant-steps-status-wait .ant-steps-title {
  color: rgba(0, 0, 0, 0.43);
}
.ant-steps .ant-steps-item.ant-steps-status-wait .ant-steps-description {
  color: rgba(0, 0, 0, 0.43);
}
.ant-steps .ant-steps-item.ant-steps-status-wait .ant-steps-tail > i {
  background-color: #e9e9e9;
}
.ant-steps .ant-steps-item.ant-steps-status-process .ant-steps-head-inner {
  border-color: @primary-color;
  background-color: @primary-color;
}
.ant-steps .ant-steps-item.ant-steps-status-process .ant-steps-head-inner > .ant-steps-icon {
  color: #fff;
}
.ant-steps .ant-steps-item.ant-steps-status-process .ant-steps-head-inner > .ant-steps-icon .ant-steps-icon-dot {
  background: @primary-color;
}
.ant-steps .ant-steps-item.ant-steps-status-process .ant-steps-title {
  color: rgba(0, 0, 0, 0.65);
}
.ant-steps .ant-steps-item.ant-steps-status-process .ant-steps-description {
  color: rgba(0, 0, 0, 0.65);
}
.ant-steps .ant-steps-item.ant-steps-status-process .ant-steps-tail > i {
  background-color: #e9e9e9;
}
.ant-steps .ant-steps-item.ant-steps-status-finish .ant-steps-head-inner {
  border-color: @primary-color;
  background-color: #fff;
}
.ant-steps .ant-steps-item.ant-steps-status-finish .ant-steps-head-inner > .ant-steps-icon {
  color: @primary-color;
}
.ant-steps .ant-steps-item.ant-steps-status-finish .ant-steps-head-inner > .ant-steps-icon .ant-steps-icon-dot {
  background: @primary-color;
}
.ant-steps .ant-steps-item.ant-steps-status-finish .ant-steps-tail > i:after {
  background: @primary-color;
  box-shadow: 0 0 0 0 @primary-color;
}
.ant-steps .ant-steps-item.ant-steps-status-finish .ant-steps-title {
  color: rgba(0, 0, 0, 0.43);
}
.ant-steps .ant-steps-item.ant-steps-status-finish .ant-steps-description {
  color: rgba(0, 0, 0, 0.43);
}
.ant-steps .ant-steps-item.ant-steps-status-error .ant-steps-head-inner {
  border-color: #f04134;
  background-color: #fff;
}
.ant-steps .ant-steps-item.ant-steps-status-error .ant-steps-head-inner > .ant-steps-icon {
  color: #f04134;
}
.ant-steps .ant-steps-item.ant-steps-status-error .ant-steps-head-inner > .ant-steps-icon .ant-steps-icon-dot {
  background: #f04134;
}
.ant-steps .ant-steps-item.ant-steps-status-error .ant-steps-title {
  color: #f04134;
}
.ant-steps .ant-steps-item.ant-steps-status-error .ant-steps-description {
  color: #f04134;
}
.ant-steps .ant-steps-item.ant-steps-status-error .ant-steps-tail > i {
  background-color: #e9e9e9;
}
.ant-steps .ant-steps-item.ant-steps-next-error .ant-steps-tail > i,
.ant-steps .ant-steps-item.ant-steps-next-error .ant-steps-tail > i:after {
  background-color: #f04134;
}
.ant-steps .ant-steps-item.ant-steps-custom .ant-steps-head-inner {
  background: none;
  border: 0;
}
.ant-steps .ant-steps-item.ant-steps-custom.ant-steps-status-process .ant-steps-head-inner > .ant-steps-icon {
  color: @primary-color;
}
.ant-steps .ant-steps-head {
  background: #fff;
}
.ant-steps .ant-steps-head-inner {
  border: 1px solid rgba(0, 0, 0, 0.25);
  border-radius: 26px;
}
.ant-steps .ant-steps-head-inner > .ant-steps-icon {
  color: @primary-color;
}
.ant-steps .ant-steps-title {
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
}
.ant-steps .ant-steps-title > a:first-child:last-child {
  color: rgba(0, 0, 0, 0.65);
}
.ant-steps .ant-steps-description {
  color: rgba(0, 0, 0, 0.43);
}
.ant-steps .ant-steps-tail > i {
  background: #e9e9e9;
  border-radius: 1px;
}
.ant-steps .ant-steps-tail > i:after {
  background: #e9e9e9;
}
.ant-steps.ant-steps-small .ant-steps-head-inner {
  border: 1px solid rgba(0, 0, 0, 0.25);
  border-radius: 18px;
}
.ant-steps.ant-steps-small .ant-steps-title {
  color: rgba(0, 0, 0, 0.65);
}
.ant-steps.ant-steps-small .ant-steps-description {
  color: rgba(0, 0, 0, 0.43);
}
.ant-steps.ant-steps-small .ant-steps-tail > i {
  border-radius: 1px;
}
.ant-steps-dot .ant-steps-head-inner {
  border: 0;
}
.ant-steps-dot .ant-steps-head-inner .ant-steps-icon-dot {
  border-radius: 2.5px;
}
.ant-steps-dot .ant-steps-head-inner .ant-steps-icon-dot:after {
  background: rgba(255, 255, 255, 0.001);
}
.ant-steps-dot .ant-steps-main .ant-steps-title {
  background-color: transparent;
}
.ant-steps-dot .ant-steps-status-process .ant-steps-head-inner .ant-steps-icon-dot {
  border-radius: 3.5px;
}
.ant-switch {
  border-radius: 20px;
  border: 1px solid transparent;
  background-color: rgba(0, 0, 0, 0.25);
}
.ant-switch-inner {
  color: #fff;
}
.ant-switch:after {
  border-radius: 18px;
  background-color: #fff;
}
.ant-switch:focus {
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-switch:focus:hover {
  box-shadow: none;
}
.ant-switch-checked {
  background-color: @primary-color;
}
.ant-switch-disabled {
  background: #f4f4f4;
}
.ant-switch-disabled:after {
  background: #ccc;
}
.ant-switch-disabled .ant-switch-inner {
  color: rgba(0, 0, 0, 0.25);
}
.ant-table {
  color: rgba(0, 0, 0, 0.65);
  border-radius: 4px 4px 0 0;
}
.ant-table table {
  border-collapse: separate;
  border-spacing: 0;
  border-radius: 4px 4px 0 0;
}
.ant-table-thead > tr > th {
  background: #f7f7f7;
  color: rgba(0, 0, 0, 0.85);
}
.ant-table-thead > tr > th .anticon-filter,
.ant-table-thead > tr > th .ant-table-filter-icon {
  color: #999;
}
.ant-table-thead > tr > th .anticon-filter:hover,
.ant-table-thead > tr > th .ant-table-filter-icon:hover {
  color: rgba(0, 0, 0, 0.65);
}
.ant-table-thead > tr > th .ant-table-filter-selected.anticon-filter {
  color: @primary-color;
}
.ant-table-tbody > tr > td {
  border-bottom: 1px solid #e9e9e9;
}
.ant-table-thead > tr.ant-table-row-hover > td,
.ant-table-tbody > tr.ant-table-row-hover > td,
.ant-table-thead > tr:hover > td,
.ant-table-tbody > tr:hover > td {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-table-thead > tr:hover {
  background: none;
}
.ant-table-footer {
  background: #f7f7f7;
  border-radius: 0 0 4px 4px;
}
.ant-table-footer:before {
  background: #f7f7f7;
}
.ant-table.ant-table-bordered .ant-table-footer {
  border: 1px solid #e9e9e9;
}
.ant-table-title {
  border-radius: 4px 4px 0 0;
}
.ant-table.ant-table-bordered .ant-table-title {
  border: 1px solid #e9e9e9;
}
.ant-table-title + .ant-table-content {
  border-radius: 4px 4px 0 0;
}
.ant-table-bordered .ant-table-title + .ant-table-content,
.ant-table-bordered .ant-table-title + .ant-table-content table {
  border-radius: 0;
}
.ant-table-without-column-header .ant-table-title + .ant-table-content,
.ant-table-without-column-header table {
  border-radius: 0;
}
.ant-table-tbody > tr.ant-table-row-selected {
  background: #fafafa;
}
.ant-table-thead > tr > th.ant-table-column-sort {
  background: #eee;
}
.ant-table-header {
  background: #f7f7f7;
}
.ant-table-header table {
  border-radius: 4px 4px 0 0;
}
.ant-table-loading .ant-table-body {
  background: #fff;
}
.ant-table-small {
  border: 1px solid #e9e9e9;
  border-radius: 4px;
}
.ant-table-small .ant-table-header > table,
.ant-table-small .ant-table-body > table {
  border: 0;
}
.ant-table-small .ant-table-thead > tr > th {
  background: #fff;
  border-bottom: 1px solid #e9e9e9;
}
.ant-table-small .ant-table-title {
  border-bottom: 1px solid #e9e9e9;
}
.ant-table-small .ant-table-header {
  background: #fff;
}
.ant-table-small .ant-table-placeholder,
.ant-table-small .ant-table-row:last-child td {
  border-bottom: 0;
}
.ant-table-column-sorter-up:hover .anticon,
.ant-table-column-sorter-down:hover .anticon {
  color: rgba(0, 0, 0, 0.65);
}
.ant-table-column-sorter-up.on .anticon-caret-up,
.ant-table-column-sorter-down.on .anticon-caret-up,
.ant-table-column-sorter-up.on .anticon-caret-down,
.ant-table-column-sorter-down.on .anticon-caret-down {
  color: @primary-color;
}
.ant-table-column-sorter .anticon-caret-up,
.ant-table-column-sorter .anticon-caret-down {
  color: #999;
}
.ant-table-bordered .ant-table-header > table,
.ant-table-bordered .ant-table-body > table,
.ant-table-bordered .ant-table-fixed-left table,
.ant-table-bordered .ant-table-fixed-right table {
  border: 1px solid #e9e9e9;
  border-right: 0;
  border-bottom: 0;
}
.ant-table-bordered.ant-table-empty .ant-table-placeholder {
  border-left: 1px solid #e9e9e9;
  border-right: 1px solid #e9e9e9;
}
.ant-table-bordered.ant-table-fixed-header .ant-table-header > table {
  border-bottom: 0;
}
.ant-table-bordered.ant-table-fixed-header .ant-table-body > table {
  border-top: 0;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.ant-table-bordered.ant-table-fixed-header .ant-table-body-inner > table {
  border-top: 0;
}
.ant-table-bordered.ant-table-fixed-header .ant-table-placeholder {
  border: 0;
}
.ant-table-bordered .ant-table-thead > tr > th {
  border-bottom: 1px solid #e9e9e9;
}
.ant-table-bordered .ant-table-thead > tr > th,
.ant-table-bordered .ant-table-tbody > tr > td {
  border-right: 1px solid #e9e9e9;
}
.ant-table-bordered.ant-table-small {
  border-right: 0;
}
.ant-table-bordered.ant-table-small .ant-table-header > table,
.ant-table-bordered.ant-table-small .ant-table-body > table,
.ant-table-bordered.ant-table-small .ant-table-fixed-left table,
.ant-table-bordered.ant-table-small .ant-table-fixed-right table {
  border: 0;
}
.ant-table-bordered.ant-table-small .ant-table-title {
  border: 0;
  border-bottom: 1px solid #e9e9e9;
  border-right: 1px solid #e9e9e9;
}
.ant-table-bordered.ant-table-small .ant-table-footer {
  border: 0;
  border-top: 1px solid #e9e9e9;
  border-right: 1px solid #e9e9e9;
}
.ant-table-bordered.ant-table-small .ant-table-placeholder {
  border-left: 0;
  border-bottom: 0;
}
.ant-table-placeholder {
  background: #fff;
  border-bottom: 1px solid #e9e9e9;
  color: rgba(0, 0, 0, 0.43);
}
.ant-table-filter-dropdown {
  background: #fff;
  border-radius: 4px;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
}
.ant-table-filter-dropdown .ant-dropdown-menu {
  border: 0;
  box-shadow: none;
  border-radius: 4px 4px 0 0;
}
.ant-table-filter-dropdown .ant-dropdown-menu-sub {
  border-radius: 4px;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
}
.ant-table-filter-dropdown .ant-dropdown-menu .ant-dropdown-submenu-contain-selected .ant-dropdown-menu-submenu-title:after {
  color: @primary-color;
}
.ant-table-filter-dropdown > .ant-dropdown-menu > .ant-dropdown-menu-item:last-child,
.ant-table-filter-dropdown > .ant-dropdown-menu > .ant-dropdown-menu-submenu:last-child .ant-dropdown-menu-submenu-title {
  border-radius: 0;
}
.ant-table-filter-dropdown-btns {
  border-top: 1px solid #e9e9e9;
}
.ant-table-filter-dropdown-link {
  color: @primary-color;
}
.ant-table-filter-dropdown-link:hover {
  color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-table-filter-dropdown-link:active {
  color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-table-selection .anticon-down {
  color: #999;
}
.ant-table-selection-menu {
  background: #fff;
  border-radius: 4px;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
}
.ant-table-selection-menu .ant-action-down {
  color: #999;
}
.ant-table-selection-down:hover .anticon-down {
  color: #666;
}
.ant-table-row-expand-icon {
  border: 1px solid #e9e9e9;
  background: #fff;
}
tr.ant-table-expanded-row,
tr.ant-table-expanded-row:hover {
  background: #fbfbfb;
}
.ant-table-fixed-header > .ant-table-content > .ant-table-scroll > .ant-table-body {
  background: #fff;
}
.ant-table-fixed-left,
.ant-table-fixed-right {
  border-radius: 0;
}
.ant-table-fixed-left table,
.ant-table-fixed-right table {
  background: #fff;
}
.ant-table-fixed-header .ant-table-fixed-left .ant-table-body-outer .ant-table-fixed,
.ant-table-fixed-header .ant-table-fixed-right .ant-table-body-outer .ant-table-fixed {
  border-radius: 0;
}
.ant-table-fixed-left {
  box-shadow: 6px 0 6px -4px rgba(0, 0, 0, 0.2);
}
.ant-table-fixed-left,
.ant-table-fixed-left table {
  border-radius: 4px 0 0 0;
}
.ant-table-fixed-right {
  box-shadow: -6px 0 6px -4px rgba(0, 0, 0, 0.2);
}
.ant-table-fixed-right,
.ant-table-fixed-right table {
  border-radius: 0 4px 0 0;
}
.ant-table-fixed-right .ant-table-expanded-row {
  color: transparent;
}
.ant-table.ant-table-scroll-position-left .ant-table-fixed-left {
  box-shadow: none;
}
.ant-table.ant-table-scroll-position-right .ant-table-fixed-right {
  box-shadow: none;
}
.ant-tabs.ant-tabs-card > .ant-tabs-bar .ant-tabs-tab {
  border: 1px solid #d9d9d9;
  border-bottom: 0;
  border-radius: 4px 4px 0 0;
  background: #f9f9f9;
}
.ant-tabs.ant-tabs-card > .ant-tabs-bar .ant-tabs-tab-active {
  background: #fff;
  border-color: #d9d9d9;
  color: @primary-color;
}
.ant-tabs.ant-tabs-card > .ant-tabs-bar .ant-tabs-tab .anticon-close {
  color: rgba(0, 0, 0, 0.43);
  border-radius: 2px;
}
.ant-tabs.ant-tabs-card > .ant-tabs-bar .ant-tabs-tab .anticon-close:hover {
  color: rgba(0, 0, 0, 0.85);
}
.ant-tabs-extra-content .ant-tabs-new-tab {
  border-radius: 4px;
  border: 1px solid #d9d9d9;
  color: rgba(0, 0, 0, 0.43);
}
.ant-tabs-extra-content .ant-tabs-new-tab:hover {
  color: @primary-color;
  border-color: @primary-color;
}
.ant-tabs-vertical.ant-tabs-card > .ant-tabs-bar .ant-tabs-tab {
  border-bottom: 1px solid #d9d9d9;
}
.ant-tabs-vertical.ant-tabs-card.ant-tabs-left > .ant-tabs-bar .ant-tabs-tab {
  border-right: 0;
  border-radius: 4px 0 0 4px;
}
.ant-tabs-vertical.ant-tabs-card.ant-tabs-right > .ant-tabs-bar .ant-tabs-tab {
  border-left: 0;
  border-radius: 0 4px 4px 0;
}
.ant-tabs {
  color: rgba(0, 0, 0, 0.65);
}
.ant-tabs-ink-bar {
  background-color: @primary-color;
}
.ant-tabs-bar {
  border-bottom: 1px solid #d9d9d9;
}
.ant-tabs-tab-prev,
.ant-tabs-tab-next {
  border: 0;
  background-color: transparent;
  color: rgba(0, 0, 0, 0.43);
}
.ant-tabs-tab-prev:hover,
.ant-tabs-tab-next:hover {
  color: rgba(0, 0, 0, 0.65);
}
.ant-tabs-tab-btn-disabled,
.ant-tabs-tab-btn-disabled:hover {
  color: rgba(0, 0, 0, 0.25);
}
.ant-tabs-nav .ant-tabs-tab-disabled {
  color: rgba(0, 0, 0, 0.25);
}
.ant-tabs-nav .ant-tabs-tab:hover {
  color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-tabs-nav .ant-tabs-tab:active {
  color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-tabs-nav .ant-tabs-tab-active {
  color: @primary-color;
}
.ant-tabs-vertical > .ant-tabs-bar {
  border-bottom: 0;
}
.ant-tabs-vertical.ant-tabs-left > .ant-tabs-bar {
  border-right: 1px solid #e9e9e9;
}
.ant-tabs-vertical.ant-tabs-left > .ant-tabs-content {
  border-left: 1px solid #e9e9e9;
}
.ant-tabs-vertical.ant-tabs-right > .ant-tabs-bar {
  border-left: 1px solid #e9e9e9;
}
.ant-tabs-vertical.ant-tabs-right > .ant-tabs-content {
  border-right: 1px solid #e9e9e9;
}
.ant-tag {
  border-radius: 4px;
  border: 1px solid #e9e9e9;
  background: #f3f3f3;
}
.ant-tag,
.ant-tag a,
.ant-tag a:hover {
  color: rgba(0, 0, 0, 0.65);
}
.ant-tag-has-color {
  border-color: transparent;
}
.ant-tag-has-color,
.ant-tag-has-color a,
.ant-tag-has-color a:hover,
.ant-tag-has-color .anticon-cross,
.ant-tag-has-color .anticon-cross:hover {
  color: #fff;
}
.ant-tag-checkable {
  background-color: transparent;
  border-color: transparent;
}
.ant-tag-checkable:not(.ant-tag-checkable-checked):hover {
  color: @primary-color;
}
.ant-tag-checkable:active,
.ant-tag-checkable-checked {
  color: #fff;
}
.ant-tag-checkable-checked {
  background-color: @primary-color;
}
.ant-tag-checkable:active {
  background-color: color(~`colorPalette("@{primary-color}", 7)`);
}
.ant-tag-pink {
  color: #f5317f;
  background: #fdd8e7;
  border-color: #fdd8e7;
}
.ant-tag-pink-inverse {
  background: #f5317f;
  border-color: #f5317f;
  color: #fff;
}
.ant-tag-red {
  color: #f04134;
  background: #fcdbd9;
  border-color: #fcdbd9;
}
.ant-tag-red-inverse {
  background: #f04134;
  border-color: #f04134;
  color: #fff;
}
.ant-tag-orange {
  color: #f56a00;
  background: #fde3cf;
  border-color: #fde3cf;
}
.ant-tag-orange-inverse {
  background: #f56a00;
  border-color: #f56a00;
  color: #fff;
}
.ant-tag-yellow {
  color: #ffbf00;
  background: #fff3cf;
  border-color: #fff3cf;
}
.ant-tag-yellow-inverse {
  background: #ffbf00;
  border-color: #ffbf00;
  color: #fff;
}
.ant-tag-cyan {
  color: #00a2ae;
  background: #cfedf0;
  border-color: #cfedf0;
}
.ant-tag-cyan-inverse {
  background: #00a2ae;
  border-color: #00a2ae;
  color: #fff;
}
.ant-tag-green {
  color: #00a854;
  background: #cfefdf;
  border-color: #cfefdf;
}
.ant-tag-green-inverse {
  background: #00a854;
  border-color: #00a854;
  color: #fff;
}
.ant-tag-blue {
  color: @primary-color;
  background: color(~`colorPalette("@{primary-color}", 2)`);
  border-color: color(~`colorPalette("@{primary-color}", 2)`);
}
.ant-tag-blue-inverse {
  background: @primary-color;
  border-color: @primary-color;
  color: #fff;
}
.ant-tag-purple {
  color: #7265e6;
  background: #e4e2fa;
  border-color: #e4e2fa;
}
.ant-tag-purple-inverse {
  background: #7265e6;
  border-color: #7265e6;
  color: #fff;
}
.ant-time-picker-panel-inner {
  background-color: #fff;
  border-radius: 4px;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
  background-clip: padding-box;
}
.ant-time-picker-panel-input {
  border: 0;
}
.ant-time-picker-panel-input::-moz-placeholder {
  color: #bfbfbf;
}
.ant-time-picker-panel-input:-ms-input-placeholder {
  color: #bfbfbf;
}
.ant-time-picker-panel-input::-webkit-input-placeholder {
  color: #bfbfbf;
}
.ant-time-picker-panel-input-wrap {
  border-bottom: 1px solid #e9e9e9;
}
.ant-time-picker-panel-input-invalid {
  border-color: red;
}
.ant-time-picker-panel-clear-btn:after {
  color: rgba(0, 0, 0, 0.25);
}
.ant-time-picker-panel-clear-btn:hover:after {
  color: rgba(0, 0, 0, 0.43);
}
.ant-time-picker-panel-select {
  border-left: 1px solid #e9e9e9;
}
.ant-time-picker-panel-select:first-child {
  border-left: 0;
}
.ant-time-picker-panel-select:last-child {
  border-right: 0;
}
.ant-time-picker-panel-select li:hover {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
li.ant-time-picker-panel-select-option-selected {
  background: #f7f7f7;
}
li.ant-time-picker-panel-select-option-selected:hover {
  background: #f7f7f7;
}
li.ant-time-picker-panel-select-option-disabled {
  color: rgba(0, 0, 0, 0.25);
}
li.ant-time-picker-panel-select-option-disabled:hover {
  background: transparent;
}
.ant-time-picker-panel-addon {
  border-top: 1px solid #e9e9e9;
}
.ant-time-picker-input {
  color: rgba(0, 0, 0, 0.65);
  background-color: #fff;
  background-image: none;
  border: 1px solid #d9d9d9;
  border-radius: 4px;
}
.ant-time-picker-input::-moz-placeholder {
  color: #bfbfbf;
}
.ant-time-picker-input:-ms-input-placeholder {
  color: #bfbfbf;
}
.ant-time-picker-input::-webkit-input-placeholder {
  color: #bfbfbf;
}
.ant-time-picker-input:hover {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-time-picker-input:focus {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
  box-shadow: 0 0 0 2px rgba(16, 142, 233, 0.2);
}
.ant-time-picker-input-disabled {
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-time-picker-input-disabled:hover {
  border-color: #e2e2e2;
}
.ant-time-picker-input[disabled] {
  background-color: #f7f7f7;
  color: rgba(0, 0, 0, 0.25);
}
.ant-time-picker-input[disabled]:hover {
  border-color: #e2e2e2;
}
.ant-time-picker-icon {
  color: rgba(0, 0, 0, 0.43);
}
.ant-time-picker-icon:after {
  color: rgba(0, 0, 0, 0.43);
}
.ant-timeline-item-tail {
  border-left: 2px solid #e9e9e9;
}
.ant-timeline-item-head {
  background-color: #fff;
  border-radius: 100px;
  border: 2px solid transparent;
}
.ant-timeline-item-head-blue {
  border-color: @primary-color;
  color: @primary-color;
}
.ant-timeline-item-head-red {
  border-color: #f04134;
  color: #f04134;
}
.ant-timeline-item-head-green {
  border-color: #00a854;
  color: #00a854;
}
.ant-timeline-item-head-custom {
  border: 0;
  border-radius: 0;
}
.ant-timeline-item-last .ant-timeline-item-tail {
  border-left: 2px dotted #e9e9e9;
}
.ant-tooltip-inner {
  color: #fff;
  background-color: rgba(0, 0, 0, 0.75);
  border-radius: 4px;
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);
}
.ant-tooltip-arrow {
  border-color: transparent;
  border-style: solid;
}
.ant-tooltip-placement-top .ant-tooltip-arrow,
.ant-tooltip-placement-topLeft .ant-tooltip-arrow,
.ant-tooltip-placement-topRight .ant-tooltip-arrow {
  border-width: 5px 5px 0;
  border-top-color: rgba(0, 0, 0, 0.75);
}
.ant-tooltip-placement-right .ant-tooltip-arrow,
.ant-tooltip-placement-rightTop .ant-tooltip-arrow,
.ant-tooltip-placement-rightBottom .ant-tooltip-arrow {
  border-width: 5px 5px 5px 0;
  border-right-color: rgba(0, 0, 0, 0.75);
}
.ant-tooltip-placement-left .ant-tooltip-arrow,
.ant-tooltip-placement-leftTop .ant-tooltip-arrow,
.ant-tooltip-placement-leftBottom .ant-tooltip-arrow {
  border-width: 5px 0 5px 5px;
  border-left-color: rgba(0, 0, 0, 0.75);
}
.ant-tooltip-placement-bottom .ant-tooltip-arrow,
.ant-tooltip-placement-bottomLeft .ant-tooltip-arrow,
.ant-tooltip-placement-bottomRight .ant-tooltip-arrow {
  border-width: 0 5px 5px;
  border-bottom-color: rgba(0, 0, 0, 0.75);
}
.ant-transfer-list {
  border: 1px solid #d9d9d9;
  border-radius: 4px;
}
.ant-transfer-list-search-action {
  color: rgba(0, 0, 0, 0.25);
}
.ant-transfer-list-search-action .anticon {
  color: rgba(0, 0, 0, 0.25);
}
.ant-transfer-list-search-action .anticon:hover {
  color: rgba(0, 0, 0, 0.43);
}
.ant-transfer-list-header {
  border-radius: 4px 4px 0 0;
  background: #fff;
  color: rgba(0, 0, 0, 0.65);
  border-bottom: 1px solid #e9e9e9;
}
.ant-transfer-list-content-item:not(.ant-transfer-list-content-item-disabled):hover {
  background-color: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-transfer-list-content-item-disabled {
  color: rgba(0, 0, 0, 0.25);
}
.ant-transfer-list-body-not-found {
  color: rgba(0, 0, 0, 0.25);
}
.ant-transfer-list-footer {
  border-top: 1px solid #e9e9e9;
  border-radius: 0 0 4px 4px;
}
.ant-select-tree-checkbox-wrapper:hover .ant-select-tree-checkbox-inner,
.ant-select-tree-checkbox:hover .ant-select-tree-checkbox-inner,
.ant-select-tree-checkbox-input:focus + .ant-select-tree-checkbox-inner {
  border-color: @primary-color;
}
.ant-select-tree-checkbox-checked:after {
  border-radius: 2px;
  border: 1px solid @primary-color;
}
.ant-select-tree-checkbox-inner {
  border: 1px solid #d9d9d9;
  border-radius: 2px;
  background-color: #fff;
}
.ant-select-tree-checkbox-inner:after {
  border: 2px solid #fff;
  border-top: 0;
  border-left: 0;
}
.ant-select-tree-checkbox-indeterminate.ant-select-tree-checkbox-disabled .ant-select-tree-checkbox-inner:after {
  border-color: rgba(0, 0, 0, 0.25);
}
.ant-select-tree-checkbox-checked .ant-select-tree-checkbox-inner:after {
  border: 2px solid #fff;
  border-top: 0;
  border-left: 0;
}
.ant-select-tree-checkbox-checked .ant-select-tree-checkbox-inner,
.ant-select-tree-checkbox-indeterminate .ant-select-tree-checkbox-inner {
  background-color: @primary-color;
  border-color: @primary-color;
}
.ant-select-tree-checkbox-disabled.ant-select-tree-checkbox-checked .ant-select-tree-checkbox-inner:after {
  border-color: rgba(0, 0, 0, 0.25);
}
.ant-select-tree-checkbox-disabled .ant-select-tree-checkbox-inner {
  border-color: #d9d9d9 !important;
  background-color: #f7f7f7;
}
.ant-select-tree-checkbox-disabled .ant-select-tree-checkbox-inner:after {
  border-color: #f7f7f7;
}
.ant-select-tree-checkbox-disabled + span {
  color: rgba(0, 0, 0, 0.25);
}
.ant-select-tree li .ant-select-tree-node-content-wrapper {
  border-radius: 2px;
  color: rgba(0, 0, 0, 0.65);
}
.ant-select-tree li .ant-select-tree-node-content-wrapper:hover {
  background-color: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-select-tree li .ant-select-tree-node-content-wrapper.ant-select-tree-node-selected {
  background-color: color(~`colorPalette("@{primary-color}", 2)`);
}
.ant-select-tree li span.ant-select-tree-switcher,
.ant-select-tree li span.ant-select-tree-iconEle {
  border: 0 none;
}
.ant-select-tree li span.ant-select-tree-icon_loading:after {
  color: @primary-color;
}
li.ant-select-tree-treenode-disabled > span,
li.ant-select-tree-treenode-disabled > .ant-select-tree-node-content-wrapper,
li.ant-select-tree-treenode-disabled > .ant-select-tree-node-content-wrapper span,
li.ant-select-tree-treenode-disabled > span.ant-select-tree-switcher {
  color: rgba(0, 0, 0, 0.25);
}
li.ant-select-tree-treenode-disabled > .ant-select-tree-node-content-wrapper:hover {
  background: transparent;
}
.ant-select-tree-dropdown .ant-select-dropdown-search .ant-select-search__field {
  border: 1px solid #d9d9d9;
  border-radius: 4px;
}
.ant-select-tree-dropdown .ant-select-not-found {
  color: rgba(0, 0, 0, 0.25);
}
.ant-tree-checkbox-wrapper:hover .ant-tree-checkbox-inner,
.ant-tree-checkbox:hover .ant-tree-checkbox-inner,
.ant-tree-checkbox-input:focus + .ant-tree-checkbox-inner {
  border-color: @primary-color;
}
.ant-tree-checkbox-checked:after {
  border-radius: 2px;
  border: 1px solid @primary-color;
}
.ant-tree-checkbox-inner {
  border: 1px solid #d9d9d9;
  border-radius: 2px;
  background-color: #fff;
}
.ant-tree-checkbox-inner:after {
  border: 2px solid #fff;
  border-top: 0;
  border-left: 0;
}
.ant-tree-checkbox-indeterminate.ant-tree-checkbox-disabled .ant-tree-checkbox-inner:after {
  border-color: rgba(0, 0, 0, 0.25);
}
.ant-tree-checkbox-checked .ant-tree-checkbox-inner:after {
  border: 2px solid #fff;
  border-top: 0;
  border-left: 0;
}
.ant-tree-checkbox-checked .ant-tree-checkbox-inner,
.ant-tree-checkbox-indeterminate .ant-tree-checkbox-inner {
  background-color: @primary-color;
  border-color: @primary-color;
}
.ant-tree-checkbox-disabled.ant-tree-checkbox-checked .ant-tree-checkbox-inner:after {
  border-color: rgba(0, 0, 0, 0.25);
}
.ant-tree-checkbox-disabled .ant-tree-checkbox-inner {
  border-color: #d9d9d9 !important;
  background-color: #f7f7f7;
}
.ant-tree-checkbox-disabled .ant-tree-checkbox-inner:after {
  border-color: #f7f7f7;
}
.ant-tree-checkbox-disabled + span {
  color: rgba(0, 0, 0, 0.25);
}
.ant-tree li span[draggable],
.ant-tree li span[draggable="true"] {
  border-top: 2px transparent solid;
  border-bottom: 2px transparent solid;
}
.ant-tree li.drag-over > span[draggable] {
  background-color: @primary-color;
  color: white;
}
.ant-tree li.drag-over-gap-top > span[draggable] {
  border-top-color: @primary-color;
}
.ant-tree li.drag-over-gap-bottom > span[draggable] {
  border-bottom-color: @primary-color;
}
.ant-tree li.filter-node > span {
  color: #f04134 !important;
}
.ant-tree li .ant-tree-node-content-wrapper {
  border-radius: 2px;
  color: rgba(0, 0, 0, 0.65);
}
.ant-tree li .ant-tree-node-content-wrapper:hover {
  background-color: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-tree li .ant-tree-node-content-wrapper.ant-tree-node-selected {
  background-color: color(~`colorPalette("@{primary-color}", 2)`);
}
.ant-tree li span.ant-tree-switcher,
.ant-tree li span.ant-tree-iconEle {
  border: 0 none;
}
.ant-tree li span.ant-tree-icon_loading {
  background: #fff;
}
.ant-tree li span.ant-tree-icon_loading:after {
  color: @primary-color;
}
li.ant-tree-treenode-disabled > span,
li.ant-tree-treenode-disabled > .ant-tree-node-content-wrapper,
li.ant-tree-treenode-disabled > .ant-tree-node-content-wrapper span,
li.ant-tree-treenode-disabled > span.ant-tree-switcher {
  color: rgba(0, 0, 0, 0.25);
}
li.ant-tree-treenode-disabled > .ant-tree-node-content-wrapper:hover {
  background: transparent;
}
.ant-tree.ant-tree-show-line li span.ant-tree-switcher {
  background: #fff;
  color: rgba(0, 0, 0, 0.65);
}
.ant-tree.ant-tree-show-line li span.ant-tree-switcher.ant-tree-switcher_open {
  color: rgba(0, 0, 0, 0.43);
}
.ant-tree.ant-tree-show-line li span.ant-tree-switcher.ant-tree-switcher_close {
  color: rgba(0, 0, 0, 0.43);
}
.ant-tree.ant-tree-show-line li:not(:last-child):before {
  border-left: 1px solid #d9d9d9;
}
.ant-upload.ant-upload-select-picture-card {
  border: 1px dashed #d9d9d9;
  border-radius: 4px;
  background-color: #fbfbfb;
}
.ant-upload.ant-upload-select-picture-card:hover {
  border-color: @primary-color;
}
.ant-upload.ant-upload-drag {
  border: 1px dashed #d9d9d9;
  border-radius: 4px;
}
.ant-upload.ant-upload-drag.ant-upload-drag-hover:not(.ant-upload-disabled) {
  border: 2px dashed color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-upload.ant-upload-drag:not(.ant-upload-disabled):hover {
  border-color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-upload.ant-upload-drag p.ant-upload-drag-icon .anticon {
  color: color(~`colorPalette("@{primary-color}", 5)`);
}
.ant-upload.ant-upload-drag p.ant-upload-hint {
  color: rgba(0, 0, 0, 0.43);
}
.ant-upload.ant-upload-drag .anticon-plus {
  color: rgba(0, 0, 0, 0.25);
}
.ant-upload.ant-upload-drag .anticon-plus:hover {
  color: rgba(0, 0, 0, 0.43);
}
.ant-upload.ant-upload-drag:hover .anticon-plus {
  color: rgba(0, 0, 0, 0.43);
}
.ant-upload-list-item-info .anticon-loading,
.ant-upload-list-item-info .anticon-paper-clip {
  color: rgba(0, 0, 0, 0.43);
}
.ant-upload-list-item .anticon-cross {
  color: rgba(0, 0, 0, 0.43);
}
.ant-upload-list-item .anticon-cross:hover {
  color: rgba(0, 0, 0, 0.65);
}
.ant-upload-list-item:hover .ant-upload-list-item-info {
  background-color: color(~`colorPalette("@{primary-color}", 1)`);
}
.ant-upload-list-item-error,
.ant-upload-list-item-error .anticon-paper-clip,
.ant-upload-list-item-error .ant-upload-list-item-name {
  color: #f04134;
}
.ant-upload-list-item-error .anticon-cross {
  color: #f04134 !important;
}
.ant-upload-list-picture .ant-upload-list-item,
.ant-upload-list-picture-card .ant-upload-list-item {
  border-radius: 4px;
  border: 1px solid #d9d9d9;
}
.ant-upload-list-picture .ant-upload-list-item:hover,
.ant-upload-list-picture-card .ant-upload-list-item:hover {
  background: transparent;
}
.ant-upload-list-picture .ant-upload-list-item-error,
.ant-upload-list-picture-card .ant-upload-list-item-error {
  border-color: #f04134;
}
.ant-upload-list-picture .ant-upload-list-item:hover .ant-upload-list-item-info,
.ant-upload-list-picture-card .ant-upload-list-item:hover .ant-upload-list-item-info {
  background: transparent;
}
.ant-upload-list-picture .ant-upload-list-item-uploading,
.ant-upload-list-picture-card .ant-upload-list-item-uploading {
  border-style: dashed;
}
.ant-upload-list-picture .ant-upload-list-item-thumbnail img,
.ant-upload-list-picture-card .ant-upload-list-item-thumbnail img {
  border-radius: 4px;
}
.ant-upload-list-picture .ant-upload-list-item-thumbnail.anticon:before,
.ant-upload-list-picture-card .ant-upload-list-item-thumbnail.anticon:before {
  color: rgba(0, 0, 0, 0.43);
}
.ant-upload-list-picture-card .ant-upload-list-item-info:before {
  background-color: rgba(0, 0, 0, 0.5);
}
.ant-upload-list-picture-card .ant-upload-list-item-actions .anticon-eye-o,
.ant-upload-list-picture-card .ant-upload-list-item-actions .anticon-delete {
  color: rgba(255, 255, 255, 0.91);
}
.ant-upload-list-picture-card .ant-upload-list-item-actions .anticon-eye-o:hover,
.ant-upload-list-picture-card .ant-upload-list-item-actions .anticon-delete:hover {
  color: #fff;
}
.ant-upload-list-picture-card .ant-upload-list-item-uploading.ant-upload-list-item {
  background-color: #fbfbfb;
}
.ant-upload-list-picture-card .ant-upload-list-item-uploading-text {
  color: rgba(0, 0, 0, 0.43);
}
.ant-upload-list .ant-upload-success-icon {
  color: #00a854;
}
body {
  color: rgba(0, 0, 0, 0.65);
  background: #fff;
}
.main-wrapper {
  background: #fff;
  border-radius: 4px;
}
.main-container {
  background: #fff;
  border-left: 1px solid #e9e9e9;
}
.aside-container a[disabled] {
  color: #ccc;
}
.aside-container .menu-item-link-outside .anticon {
  color: @primary-color;
}
.outside-link:after {
  color: #aaa;
}
.page-wrapper {
  background: #f0f2f5;
}
#header {
  background: #fff;
}
#header.home-nav-bottom {
  background: rgba(255, 255, 255, 0.9);
  border-bottom-color: #ebedee;
}
#header.home-nav-bottom .search {
  border-left-color: #ebedee;
}
#header.home-nav-bottom a {
  color: rgba(0, 0, 0, 0.65);
}
#header .header-link {
  color: rgba(0, 0, 0, 0.65);
}
#header .ant-menu-item-active .header-link {
  color: @primary-color;
}
#search-box {
  border-left: 1px solid #ebedee;
}
#search-box .ant-select-selection {
  border: 0;
  box-shadow: none;
}
#search-box .ant-input {
  border: 0;
  box-shadow: none;
}
#nav {
  border: 0;
}
#nav li {
  border-bottom-width: 3px;
}
#nav li.ant-menu-item-selected a {
  color: @primary-color;
}
.component-select.ant-select-dropdown {
  border: 0;
  border-radius: 0;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.25);
}
.component-select .ant-select-dropdown-menu-item {
  border-radius: 0 !important;
}
.component-select .ant-component-decs {
  color: #aaa;
}
footer {
  background: #fff;
  color: rgba(0, 0, 0, 0.65);
  box-shadow: 0 1000px 0 1000px #fff;
}
footer ul li > h2 > .anticon {
  color: #aaa;
}
.banner-wrapper {
  background: url("https://os.alipayobjects.com/rmsportal/GhjqstwSgxBXrZS.png") no-repeat center / cover;
}
.banner-text-wrapper {
  color: #fff;
}
.banner-text-wrapper h2 {
  color: #fff;
}
.banner-text-wrapper h2 p {
  color: #ff3171;
}
.banner-text-wrapper .line {
  background: rgba(255, 255, 255, 0.44);
  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.03), rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.03));
  background-image: -moz-linear-gradient(top, rgba(255, 255, 255, 0.03), rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.03));
  background-image: -ms-linear-gradient(top, rgba(255, 255, 255, 0.03), rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.03));
  background-image: -o-linear-gradient(top, rgba(255, 255, 255, 0.03), rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.03));
}
.banner-text-wrapper .start-button > a {
  border-radius: 4px;
  border: 1px solid tint(@primary-color, 20%);
  color: #0ae;
  background: transparent;
}
.banner-text-wrapper .start-button > a:hover {
  color: #fff;
  background: tint(@primary-color, 20%);
}
.banner-text-wrapper .github-btn a:hover {
  color: #333;
}
.down {
  color: rgba(255, 255, 255, 0.75);
}
.content-wrapper {
  background: #fff;
}
.content-wrapper .text-wrapper h2,
.content-wrapper .text-wrapper-bottom h2 {
  color: rgba(0, 0, 0, 0.65);
}
.content-wrapper .text-wrapper p {
  color: #999;
}
.image1 {
  background: url("https://t.alipayobjects.com/images/T1Ch8kXfpdXXXXXXXX.png") no-repeat right / 841px;
}
.image2 {
  background: url("https://t.alipayobjects.com/images/T1r5RkXotXXXXXXXXX.png") no-repeat left / 800px;
}
.image3 {
  background: url("https://t.alipayobjects.com/images/T1nx0kXdFfXXXXXXXX.png") no-repeat right / 639px;
  background-origin: content-box;
}
.image4 {
  background: url("https://t.alipayobjects.com/images/T1lyJkXg4aXXXXXXXX.png") no-repeat center / 615px;
}
.text-wrapper-bottom p {
  color: #999;
}
.prev-next-nav {
  border-top: 1px solid #e9e9e9;
}
.prev-next-nav > a.prev-page:before {
  color: rgba(0, 0, 0, 0.43);
}
.prev-next-nav > a.prev-page:hover:before {
  color: @primary-color;
}
.prev-next-nav > .next-page:after {
  color: rgba(0, 0, 0, 0.43);
}
.prev-next-nav > .next-page:hover:after {
  color: @primary-color;
}
.markdown {
  color: rgba(0, 0, 0, 0.65);
}
.markdown h1 {
  color: rgba(0, 0, 0, 0.85);
}
.markdown h2,
.markdown h3,
.markdown h4,
.markdown h5,
.markdown h6 {
  color: rgba(0, 0, 0, 0.85);
}
.markdown hr {
  border: 0;
  background: #e9e9e9;
}
.markdown code {
  background: #f7f7f7;
  border-radius: 3px;
  border: 1px solid #eee;
}
.markdown pre {
  border-radius: 4px;
  background: #f7f7f7;
}
.markdown pre code {
  border: none;
  background: #f7f7f7;
  color: rgba(0, 0, 0, 0.65);
}
.markdown > table {
  border-collapse: collapse;
  border-spacing: 0;
  border: 1px solid #e9e9e9;
}
.markdown > table th {
  color: #5c6b77;
}
.markdown > table th,
.markdown > table td {
  border: 1px solid #e9e9e9;
}
.markdown > table th {
  background: #f7f7f7;
}
.markdown blockquote {
  color: #999;
  border-left: 4px solid #e9e9e9;
}
.markdown .waiting {
  color: #ccc;
}
.markdown a.edit-button i {
  color: #999;
}
.markdown a.edit-button i:hover {
  color: @primary-color;
}
.markdown.api-container table td:first-child {
  background: #fcfcfc;
}
.grid-demo .demo-row,
[id^="components-grid-demo-"] .demo-row,
.grid-demo .code-box-demo .demo-row,
[id^="components-grid-demo-"] .code-box-demo .demo-row {
  background-image: linear-gradient(90deg, #f5f5f5 4.16666667%, transparent 4.16666667%, transparent 8.33333333%, #f5f5f5 8.33333333%, #f5f5f5 12.5%, transparent 12.5%, transparent 16.66666667%, #f5f5f5 16.66666667%, #f5f5f5 20.83333333%, transparent 20.83333333%, transparent 25%, #f5f5f5 25%, #f5f5f5 29.16666667%, transparent 29.16666667%, transparent 33.33333333%, #f5f5f5 33.33333333%, #f5f5f5 37.5%, transparent 37.5%, transparent 41.66666667%, #f5f5f5 41.66666667%, #f5f5f5 45.83333333%, transparent 45.83333333%, transparent 50%, #f5f5f5 50%, #f5f5f5 54.16666667%, transparent 54.16666667%, transparent 58.33333333%, #f5f5f5 58.33333333%, #f5f5f5 62.5%, transparent 62.5%, transparent 66.66666667%, #f5f5f5 66.66666667%, #f5f5f5 70.83333333%, transparent 70.83333333%, transparent 75%, #f5f5f5 75%, #f5f5f5 79.16666667%, transparent 79.16666667%, transparent 83.33333333%, #f5f5f5 83.33333333%, #f5f5f5 87.5%, transparent 87.5%, transparent 91.66666667%, #f5f5f5 91.66666667%, #f5f5f5 95.83333333%, transparent 95.83333333%);
}
.grid-demo .ant-row-flex,
[id^="components-grid-demo-"] .ant-row-flex,
.grid-demo .code-box-demo .ant-row-flex,
[id^="components-grid-demo-"] .code-box-demo .ant-row-flex {
  background: #f5f5f5;
}
.grid-demo .ant-row > div,
[id^="components-grid-demo-"] .ant-row > div,
.grid-demo .code-box-demo .ant-row > div,
[id^="components-grid-demo-"] .code-box-demo .ant-row > div,
.grid-demo .ant-row-flex > div,
[id^="components-grid-demo-"] .ant-row-flex > div,
.grid-demo .code-box-demo .ant-row-flex > div,
[id^="components-grid-demo-"] .code-box-demo .ant-row-flex > div {
  border-radius: 0;
  color: #fff;
}
.grid-demo .code-box-demo .ant-row > div:not(.gutter-row),
[id^="components-grid-demo-"] .code-box-demo .ant-row > div:not(.gutter-row),
.grid-demo .code-box-demo .ant-row-flex > div:not(.gutter-row),
[id^="components-grid-demo-"] .code-box-demo .ant-row-flex > div:not(.gutter-row) {
  background: #00a0e9;
}
.grid-demo .code-box-demo .ant-row > div:not(.gutter-row):nth-child(2n+1),
[id^="components-grid-demo-"] .code-box-demo .ant-row > div:not(.gutter-row):nth-child(2n+1),
.grid-demo .code-box-demo .ant-row-flex > div:not(.gutter-row):nth-child(2n+1),
[id^="components-grid-demo-"] .code-box-demo .ant-row-flex > div:not(.gutter-row):nth-child(2n+1) {
  background: rgba(0, 160, 233, 0.7);
}
.grid-demo .ant-row .demo-col,
[id^="components-grid-demo-"] .ant-row .demo-col,
.grid-demo .code-box-demo .ant-row .demo-col,
[id^="components-grid-demo-"] .code-box-demo .ant-row .demo-col {
  color: #fff;
  border: none;
}
.grid-demo .ant-row .demo-col-1,
[id^="components-grid-demo-"] .ant-row .demo-col-1,
.grid-demo .ant-row .demo-col-1,
[id^="components-grid-demo-"] .ant-row .demo-col-1 {
  background: rgba(0, 160, 233, 0.7);
}
.grid-demo .ant-row .demo-col-2,
[id^="components-grid-demo-"] .ant-row .demo-col-2,
.grid-demo .code-box-demo .ant-row .demo-col-2,
[id^="components-grid-demo-"] .code-box-demo .ant-row .demo-col-2 {
  background: rgba(0, 160, 233, 0.5);
}
.grid-demo .ant-row .demo-col-3,
[id^="components-grid-demo-"] .ant-row .demo-col-3,
.grid-demo .code-box-demo .ant-row .demo-col-3,
[id^="components-grid-demo-"] .code-box-demo .ant-row .demo-col-3 {
  background: rgba(255, 255, 255, 0.2);
  color: #999;
}
.grid-demo .ant-row .demo-col-4,
[id^="components-grid-demo-"] .ant-row .demo-col-4,
.grid-demo .code-box-demo .ant-row .demo-col-4,
[id^="components-grid-demo-"] .code-box-demo .ant-row .demo-col-4 {
  background: rgba(0, 160, 233, 0.6);
}
.grid-demo .ant-row .demo-col-5,
[id^="components-grid-demo-"] .ant-row .demo-col-5,
.grid-demo .code-box-demo .ant-row .demo-col-5,
[id^="components-grid-demo-"] .code-box-demo .ant-row .demo-col-5 {
  background: rgba(255, 255, 255, 0.5);
  color: #999;
}
.resource-card {
  border: 1px solid #e9e9e9;
  border-radius: 4px;
  color: #777;
}
.resource-card:hover {
  box-shadow: 0 3px 8px #d3ddeb;
  border-color: transparent;
}
.resource-card:hover .resource-card-title {
  color: @primary-color;
}
.resource-card-title {
  color: rgba(0, 0, 0, 0.65);
}
.resource-card-description {
  color: #999;
}
.preview-image-wrapper {
  background: #f7f7f7;
}
.preview-image-wrapper.video {
  background: 0;
}
.preview-image-wrapper.good:after {
  background: @primary-color;
}
.preview-image-wrapper.bad:after {
  background: #f04134;
}
.preview-image-title {
  color: rgba(0, 0, 0, 0.65);
}
.preview-image-description {
  color: rgba(0, 0, 0, 0.43);
}
.preview-image-description hr {
  border: 0;
  background: none;
}
.preview-image-box img {
  background: #fff;
  border-radius: 4px;
}
.preview-image-box img.no-padding {
  background: none;
}
.preview-image-boxes.preview-image-boxes-with-carousel img {
  box-shadow: 0 1px 0 0 #ddd, 0 3px 0 0 #fff, 0 4px 0 0 #ddd, 0 6px 0 0 #fff, 0 7px 0 0 #ddd;
}
.preview-image-box img:hover {
  box-shadow: 1px 1px 6px rgba(0, 0, 0, 0.3);
}
.image-modal .ant-carousel .slick-dots li button {
  background: #888;
}
.toc {
  border-left: 1px solid #e9e9e9;
}
.markdown .toc {
  background: #fbfbfb;
  border-left: 2px solid #eee;
}
.toc a {
  color: rgba(0, 0, 0, 0.65);
}
.toc a:hover {
  color: @primary-color;
}
.toc a.current {
  border-color: @primary-color;
  color: @primary-color;
}
.demos-anchor {
  color: #aaa;
  background-color: #fff;
}
#page-404 {
  background-image: url('https://os.alipayobjects.com/rmsportal/NOAjOBbnYCrNzrW.jpg');
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: center;
  background-size: 100%;
}
#page-404 h1 {
  color: @primary-color;
}
#page-404 p {
  color: rgba(0, 0, 0, 0.65);
}
pre code {
  background: white;
  color: rgba(0, 0, 0, 0.65);
  border: 1px solid #e9e9e9;
  border-radius: 4px;
}
code[class*="language-"],
pre[class*="language-"] {
  color: black;
  background: none;
}
pre[class*="language-"]::-moz-selection,
pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection,
code[class*="language-"] ::-moz-selection {
  background: #b3d4fc;
}
pre[class*="language-"]::selection,
pre[class*="language-"] ::selection,
code[class*="language-"]::selection,
code[class*="language-"] ::selection {
  background: #b3d4fc;
}
:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background: #f7f7f7;
}
:not(pre) > code[class*="language-"] {
  border-radius: .3em;
}
.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: slategray;
}
.token.punctuation {
  color: #999;
}
.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: #bb0606;
}
.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: #690;
}
.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: #690;
}
.token.atrule,
.token.attr-value,
.token.keyword {
  color: #07a;
}
.token.function {
  color: #dd4a68;
}
.token.regex,
.token.important,
.token.variable {
  color: #e90;
}
.code-box {
  border: 1px solid #e9e9e9;
  border-radius: 4px;
}
.code-box:target {
  border: 1px solid @primary-color;
}
.code-box-expand-trigger {
  color: #9199ac;
}
.code-box-expand-trigger-active {
  color: #3b4357;
}
.code-box-title {
  color: #777;
  border-radius: 4px 4px 0 0;
  background: #fff;
}
.code-box-title a,
.code-box-title a:hover {
  color: rgba(0, 0, 0, 0.65);
}
.code-box a.edit-button {
  background: #fff;
}
.code-box-demo {
  border-bottom: 1px solid #e9e9e9;
}
.code-box iframe {
  border: 0;
}
.code-box-meta.markdown {
  border-radius: 0 0 4px 4px;
}
.code-box.expand .code-box-meta {
  border-radius: 0;
  border-bottom: 1px dashed #e9e9e9;
}
.code-box .highlight-wrapper {
  border-radius: 0 0 4px 4px;
}
.code-box .highlight pre {
  background: #fff;
}
.code-box .highlight:not(:first-child) {
  border-top: 1px dashed #e9e9e9;
}
.code-box-code-copy {
  color: #222;
  background: #fff;
  border-radius: 20px;
}
.code-box-code-copy:hover {
  color: @primary-color;
}
.code-box-code-copy.anticon-check {
  color: #00a854 !important;
}
.code-box-codepen {
  background: transparent url("https://gw.alipayobjects.com/zos/rmsportal/bsyXYJlnerAkEMGKtTpa.svg") center / 14px no-repeat;
  border: 0;
}
.code-box-riddle {
  background: transparent url("https://zos.alipayobjects.com/rmsportal/WpXYyalbBFqfZEV.svg") center / 14px no-repeat;
  border: 0;
}
.code-box pre code {
  border: none;
  background: #fff;
}
.main-color-item {
  border-radius: 4px;
}
.color-title {
  color: #5c6b77;
}
.color-description {
  color: #777;
}
.main-color .palatte-blue-1 {
  background: color(~`colorPalette("@{primary-color}", 1)`);
}
.main-color .palatte-blue-2 {
  background: color(~`colorPalette("@{primary-color}", 2)`);
}
.main-color .palatte-blue-3 {
  background: #add8f7;
}
.main-color .palatte-blue-4 {
  background: #7ec2f3;
}
.main-color .palatte-blue-5 {
  background: color(~`colorPalette("@{primary-color}", 5)`);
}
.main-color .palatte-blue-6 {
  background: @primary-color;
}
.main-color .palatte-blue-7 {
  background: color(~`colorPalette("@{primary-color}", 7)`);
}
.main-color .palatte-blue-8 {
  background: #0c60aa;
}
.main-color .palatte-blue-9 {
  background: #09488a;
}
.main-color .palatte-blue-10 {
  background: #073069;
}
.main-color .palatte-purple-1 {
  background: #f4f3fd;
}
.main-color .palatte-purple-2 {
  background: #e4e2fa;
}
.main-color .palatte-purple-3 {
  background: #cfcaf6;
}
.main-color .palatte-purple-4 {
  background: #b3acf2;
}
.main-color .palatte-purple-5 {
  background: #948aec;
}
.main-color .palatte-purple-6 {
  background: #7265e6;
}
.main-color .palatte-purple-7 {
  background: #6252cd;
}
.main-color .palatte-purple-8 {
  background: #533eb4;
}
.main-color .palatte-purple-9 {
  background: #42299a;
}
.main-color .palatte-purple-10 {
  background: #321580;
}
.main-color .palatte-cyan-1 {
  background: #ebf8f9;
}
.main-color .palatte-cyan-2 {
  background: #cfedf0;
}
.main-color .palatte-cyan-3 {
  background: #a7dfe3;
}
.main-color .palatte-cyan-4 {
  background: #76cdd3;
}
.main-color .palatte-cyan-5 {
  background: #3db8c1;
}
.main-color .palatte-cyan-6 {
  background: #00a2ae;
}
.main-color .palatte-cyan-7 {
  background: #008997;
}
.main-color .palatte-cyan-8 {
  background: #00707f;
}
.main-color .palatte-cyan-9 {
  background: #005667;
}
.main-color .palatte-cyan-10 {
  background: #003c4e;
}
.main-color .palatte-green-1 {
  background: #ebf8f2;
}
.main-color .palatte-green-2 {
  background: #cfefdf;
}
.main-color .palatte-green-3 {
  background: #a7e1c4;
}
.main-color .palatte-green-4 {
  background: #76d0a3;
}
.main-color .palatte-green-5 {
  background: #3dbd7d;
}
.main-color .palatte-green-6 {
  background: #00a854;
}
.main-color .palatte-green-7 {
  background: #00924c;
}
.main-color .palatte-green-8 {
  background: #007b43;
}
.main-color .palatte-green-9 {
  background: #00643b;
}
.main-color .palatte-green-10 {
  background: #004c32;
}
.main-color .palatte-pink-1 {
  background: #feeff5;
}
.main-color .palatte-pink-2 {
  background: #fdd8e7;
}
.main-color .palatte-pink-3 {
  background: #fcb8d3;
}
.main-color .palatte-pink-4 {
  background: #fa90ba;
}
.main-color .palatte-pink-5 {
  background: #f7629e;
}
.main-color .palatte-pink-6 {
  background: #f5317f;
}
.main-color .palatte-pink-7 {
  background: #dc277d;
}
.main-color .palatte-pink-8 {
  background: #c11c7b;
}
.main-color .palatte-pink-9 {
  background: #a71278;
}
.main-color .palatte-pink-10 {
  background: #8c0776;
}
.main-color .palatte-red-1 {
  background: #fef0ef;
}
.main-color .palatte-red-2 {
  background: #fcdbd9;
}
.main-color .palatte-red-3 {
  background: #fabeb9;
}
.main-color .palatte-red-4 {
  background: #f79992;
}
.main-color .palatte-red-5 {
  background: #f46e65;
}
.main-color .palatte-red-6 {
  background: #f04134;
}
.main-color .palatte-red-7 {
  background: #d73435;
}
.main-color .palatte-red-8 {
  background: #bd2636;
}
.main-color .palatte-red-9 {
  background: #a31837;
}
.main-color .palatte-red-10 {
  background: #880a38;
}
.main-color .palatte-orange-1 {
  background: #fef3eb;
}
.main-color .palatte-orange-2 {
  background: #fde3cf;
}
.main-color .palatte-orange-3 {
  background: #fccca7;
}
.main-color .palatte-orange-4 {
  background: #faaf76;
}
.main-color .palatte-orange-5 {
  background: #f78e3d;
}
.main-color .palatte-orange-6 {
  background: #f56a00;
}
.main-color .palatte-orange-7 {
  background: #d75000;
}
.main-color .palatte-orange-8 {
  background: #b93600;
}
.main-color .palatte-orange-9 {
  background: #991b00;
}
.main-color .palatte-orange-10 {
  background: #7a0000;
}
.main-color .palatte-yellow-1 {
  background: #fffaeb;
}
.main-color .palatte-yellow-2 {
  background: #fff3cf;
}
.main-color .palatte-yellow-3 {
  background: #ffe9a7;
}
.main-color .palatte-yellow-4 {
  background: #ffdd76;
}
.main-color .palatte-yellow-5 {
  background: #ffce3d;
}
.main-color .palatte-yellow-6 {
  background: #ffbf00;
}
.main-color .palatte-yellow-7 {
  background: #e09a00;
}
.main-color .palatte-yellow-8 {
  background: #c17500;
}
.main-color .palatte-yellow-9 {
  background: #a04f00;
}
.main-color .palatte-yellow-10 {
  background: #802800;
}
.main-color .palatte-grey-1 {
  background: #fbfbfb;
}
.main-color .palatte-grey-2 {
  background: #f7f7f7;
}
.main-color .palatte-grey-3 {
  background: #f5f5f5;
}
.main-color .palatte-grey-4 {
  background: #e9e9e9;
}
.main-color .palatte-grey-5 {
  background: #d9d9d9;
}
.main-color .palatte-grey-6 {
  background: #bfbfbf;
}
.main-color .palatte-grey-7 {
  background: #919191;
}
.main-color .palatte-grey-8 {
  background: #5a5a5a;
}
.main-color .palatte-grey-9 {
  background: #404040;
}
.main-color .palatte-grey-10 {
  background: #222;
}
ul.anticons-list li {
  color: #555;
  border-radius: 4px;
  background-color: #fff;
}
ul.anticons-list li:hover {
  background-color: @primary-color;
  color: #fff;
}
ul.anticons-list li.copied:hover {
  color: rgba(255, 255, 255, 0.2);
}
ul.anticons-list li:after {
  color: #fff;
}
.browser-mockup {
  border-top: 2em solid rgba(230, 230, 230, 0.7);
  box-shadow: 0 0.1em 0.5em 0 rgba(0, 0, 0, 0.28);
  border-radius: 3px 3px 0 0;
}
.browser-mockup:before {
  border-radius: 50%;
  background-color: #f44;
  box-shadow: 0 0 0 2px #f44, 1.5em 0 0 2px #9b3, 3em 0 0 2px #fb5;
}
.browser-mockup.with-tab:after {
  border-bottom: 2em solid white;
  border-left: 0.8em solid transparent;
  border-right: 0.8em solid transparent;
}
.browser-mockup.with-url:after {
  border-radius: 2px;
  background-color: white;
}
.motion-example {
  color: #fff;
  border-radius: 8px;
  background: url(https://t.alipayobjects.com/images/rmsweb/T1B9hfXcdvXXXXXXXX.svg) center / 180px;
}
