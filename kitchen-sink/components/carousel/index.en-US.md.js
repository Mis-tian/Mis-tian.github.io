webpackJsonp([126],{359:function(t,e){t.exports={content:["section"],meta:{category:"Components",type:"Data Display",title:"Carousel",filename:"components/carousel/index.en-US.md"},api:["section",["h2","API"],["p","Support WEB, React-Native."],["table",["thead",["tr",["th","Properties"],["th","Descrition"],["th","Type"],["th","Default"]]],["tbody",["tr",["td","selectedIndex"],["td","current selected index"],["td","number"],["td","0"]],["tr",["td","dots"],["td","whether to display the indication dots"],["td","Boolean"],["td","true"]],["tr",["td","vertical"],["td","for web, this prop controls the content display direction\uff1b for react-native, controls the pagination display direction."],["td","Boolean"],["td","false"]],["tr",["td","autoplay"],["td","autoplay mode active"],["td","Boolean"],["td","false"]],["tr",["td","autoplayInterval"],["td","interval for autoplay iteration"],["td","Number"],["td","3000"]],["tr",["td","infinite"],["td","whether is infinite loop"],["td","Boolean"],["td","false"]],["tr",["td","afterChange"],["td","callback to be called after a slide is changed"],["td","(current: number): void"],["td"]],["tr",["td","dotStyle"],["td","style of dots"],["td","Object"],["td"]],["tr",["td","dotActiveStyle"],["td","style of active dot"],["td","Object"],["td"]],["tr",["td","frameOverflow (",["code","web only"],")"],["td","Used to set overflow style property on slider frame."],["td","string"],["td",["code","hidden"]]],["tr",["td","cellSpacing (",["code","web only"],")"],["td","Space between slides, as an integer, but reflected as ",["code","px"]],["td","number"],["td","-"]],["tr",["td","slideWidth (",["code","web only"],")"],["td","Manually set slideWidth. If you want hard pixel widths, use a string like ",["code",'slideWidth="20px"'],", and if you prefer a percentage of the container, use a decimal integer like ",["code","slideWidth={0.8}"]],["td","string / number"],["td","-"]],["tr",["td","easing (",["code","web only"],")"],["td","Animation easing function, see valid easings ",["a",{title:null,href:"https://github.com/chenglou/tween-functions"},"here"]],["td","Function"],["td","easeOutCirc"]],["tr",["td","swipeSpeed (",["code","web only"],")"],["td","configure the swipe sensitivity"],["td","number"],["td","12"]],["tr",["td","beforeChange (",["code","web only"],")"],["td","callback to be called before a slide is changed"],["td","(from: number, to: number): void"],["td"]],["tr",["td","onScrollBeginDrag (",["code","rn only"],")"],["td","as same as react-native scrollView ",["code","onScrollBeginDrag"]],["td","(): void"],["td","-"]],["tr",["td","bounces (",["code","rn only"],")"],["td","as same as react-native scrollView ",["code","bounces"]],["td","Boolean"],["td","true"]],["tr",["td","pagination (",["code","rn only"],")"],["td","A generator function which could be used to customized pagination."],["td","(props) => React.ReactNode"],["td"]]]]]}}});